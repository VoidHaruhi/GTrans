/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.87it/s]100%|██████████| 1/1 [00:00<00:00,  1.86it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.7728931903839111
Epoch 1: -0.7728931903839111
Mem used: 142MB
best_loss: tensor(-0.9489, device='cuda:1')
final loss: -0.9332630634307861
Test:
Test: 0.8179468242245199
0.8179468242245199
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.27it/s]100%|██████████| 1/1 [00:00<00:00,  3.26it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1: -0.7591961026191711
Mem used: 142MB
best_loss: tensor(-0.9485, device='cuda:1')
best_loss: tensor(-0.9490, device='cuda:1')
final loss: -0.9394162893295288
Test:
Test: 0.8197932053175776
0.8197932053175776
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.29it/s]100%|██████████| 1/1 [00:00<00:00,  2.28it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664062976837158
Epoch 1: -0.7664062976837158
Mem used: 142MB
best_loss: tensor(-0.9523, device='cuda:1')
best_loss: tensor(-0.9543, device='cuda:1')
final loss: -0.939115047454834
Test:
Test: 0.8053914327917282
0.8053914327917282
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.89it/s]100%|██████████| 1/1 [00:00<00:00,  2.88it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7767046093940735
Epoch 1: -0.7767046093940735
Mem used: 142MB
best_loss: tensor(-0.9489, device='cuda:1')
best_loss: tensor(-0.9507, device='cuda:1')
final loss: -0.942062497138977
Test:
Test: 0.7987444608567208
0.7987444608567208
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.40it/s]100%|██████████| 1/1 [00:00<00:00,  2.39it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883833646774292
Epoch 1: -0.7883833646774292
Mem used: 142MB
best_loss: tensor(-0.9541, device='cuda:1')
best_loss: tensor(-0.9546, device='cuda:1')
final loss: -0.9462630748748779
Test:
Test: 0.7710487444608567
0.7710487444608567
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.02it/s]100%|██████████| 1/1 [00:00<00:00,  3.01it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182762145996
Epoch 1: -0.7610182762145996
Mem used: 142MB
best_loss: tensor(-0.9448, device='cuda:1')
best_loss: tensor(-0.9451, device='cuda:1')
final loss: -0.9293482899665833
Test:
Test: 0.8227474150664698
0.8227474150664698
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.62it/s]100%|██████████| 1/1 [00:00<00:00,  2.62it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1: -0.7666859030723572
Mem used: 142MB
best_loss: tensor(-0.9501, device='cuda:1')
best_loss: tensor(-0.9504, device='cuda:1')
final loss: -0.9353559017181396
Test:
Test: 0.7939438700147711
0.7939438700147711
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.51it/s]100%|██████████| 1/1 [00:00<00:00,  1.51it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5979332327842712
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1: -0.7857076525688171
Mem used: 142MB
best_loss: tensor(-0.9537, device='cuda:1')
final loss: -0.9445836544036865
Test:
Test: 0.8172082717872969
0.8172082717872969
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.41it/s]100%|██████████| 1/1 [00:00<00:00,  2.38it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1: -0.7759597301483154
Mem used: 246MB
best_loss: tensor(-0.9441, device='cuda:1')
best_loss: tensor(-0.9445, device='cuda:1')
final loss: -0.94535231590271
Test:
Test: 0.7928360413589365
0.7928360413589365
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.52it/s]100%|██████████| 1/1 [00:00<00:00,  2.41it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1: -0.7855120301246643
Mem used: 142MB
best_loss: tensor(-0.9546, device='cuda:1')
best_loss: tensor(-0.9558, device='cuda:1')
final loss: -0.9506645202636719
Test:
Test: 0.7780649926144756
0.7780649926144756
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.97it/s]100%|██████████| 1/1 [00:00<00:00,  2.92it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.7728930711746216
Epoch 1: -0.7728930711746216
Mem used: 142MB
best_loss: tensor(-0.9518, device='cuda:1')
best_loss: tensor(-0.9520, device='cuda:1')
final loss: -0.9377478957176208
Test:
Test: 0.8238552437223042
0.8238552437223042
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.11it/s]100%|██████████| 1/1 [00:00<00:00,  3.10it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1: -0.7591961026191711
Mem used: 142MB
best_loss: tensor(-0.9513, device='cuda:1')
final loss: -0.9419565796852112
Test:
Test: 0.8290251107828656
0.8290251107828656
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.51it/s]100%|██████████| 1/1 [00:00<00:00,  2.51it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664062976837158
Epoch 1: -0.7664062976837158
Mem used: 274MB
best_loss: tensor(-0.9559, device='cuda:1')
best_loss: tensor(-0.9560, device='cuda:1')
final loss: -0.9420042634010315
Test:
Test: 0.8112998522895125
0.8112998522895125
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.98it/s]100%|██████████| 1/1 [00:00<00:00,  1.97it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.776704728603363
Epoch 1: -0.776704728603363
Mem used: 142MB
best_loss: tensor(-0.9525, device='cuda:1')
best_loss: tensor(-0.9525, device='cuda:1')
final loss: -0.9464030265808105
Test:
Test: 0.8039143279172821
0.8039143279172821
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.70it/s]100%|██████████| 1/1 [00:00<00:00,  1.70it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883833646774292
Epoch 1: -0.7883833646774292
Mem used: 142MB
best_loss: tensor(-0.9573, device='cuda:1')
best_loss: tensor(-0.9574, device='cuda:1')
final loss: -0.9511486291885376
Test:
Test: 0.7754800590841949
0.7754800590841949
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.70it/s]100%|██████████| 1/1 [00:00<00:00,  2.69it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182762145996
Epoch 1: -0.7610182762145996
Mem used: 256MB
best_loss: tensor(-0.9473, device='cuda:1')
best_loss: tensor(-0.9474, device='cuda:1')
final loss: -0.9310783743858337
Test:
Test: 0.829394387001477
0.829394387001477
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.75it/s]100%|██████████| 1/1 [00:00<00:00,  1.75it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1: -0.7666859030723572
Mem used: 142MB
best_loss: tensor(-0.9524, device='cuda:1')
best_loss: tensor(-0.9524, device='cuda:1')
final loss: -0.9397385120391846
Test:
Test: 0.80096011816839
0.80096011816839
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.62it/s]100%|██████████| 1/1 [00:00<00:00,  2.61it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1: -0.7857076525688171
Mem used: 142MB
best_loss: tensor(-0.9561, device='cuda:1')
best_loss: tensor(-0.9562, device='cuda:1')
final loss: -0.944972813129425
Test:
Test: 0.8290251107828656
0.8290251107828656
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.00it/s]100%|██████████| 1/1 [00:00<00:00,  2.00it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1: -0.7759597301483154
Mem used: 142MB
best_loss: tensor(-0.9469, device='cuda:1')
final loss: -0.9499910473823547
Test:
Test: 0.794682422451994
0.794682422451994
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.83it/s]100%|██████████| 1/1 [00:00<00:00,  2.82it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1: -0.7855120301246643
Mem used: 248MB
best_loss: tensor(-0.9568, device='cuda:1')
best_loss: tensor(-0.9570, device='cuda:1')
final loss: -0.954602062702179
Test:
Test: 0.7872968980797637
0.7872968980797637
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.62it/s]100%|██████████| 2/2 [00:00<00:00,  3.01it/s]100%|██████████| 2/2 [00:00<00:00,  2.95it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.7728930711746216
Epoch 1, Loop Feat 0: -0.768468976020813
Epoch 1, Loop Adj 0: -0.8179749250411987
Epoch 2: -0.8179749250411987
Mem used: 142MB
best_loss: tensor(-0.9590, device='cuda:1')
best_loss: tensor(-0.9591, device='cuda:1')
final loss: -0.9525384902954102
Test:
Test: 0.731536189069424
0.731536189069424
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.77it/s]100%|██████████| 2/2 [00:00<00:00,  2.88it/s]100%|██████████| 2/2 [00:00<00:00,  2.86it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1, Loop Feat 0: -0.760803759098053
Epoch 1, Loop Adj 0: -0.8140650987625122
Epoch 2: -0.8140650987625122
Mem used: 142MB
best_loss: tensor(-0.9606, device='cuda:1')
final loss: -0.9559654593467712
Test:
Test: 0.7492614475627769
0.7492614475627769
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.99it/s]100%|██████████| 2/2 [00:00<00:00,  2.41it/s]100%|██████████| 2/2 [00:00<00:00,  2.33it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664062976837158
Epoch 1, Loop Feat 0: -0.7615368962287903
Epoch 1, Loop Adj 0: -0.8018869161605835
Epoch 2: -0.8018869161605835
Mem used: 816MB
best_loss: tensor(-0.9601, device='cuda:1')
best_loss: tensor(-0.9604, device='cuda:1')
final loss: -0.9575690031051636
Test:
Test: 0.7326440177252584
0.7326440177252584
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.87it/s]100%|██████████| 2/2 [00:00<00:00,  2.90it/s]100%|██████████| 2/2 [00:00<00:00,  2.90it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.776704728603363
Epoch 1, Loop Feat 0: -0.7788639068603516
Epoch 1, Loop Adj 0: -0.8166881203651428
Epoch 2: -0.8166881203651428
Mem used: 340MB
best_loss: tensor(-0.9575, device='cuda:1')
final loss: -0.9550919532775879
Test:
Test: 0.7060561299852289
0.7060561299852289
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.87it/s]100%|██████████| 2/2 [00:01<00:00,  1.94it/s]100%|██████████| 2/2 [00:01<00:00,  1.91it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883834838867188
Epoch 1, Loop Feat 0: -0.7833572030067444
Epoch 1, Loop Adj 0: -0.8412797451019287
Epoch 2: -0.8412797451019287
Mem used: 346MB
best_loss: tensor(-0.9590, device='cuda:1')
final loss: -0.9617605209350586
Test:
Test: 0.6994091580502215
0.6994091580502215
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.34it/s]100%|██████████| 2/2 [00:00<00:00,  3.28it/s]100%|██████████| 2/2 [00:00<00:00,  3.19it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182762145996
Epoch 1, Loop Feat 0: -0.7635520100593567
Epoch 1, Loop Adj 0: -0.8178252577781677
Epoch 2: -0.8178252577781677
Mem used: 372MB
best_loss: tensor(-0.9603, device='cuda:1')
final loss: -0.9552223086357117
Test:
Test: 0.73301329394387
0.73301329394387
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.47it/s]100%|██████████| 2/2 [00:00<00:00,  2.80it/s]100%|██████████| 2/2 [00:00<00:00,  2.72it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1, Loop Feat 0: -0.7659592628479004
Epoch 1, Loop Adj 0: -0.8063692450523376
Epoch 2: -0.8063692450523376
Mem used: 471MB
best_loss: tensor(-0.9569, device='cuda:1')
final loss: -0.9531190395355225
Test:
Test: 0.7101181683899557
0.7101181683899557
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.38it/s]100%|██████████| 2/2 [00:00<00:00,  2.18it/s]100%|██████████| 2/2 [00:00<00:00,  2.15it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1, Loop Feat 0: -0.7881970405578613
Epoch 1, Loop Adj 0: -0.8253663778305054
Epoch 2: -0.8253663778305054
Mem used: 142MB
best_loss: tensor(-0.9636, device='cuda:1')
final loss: -0.9589360356330872
Test:
Test: 0.7352289512555391
0.7352289512555391
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.85it/s]100%|██████████| 2/2 [00:00<00:00,  3.10it/s]100%|██████████| 2/2 [00:00<00:00,  3.05it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1, Loop Feat 0: -0.7746825814247131
Epoch 1, Loop Adj 0: -0.8256489038467407
Epoch 2: -0.8256489038467407
Mem used: 142MB
best_loss: tensor(-0.9535, device='cuda:1')
best_loss: tensor(-0.9538, device='cuda:1')
final loss: -0.9611144065856934
Test:
Test: 0.7086410635155096
0.7086410635155096
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.90it/s]100%|██████████| 2/2 [00:00<00:00,  2.06it/s]100%|██████████| 2/2 [00:00<00:00,  2.12it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1, Loop Feat 0: -0.7812272906303406
Epoch 1, Loop Adj 0: -0.8335456848144531
Epoch 2: -0.8335456848144531
Mem used: 142MB
best_loss: tensor(-0.9599, device='cuda:1')
best_loss: tensor(-0.9600, device='cuda:1')
final loss: -0.9598782062530518
Test:
Test: 0.69903988183161
0.69903988183161
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.93it/s]100%|██████████| 2/2 [00:00<00:00,  2.18it/s]100%|██████████| 2/2 [00:00<00:00,  2.26it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.7728931903839111
Epoch 1, Loop Feat 0: -0.7684719562530518
Epoch 1, Loop Adj 0: -0.818071722984314
Epoch 2: -0.818071722984314
Mem used: -1782MB
best_loss: tensor(-0.9580, device='cuda:1')
final loss: -0.9499190449714661
Test:
Test: 0.7274741506646972
0.7274741506646972
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.44it/s]100%|██████████| 2/2 [00:00<00:00,  2.51it/s]100%|██████████| 2/2 [00:00<00:00,  2.50it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1, Loop Feat 0: -0.7610218524932861
Epoch 1, Loop Adj 0: -0.8145816922187805
Epoch 2: -0.8145816922187805
Mem used: 324MB
best_loss: tensor(-0.9586, device='cuda:1')
best_loss: tensor(-0.9589, device='cuda:1')
final loss: -0.9542431235313416
Test:
Test: 0.7492614475627769
0.7492614475627769
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.75it/s]100%|██████████| 2/2 [00:00<00:00,  3.21it/s]100%|██████████| 2/2 [00:00<00:00,  3.13it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664062976837158
Epoch 1, Loop Feat 0: -0.761951208114624
Epoch 1, Loop Adj 0: -0.8025845885276794
Epoch 2: -0.8025845885276794
Mem used: 142MB
best_loss: tensor(-0.9586, device='cuda:1')
final loss: -0.956362247467041
Test:
Test: 0.7293205317577548
0.7293205317577548
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.70it/s]100%|██████████| 2/2 [00:00<00:00,  2.65it/s]100%|██████████| 2/2 [00:00<00:00,  2.64it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7767046093940735
Epoch 1, Loop Feat 0: -0.7792407274246216
Epoch 1, Loop Adj 0: -0.8168457746505737
Epoch 2: -0.8168457746505737
Mem used: 142MB
best_loss: tensor(-0.9560, device='cuda:1')
best_loss: tensor(-0.9567, device='cuda:1')
final loss: -0.9541729092597961
Test:
Test: 0.7031019202363368
0.7031019202363368
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.54it/s]100%|██████████| 2/2 [00:00<00:00,  2.17it/s]100%|██████████| 2/2 [00:00<00:00,  2.22it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883834838867188
Epoch 1, Loop Feat 0: -0.7836750745773315
Epoch 1, Loop Adj 0: -0.8416458964347839
Epoch 2: -0.8416458964347839
Mem used: 142MB
best_loss: tensor(-0.9569, device='cuda:1')
final loss: -0.9602658748626709
Test:
Test: 0.6953471196454948
0.6953471196454948
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.70it/s]100%|██████████| 2/2 [00:00<00:00,  2.82it/s]100%|██████████| 2/2 [00:00<00:00,  2.73it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182762145996
Epoch 1, Loop Feat 0: -0.7635460495948792
Epoch 1, Loop Adj 0: -0.8181043863296509
Epoch 2: -0.8181043863296509
Mem used: 142MB
best_loss: tensor(-0.9583, device='cuda:1')
best_loss: tensor(-0.9587, device='cuda:1')
final loss: -0.9539253115653992
Test:
Test: 0.7282127031019202
0.7282127031019202
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.59it/s]100%|██████████| 2/2 [00:00<00:00,  2.25it/s]100%|██████████| 2/2 [00:00<00:00,  2.29it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1, Loop Feat 0: -0.7662151455879211
Epoch 1, Loop Adj 0: -0.806829035282135
Epoch 2: -0.806829035282135
Mem used: 400MB
best_loss: tensor(-0.9551, device='cuda:1')
final loss: -0.9511283040046692
Test:
Test: 0.7049483013293943
0.7049483013293943
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.85it/s]100%|██████████| 2/2 [00:00<00:00,  2.42it/s]100%|██████████| 2/2 [00:00<00:00,  2.31it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1, Loop Feat 0: -0.7883488535881042
Epoch 1, Loop Adj 0: -0.8256969451904297
Epoch 2: -0.8256969451904297
Mem used: 342MB
best_loss: tensor(-0.9613, device='cuda:1')
best_loss: tensor(-0.9622, device='cuda:1')
final loss: -0.9560227990150452
Test:
Test: 0.7300590841949779
0.7300590841949779
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.09it/s]100%|██████████| 2/2 [00:00<00:00,  2.55it/s]100%|██████████| 2/2 [00:00<00:00,  2.60it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1, Loop Feat 0: -0.7748376727104187
Epoch 1, Loop Adj 0: -0.8255760669708252
Epoch 2: -0.8255760669708252
Mem used: 270MB
best_loss: tensor(-0.9512, device='cuda:1')
best_loss: tensor(-0.9515, device='cuda:1')
final loss: -0.9587757587432861
Test:
Test: 0.69903988183161
0.69903988183161
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.59it/s]100%|██████████| 2/2 [00:00<00:00,  2.07it/s]100%|██████████| 2/2 [00:00<00:00,  2.14it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1, Loop Feat 0: -0.7817699313163757
Epoch 1, Loop Adj 0: -0.8336712121963501
Epoch 2: -0.8336712121963501
Mem used: 508MB
best_loss: tensor(-0.9571, device='cuda:1')
best_loss: tensor(-0.9586, device='cuda:1')
final loss: -0.9569324254989624
Test:
Test: 0.69903988183161
0.69903988183161
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.03it/s]100%|██████████| 2/2 [00:00<00:00,  2.44it/s]100%|██████████| 2/2 [00:00<00:00,  2.46it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.7728930711746216
Epoch 1, Loop Feat 0: -0.7684437036514282
Epoch 1, Loop Adj 0: -0.8179531097412109
Epoch 2: -0.8179531097412109
Mem used: 142MB
best_loss: tensor(-0.9597, device='cuda:1')
final loss: -0.9539348483085632
Test:
Test: 0.733751846381093
0.733751846381093
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.70it/s]100%|██████████| 2/2 [00:00<00:00,  2.76it/s]100%|██████████| 2/2 [00:00<00:00,  2.75it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1, Loop Feat 0: -0.760723352432251
Epoch 1, Loop Adj 0: -0.8141334056854248
Epoch 2: -0.8141334056854248
Mem used: 144MB
best_loss: tensor(-0.9604, device='cuda:1')
best_loss: tensor(-0.9604, device='cuda:1')
final loss: -0.9578402638435364
Test:
Test: 0.7492614475627769
0.7492614475627769
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.32it/s]100%|██████████| 2/2 [00:00<00:00,  2.71it/s]100%|██████████| 2/2 [00:00<00:00,  2.64it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664062976837158
Epoch 1, Loop Feat 0: -0.761422872543335
Epoch 1, Loop Adj 0: -0.8017563223838806
Epoch 2: -0.8017563223838806
Mem used: 142MB
best_loss: tensor(-0.9609, device='cuda:1')
best_loss: tensor(-0.9609, device='cuda:1')
final loss: -0.9585747122764587
Test:
Test: 0.731536189069424
0.731536189069424
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.53it/s]100%|██████████| 2/2 [00:00<00:00,  2.21it/s]100%|██████████| 2/2 [00:00<00:00,  2.21it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7767046093940735
Epoch 1, Loop Feat 0: -0.7787693738937378
Epoch 1, Loop Adj 0: -0.8166508078575134
Epoch 2: -0.8166508078575134
Mem used: -1783MB
best_loss: tensor(-0.9580, device='cuda:1')
best_loss: tensor(-0.9582, device='cuda:1')
final loss: -0.9566156268119812
Test:
Test: 0.7056868537666174
0.7056868537666174
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.50it/s]100%|██████████| 2/2 [00:00<00:00,  2.56it/s]100%|██████████| 2/2 [00:00<00:00,  2.55it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883833646774292
Epoch 1, Loop Feat 0: -0.7832699418067932
Epoch 1, Loop Adj 0: -0.8412706255912781
Epoch 2: -0.8412706255912781
Mem used: -1783MB
best_loss: tensor(-0.9590, device='cuda:1')
final loss: -0.9621322751045227
Test:
Test: 0.6986706056129985
0.6986706056129985
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.82it/s]100%|██████████| 2/2 [00:00<00:00,  2.22it/s]100%|██████████| 2/2 [00:00<00:00,  2.15it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182762145996
Epoch 1, Loop Feat 0: -0.7635475993156433
Epoch 1, Loop Adj 0: -0.8178032636642456
Epoch 2: -0.8178032636642456
Mem used: 392MB
best_loss: tensor(-0.9609, device='cuda:1')
final loss: -0.9552193284034729
Test:
Test: 0.7348596750369276
0.7348596750369276
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.17it/s]100%|██████████| 2/2 [00:00<00:00,  2.75it/s]100%|██████████| 2/2 [00:00<00:00,  2.61it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1, Loop Feat 0: -0.7658965587615967
Epoch 1, Loop Adj 0: -0.8061078786849976
Epoch 2: -0.8061078786849976
Mem used: 310MB
best_loss: tensor(-0.9569, device='cuda:1')
best_loss: tensor(-0.9571, device='cuda:1')
final loss: -0.9560655355453491
Test:
Test: 0.7123338257016248
0.7123338257016248
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.45it/s]100%|██████████| 2/2 [00:00<00:00,  3.34it/s]100%|██████████| 2/2 [00:00<00:00,  3.33it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1, Loop Feat 0: -0.7881465554237366
Epoch 1, Loop Adj 0: -0.8254404664039612
Epoch 2: -0.8254404664039612
Mem used: 142MB
best_loss: tensor(-0.9640, device='cuda:1')
final loss: -0.9602146744728088
Test:
Test: 0.7363367799113737
0.7363367799113737
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.08it/s]100%|██████████| 2/2 [00:00<00:00,  2.11it/s]100%|██████████| 2/2 [00:00<00:00,  2.01it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1, Loop Feat 0: -0.7746471762657166
Epoch 1, Loop Adj 0: -0.8253716230392456
Epoch 2: -0.8253716230392456
Mem used: 142MB
best_loss: tensor(-0.9539, device='cuda:1')
best_loss: tensor(-0.9541, device='cuda:1')
final loss: -0.9621067643165588
Test:
Test: 0.7090103397341211
0.7090103397341211
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.18it/s]100%|██████████| 2/2 [00:00<00:00,  2.48it/s]100%|██████████| 2/2 [00:00<00:00,  2.43it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1, Loop Feat 0: -0.7810697555541992
Epoch 1, Loop Adj 0: -0.8334943652153015
Epoch 2: -0.8334943652153015
Mem used: -1782MB
best_loss: tensor(-0.9608, device='cuda:1')
final loss: -0.9589223265647888
Test:
Test: 0.6979320531757754
0.6979320531757754
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.35it/s]100%|██████████| 1/1 [00:00<00:00,  2.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.7728930711746216
Epoch 1: -0.7728930711746216
Mem used: 142MB
best_loss: tensor(-0.9514, device='cuda:1')
best_loss: tensor(-0.9516, device='cuda:1')
final loss: -0.9369693398475647
Test:
Test: 0.8231166912850812
0.8231166912850812
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.54it/s]100%|██████████| 1/1 [00:00<00:00,  2.54it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1: -0.7591961026191711
Mem used: 224MB
best_loss: tensor(-0.9506, device='cuda:1')
best_loss: tensor(-0.9507, device='cuda:1')
final loss: -0.9411627054214478
Test:
Test: 0.8305022156573116
0.8305022156573116
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.05it/s]100%|██████████| 1/1 [00:00<00:00,  3.04it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664062976837158
Epoch 1: -0.7664062976837158
Mem used: 216MB
best_loss: tensor(-0.9551, device='cuda:1')
best_loss: tensor(-0.9557, device='cuda:1')
final loss: -0.9411032795906067
Test:
Test: 0.8098227474150664
0.8098227474150664
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.18it/s]100%|██████████| 1/1 [00:00<00:00,  2.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.776704728603363
Epoch 1: -0.776704728603363
Mem used: 142MB
best_loss: tensor(-0.9517, device='cuda:1')
best_loss: tensor(-0.9520, device='cuda:1')
final loss: -0.9434500336647034
Test:
Test: 0.8042836041358936
0.8042836041358936
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.02it/s]100%|██████████| 1/1 [00:00<00:00,  2.01it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883833646774292
Epoch 1: -0.7883833646774292
Mem used: 142MB
best_loss: tensor(-0.9568, device='cuda:1')
best_loss: tensor(-0.9569, device='cuda:1')
final loss: -0.9483602643013
Test:
Test: 0.7765878877400295
0.7765878877400295
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.21it/s]100%|██████████| 1/1 [00:00<00:00,  2.21it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182166099548
Epoch 1: -0.7610182166099548
Mem used: 142MB
best_loss: tensor(-0.9465, device='cuda:1')
best_loss: tensor(-0.9470, device='cuda:1')
final loss: -0.9302822351455688
Test:
Test: 0.827178729689808
0.827178729689808
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.94it/s]100%|██████████| 1/1 [00:00<00:00,  2.93it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1: -0.7666859030723572
Mem used: 142MB
best_loss: tensor(-0.9520, device='cuda:1')
final loss: -0.9376417398452759
Test:
Test: 0.7994830132939439
0.7994830132939439
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.24it/s]100%|██████████| 1/1 [00:00<00:00,  3.23it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1: -0.7857076525688171
Mem used: 640MB
best_loss: tensor(-0.9556, device='cuda:1')
best_loss: tensor(-0.9559, device='cuda:1')
final loss: -0.9459897875785828
Test:
Test: 0.8290251107828656
0.8290251107828656
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.92it/s]100%|██████████| 1/1 [00:00<00:00,  1.91it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1: -0.7759597301483154
Mem used: 296MB
best_loss: tensor(-0.9459, device='cuda:1')
best_loss: tensor(-0.9462, device='cuda:1')
final loss: -0.9484956860542297
Test:
Test: 0.794682422451994
0.794682422451994
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.29it/s]100%|██████████| 1/1 [00:00<00:00,  2.29it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1: -0.7855120301246643
Mem used: 444MB
best_loss: tensor(-0.9565, device='cuda:1')
best_loss: tensor(-0.9567, device='cuda:1')
final loss: -0.952332615852356
Test:
Test: 0.7854505169867061
0.7854505169867061
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.35it/s]100%|██████████| 1/1 [00:00<00:00,  3.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.7728930711746216
Epoch 1: -0.7728930711746216
Mem used: 142MB
best_loss: tensor(-0.9489, device='cuda:1')
final loss: -0.9332630634307861
Test:
Test: 0.8179468242245199
0.8179468242245199
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.86it/s]100%|██████████| 1/1 [00:00<00:00,  2.82it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1: -0.7591961026191711
Mem used: 142MB
best_loss: tensor(-0.9485, device='cuda:1')
best_loss: tensor(-0.9489, device='cuda:1')
final loss: -0.9397410750389099
Test:
Test: 0.827917282127031
0.827917282127031
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.72it/s]100%|██████████| 1/1 [00:00<00:00,  2.71it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664063572883606
Epoch 1: -0.7664063572883606
Mem used: 142MB
best_loss: tensor(-0.9523, device='cuda:1')
best_loss: tensor(-0.9543, device='cuda:1')
final loss: -0.9387803673744202
Test:
Test: 0.8053914327917282
0.8053914327917282
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.18it/s]100%|██████████| 1/1 [00:00<00:00,  2.17it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7767046093940735
Epoch 1: -0.7767046093940735
Mem used: 380MB
best_loss: tensor(-0.9489, device='cuda:1')
best_loss: tensor(-0.9508, device='cuda:1')
final loss: -0.9416247010231018
Test:
Test: 0.7987444608567208
0.7987444608567208
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.59it/s]100%|██████████| 1/1 [00:00<00:00,  2.47it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883834838867188
Epoch 1: -0.7883834838867188
Mem used: 252MB
best_loss: tensor(-0.9541, device='cuda:1')
best_loss: tensor(-0.9546, device='cuda:1')
final loss: -0.9484407305717468
Test:
Test: 0.7721565731166913
0.7721565731166913
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.34it/s]100%|██████████| 1/1 [00:00<00:00,  2.31it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182166099548
Epoch 1: -0.7610182166099548
Mem used: 142MB
best_loss: tensor(-0.9448, device='cuda:1')
best_loss: tensor(-0.9452, device='cuda:1')
final loss: -0.9297314882278442
Test:
Test: 0.8227474150664698
0.8227474150664698
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.90it/s]100%|██████████| 1/1 [00:00<00:00,  2.90it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1: -0.7666859030723572
Mem used: 142MB
best_loss: tensor(-0.9501, device='cuda:1')
best_loss: tensor(-0.9504, device='cuda:1')
final loss: -0.9359070062637329
Test:
Test: 0.794682422451994
0.794682422451994
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.08it/s]100%|██████████| 1/1 [00:00<00:00,  3.08it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1: -0.7857076525688171
Mem used: 142MB
best_loss: tensor(-0.9537, device='cuda:1')
final loss: -0.9445836544036865
Test:
Test: 0.8172082717872969
0.8172082717872969
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.77it/s]100%|██████████| 1/1 [00:00<00:00,  2.76it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1: -0.7759597301483154
Mem used: 142MB
best_loss: tensor(-0.9441, device='cuda:1')
best_loss: tensor(-0.9446, device='cuda:1')
final loss: -0.9464150667190552
Test:
Test: 0.7928360413589365
0.7928360413589365
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.18it/s]100%|██████████| 1/1 [00:00<00:00,  2.99it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1: -0.7855120301246643
Mem used: 454MB
best_loss: tensor(-0.9546, device='cuda:1')
best_loss: tensor(-0.9558, device='cuda:1')
final loss: -0.9523847103118896
Test:
Test: 0.7776957163958641
0.7776957163958641
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.06it/s]100%|██████████| 1/1 [00:00<00:00,  3.05it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.7728931903839111
Epoch 1: -0.7728931903839111
Mem used: 280MB
best_loss: tensor(-0.9518, device='cuda:1')
best_loss: tensor(-0.9520, device='cuda:1')
final loss: -0.9358810782432556
Test:
Test: 0.8234859675036927
0.8234859675036927
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.22it/s]100%|██████████| 1/1 [00:00<00:00,  2.20it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1: -0.7591961026191711
Mem used: 142MB
best_loss: tensor(-0.9513, device='cuda:1')
final loss: -0.9419565796852112
Test:
Test: 0.8290251107828656
0.8290251107828656
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.92it/s]100%|██████████| 1/1 [00:00<00:00,  2.78it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664062976837158
Epoch 1: -0.7664062976837158
Mem used: 142MB
best_loss: tensor(-0.9559, device='cuda:1')
best_loss: tensor(-0.9560, device='cuda:1')
final loss: -0.9420042634010315
Test:
Test: 0.8112998522895125
0.8112998522895125
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.89it/s]100%|██████████| 1/1 [00:00<00:00,  1.89it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7767046093940735
Epoch 1: -0.7767046093940735
Mem used: 142MB
best_loss: tensor(-0.9525, device='cuda:1')
best_loss: tensor(-0.9525, device='cuda:1')
final loss: -0.9464030265808105
Test:
Test: 0.8039143279172821
0.8039143279172821
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.46it/s]100%|██████████| 1/1 [00:00<00:00,  2.46it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6175430417060852
Epoch 0, Loop Adj 0: -0.7883834838867188
Epoch 1: -0.7883834838867188
Mem used: 142MB
best_loss: tensor(-0.9573, device='cuda:1')
best_loss: tensor(-0.9574, device='cuda:1')
final loss: -0.9504281282424927
Test:
Test: 0.7754800590841949
0.7754800590841949
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.18it/s]100%|██████████| 1/1 [00:00<00:00,  2.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182762145996
Epoch 1: -0.7610182762145996
Mem used: 816MB
best_loss: tensor(-0.9473, device='cuda:1')
best_loss: tensor(-0.9474, device='cuda:1')
final loss: -0.9312275052070618
Test:
Test: 0.829394387001477
0.829394387001477
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.93it/s]100%|██████████| 1/1 [00:00<00:00,  2.92it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1: -0.7666859030723572
Mem used: 246MB
best_loss: tensor(-0.9524, device='cuda:1')
best_loss: tensor(-0.9524, device='cuda:1')
final loss: -0.9397385120391846
Test:
Test: 0.80096011816839
0.80096011816839
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.70it/s]100%|██████████| 1/1 [00:00<00:00,  2.69it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1: -0.7857076525688171
Mem used: 154MB
best_loss: tensor(-0.9561, device='cuda:1')
best_loss: tensor(-0.9562, device='cuda:1')
final loss: -0.9449726939201355
Test:
Test: 0.8290251107828656
0.8290251107828656
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.73it/s]100%|██████████| 1/1 [00:00<00:00,  2.71it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1: -0.7759597301483154
Mem used: 142MB
best_loss: tensor(-0.9469, device='cuda:1')
final loss: -0.9499909281730652
Test:
Test: 0.794682422451994
0.794682422451994
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.50it/s]100%|██████████| 1/1 [00:00<00:00,  2.50it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1: -0.7855120301246643
Mem used: 142MB
best_loss: tensor(-0.9568, device='cuda:1')
best_loss: tensor(-0.9570, device='cuda:1')
final loss: -0.954602062702179
Test:
Test: 0.7872968980797637
0.7872968980797637
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.94it/s]100%|██████████| 2/2 [00:01<00:00,  1.97it/s]100%|██████████| 2/2 [00:01<00:00,  1.96it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.7728930711746216
Epoch 1, Loop Feat 0: -0.768468976020813
Epoch 1, Loop Adj 0: -0.8179547786712646
Epoch 2: -0.8179547786712646
Mem used: -1783MB
best_loss: tensor(-0.9590, device='cuda:1')
best_loss: tensor(-0.9592, device='cuda:1')
final loss: -0.9528480172157288
Test:
Test: 0.7326440177252584
0.7326440177252584
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.11it/s]100%|██████████| 2/2 [00:00<00:00,  2.10it/s]100%|██████████| 2/2 [00:00<00:00,  2.21it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1, Loop Feat 0: -0.7607958316802979
Epoch 1, Loop Adj 0: -0.8140784502029419
Epoch 2: -0.8140784502029419
Mem used: 816MB
best_loss: tensor(-0.9606, device='cuda:1')
final loss: -0.9559473395347595
Test:
Test: 0.7492614475627769
0.7492614475627769
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.31it/s]100%|██████████| 2/2 [00:00<00:00,  2.44it/s]100%|██████████| 2/2 [00:00<00:00,  2.38it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664063572883606
Epoch 1, Loop Feat 0: -0.761529803276062
Epoch 1, Loop Adj 0: -0.8018733263015747
Epoch 2: -0.8018733263015747
Mem used: 304MB
best_loss: tensor(-0.9601, device='cuda:1')
best_loss: tensor(-0.9602, device='cuda:1')
final loss: -0.9590621590614319
Test:
Test: 0.73301329394387
0.73301329394387
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.72it/s]100%|██████████| 2/2 [00:00<00:00,  2.25it/s]100%|██████████| 2/2 [00:00<00:00,  2.15it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.776704728603363
Epoch 1, Loop Feat 0: -0.7788636684417725
Epoch 1, Loop Adj 0: -0.8166995644569397
Epoch 2: -0.8166995644569397
Mem used: 388MB
best_loss: tensor(-0.9574, device='cuda:1')
final loss: -0.9562293291091919
Test:
Test: 0.7056868537666174
0.7056868537666174
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.94it/s]100%|██████████| 2/2 [00:00<00:00,  2.61it/s]100%|██████████| 2/2 [00:00<00:00,  2.65it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883834838867188
Epoch 1, Loop Feat 0: -0.7833571434020996
Epoch 1, Loop Adj 0: -0.8412730693817139
Epoch 2: -0.8412730693817139
Mem used: 463MB
best_loss: tensor(-0.9590, device='cuda:1')
final loss: -0.9617642760276794
Test:
Test: 0.6986706056129985
0.6986706056129985
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.19it/s]100%|██████████| 2/2 [00:00<00:00,  2.30it/s]100%|██████████| 2/2 [00:00<00:00,  2.28it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182762145996
Epoch 1, Loop Feat 0: -0.7635522484779358
Epoch 1, Loop Adj 0: -0.8178483247756958
Epoch 2: -0.8178483247756958
Mem used: -1620MB
best_loss: tensor(-0.9603, device='cuda:1')
final loss: -0.9552174806594849
Test:
Test: 0.7333825701624815
0.7333825701624815
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.18it/s]100%|██████████| 2/2 [00:00<00:00,  2.59it/s]100%|██████████| 2/2 [00:00<00:00,  2.66it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1, Loop Feat 0: -0.7659615278244019
Epoch 1, Loop Adj 0: -0.806355357170105
Epoch 2: -0.806355357170105
Mem used: 142MB
best_loss: tensor(-0.9569, device='cuda:1')
final loss: -0.953119158744812
Test:
Test: 0.7101181683899557
0.7101181683899557
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.36it/s]100%|██████████| 2/2 [00:00<00:00,  2.03it/s]100%|██████████| 2/2 [00:00<00:00,  2.07it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1, Loop Feat 0: -0.7881925702095032
Epoch 1, Loop Adj 0: -0.8253841996192932
Epoch 2: -0.8253841996192932
Mem used: 142MB
best_loss: tensor(-0.9637, device='cuda:1')
final loss: -0.9589301943778992
Test:
Test: 0.7352289512555391
0.7352289512555391
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.21it/s]100%|██████████| 2/2 [00:00<00:00,  2.74it/s]100%|██████████| 2/2 [00:00<00:00,  2.78it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1, Loop Feat 0: -0.7746861577033997
Epoch 1, Loop Adj 0: -0.8256493210792542
Epoch 2: -0.8256493210792542
Mem used: 1088MB
best_loss: tensor(-0.9535, device='cuda:1')
best_loss: tensor(-0.9538, device='cuda:1')
final loss: -0.9611390233039856
Test:
Test: 0.7093796159527327
0.7093796159527327
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.28it/s]100%|██████████| 2/2 [00:00<00:00,  2.51it/s]100%|██████████| 2/2 [00:00<00:00,  2.47it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1, Loop Feat 0: -0.7812219262123108
Epoch 1, Loop Adj 0: -0.8334928154945374
Epoch 2: -0.8334928154945374
Mem used: 374MB
best_loss: tensor(-0.9599, device='cuda:1')
best_loss: tensor(-0.9600, device='cuda:1')
final loss: -0.9592167735099792
Test:
Test: 0.69903988183161
0.69903988183161
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.41it/s]100%|██████████| 2/2 [00:00<00:00,  2.29it/s]100%|██████████| 2/2 [00:00<00:00,  2.30it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.7728930711746216
Epoch 1, Loop Feat 0: -0.7684850096702576
Epoch 1, Loop Adj 0: -0.8181855082511902
Epoch 2: -0.8181855082511902
Mem used: 142MB
best_loss: tensor(-0.9580, device='cuda:1')
final loss: -0.9521301984786987
Test:
Test: 0.7263663220088626
0.7263663220088626
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.11it/s]100%|██████████| 2/2 [00:00<00:00,  2.32it/s]100%|██████████| 2/2 [00:00<00:00,  2.29it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1, Loop Feat 0: -0.7610065937042236
Epoch 1, Loop Adj 0: -0.8145710825920105
Epoch 2: -0.8145710825920105
Mem used: 142MB
best_loss: tensor(-0.9585, device='cuda:1')
best_loss: tensor(-0.9587, device='cuda:1')
final loss: -0.9546186327934265
Test:
Test: 0.7492614475627769
0.7492614475627769
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.26it/s]100%|██████████| 2/2 [00:00<00:00,  2.11it/s]100%|██████████| 2/2 [00:00<00:00,  2.13it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664062976837158
Epoch 1, Loop Feat 0: -0.7619399428367615
Epoch 1, Loop Adj 0: -0.8026062250137329
Epoch 2: -0.8026062250137329
Mem used: 142MB
best_loss: tensor(-0.9586, device='cuda:1')
final loss: -0.9560993313789368
Test:
Test: 0.7285819793205317
0.7285819793205317
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.26it/s]100%|██████████| 2/2 [00:00<00:00,  2.10it/s]100%|██████████| 2/2 [00:00<00:00,  2.12it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.776704728603363
Epoch 1, Loop Feat 0: -0.7792167067527771
Epoch 1, Loop Adj 0: -0.8169224262237549
Epoch 2: -0.8169224262237549
Mem used: 142MB
best_loss: tensor(-0.9560, device='cuda:1')
best_loss: tensor(-0.9568, device='cuda:1')
final loss: -0.9541679620742798
Test:
Test: 0.7049483013293943
0.7049483013293943
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.24it/s]100%|██████████| 2/2 [00:00<00:00,  2.54it/s]100%|██████████| 2/2 [00:00<00:00,  2.46it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883833646774292
Epoch 1, Loop Feat 0: -0.7836604118347168
Epoch 1, Loop Adj 0: -0.8416972756385803
Epoch 2: -0.8416972756385803
Mem used: 816MB
best_loss: tensor(-0.9569, device='cuda:1')
final loss: -0.9601520895957947
Test:
Test: 0.6946085672082718
0.6946085672082718
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.51it/s]100%|██████████| 2/2 [00:00<00:00,  2.43it/s]100%|██████████| 2/2 [00:00<00:00,  2.42it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182762145996
Epoch 1, Loop Feat 0: -0.7635548710823059
Epoch 1, Loop Adj 0: -0.8180776238441467
Epoch 2: -0.8180776238441467
Mem used: 360MB
best_loss: tensor(-0.9582, device='cuda:1')
best_loss: tensor(-0.9586, device='cuda:1')
final loss: -0.9536746144294739
Test:
Test: 0.7271048744460856
0.7271048744460856
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.59it/s]100%|██████████| 2/2 [00:00<00:00,  3.07it/s]100%|██████████| 2/2 [00:00<00:00,  2.98it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1, Loop Feat 0: -0.7662135362625122
Epoch 1, Loop Adj 0: -0.8068711161613464
Epoch 2: -0.8068711161613464
Mem used: 154MB
best_loss: tensor(-0.9552, device='cuda:1')
best_loss: tensor(-0.9552, device='cuda:1')
final loss: -0.9518449306488037
Test:
Test: 0.7045790251107829
0.7045790251107829
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.75it/s]100%|██████████| 2/2 [00:00<00:00,  2.82it/s]100%|██████████| 2/2 [00:00<00:00,  2.80it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1, Loop Feat 0: -0.7883419990539551
Epoch 1, Loop Adj 0: -0.8258398175239563
Epoch 2: -0.8258398175239563
Mem used: 142MB
best_loss: tensor(-0.9615, device='cuda:1')
final loss: -0.9574387669563293
Test:
Test: 0.7234121122599705
0.7234121122599705
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.67it/s]100%|██████████| 2/2 [00:00<00:00,  2.44it/s]100%|██████████| 2/2 [00:00<00:00,  2.47it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1, Loop Feat 0: -0.7748496532440186
Epoch 1, Loop Adj 0: -0.8255534172058105
Epoch 2: -0.8255534172058105
Mem used: 142MB
best_loss: tensor(-0.9512, device='cuda:1')
best_loss: tensor(-0.9516, device='cuda:1')
final loss: -0.9594736695289612
Test:
Test: 0.7008862629246676
0.7008862629246676
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.54it/s]100%|██████████| 2/2 [00:00<00:00,  2.77it/s]100%|██████████| 2/2 [00:00<00:00,  2.73it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1, Loop Feat 0: -0.7817429304122925
Epoch 1, Loop Adj 0: -0.8338049054145813
Epoch 2: -0.8338049054145813
Mem used: 142MB
best_loss: tensor(-0.9570, device='cuda:1')
best_loss: tensor(-0.9587, device='cuda:1')
final loss: -0.9586169123649597
Test:
Test: 0.6979320531757754
0.6979320531757754
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.97it/s]100%|██████████| 2/2 [00:00<00:00,  3.42it/s]100%|██████████| 2/2 [00:00<00:00,  3.34it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.7728930711746216
Epoch 1, Loop Feat 0: -0.7684434056282043
Epoch 1, Loop Adj 0: -0.8179766535758972
Epoch 2: -0.8179766535758972
Mem used: -1782MB
best_loss: tensor(-0.9597, device='cuda:1')
final loss: -0.9539343118667603
Test:
Test: 0.733751846381093
0.733751846381093
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.75it/s]100%|██████████| 2/2 [00:00<00:00,  3.07it/s]100%|██████████| 2/2 [00:00<00:00,  3.01it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1, Loop Feat 0: -0.7607225179672241
Epoch 1, Loop Adj 0: -0.8141356706619263
Epoch 2: -0.8141356706619263
Mem used: 1030MB
best_loss: tensor(-0.9604, device='cuda:1')
best_loss: tensor(-0.9604, device='cuda:1')
final loss: -0.9578399658203125
Test:
Test: 0.7492614475627769
0.7492614475627769
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.32it/s]100%|██████████| 2/2 [00:01<00:00,  1.77it/s]100%|██████████| 2/2 [00:01<00:00,  1.68it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664062976837158
Epoch 1, Loop Feat 0: -0.7614215016365051
Epoch 1, Loop Adj 0: -0.8017569184303284
Epoch 2: -0.8017569184303284
Mem used: 330MB
best_loss: tensor(-0.9609, device='cuda:1')
best_loss: tensor(-0.9609, device='cuda:1')
final loss: -0.9585736393928528
Test:
Test: 0.731536189069424
0.731536189069424
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.61it/s]100%|██████████| 2/2 [00:00<00:00,  2.35it/s]100%|██████████| 2/2 [00:00<00:00,  2.37it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.776704728603363
Epoch 1, Loop Feat 0: -0.7787684202194214
Epoch 1, Loop Adj 0: -0.816689133644104
Epoch 2: -0.816689133644104
Mem used: 142MB
best_loss: tensor(-0.9580, device='cuda:1')
best_loss: tensor(-0.9582, device='cuda:1')
final loss: -0.9566287994384766
Test:
Test: 0.7056868537666174
0.7056868537666174
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.33it/s]100%|██████████| 2/2 [00:00<00:00,  2.90it/s]100%|██████████| 2/2 [00:00<00:00,  2.80it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883834838867188
Epoch 1, Loop Feat 0: -0.7832697033882141
Epoch 1, Loop Adj 0: -0.8412160277366638
Epoch 2: -0.8412160277366638
Mem used: 162MB
best_loss: tensor(-0.9590, device='cuda:1')
final loss: -0.9621405601501465
Test:
Test: 0.697562776957164
0.697562776957164
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.55it/s]100%|██████████| 2/2 [00:00<00:00,  2.27it/s]100%|██████████| 2/2 [00:00<00:00,  2.31it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182166099548
Epoch 1, Loop Feat 0: -0.7635468244552612
Epoch 1, Loop Adj 0: -0.8177914619445801
Epoch 2: -0.8177914619445801
Mem used: 142MB
best_loss: tensor(-0.9609, device='cuda:1')
final loss: -0.9552220702171326
Test:
Test: 0.7348596750369276
0.7348596750369276
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.80it/s]100%|██████████| 2/2 [00:01<00:00,  2.00it/s]100%|██████████| 2/2 [00:01<00:00,  1.96it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1, Loop Feat 0: -0.7658953666687012
Epoch 1, Loop Adj 0: -0.8061025142669678
Epoch 2: -0.8061025142669678
Mem used: 142MB
best_loss: tensor(-0.9569, device='cuda:1')
best_loss: tensor(-0.9571, device='cuda:1')
final loss: -0.9560682773590088
Test:
Test: 0.7123338257016248
0.7123338257016248
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.49it/s]100%|██████████| 2/2 [00:00<00:00,  2.87it/s]100%|██████████| 2/2 [00:00<00:00,  2.93it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1, Loop Feat 0: -0.7881458401679993
Epoch 1, Loop Adj 0: -0.8254424333572388
Epoch 2: -0.8254424333572388
Mem used: 816MB
best_loss: tensor(-0.9640, device='cuda:1')
final loss: -0.9602023959159851
Test:
Test: 0.7363367799113737
0.7363367799113737
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.45it/s]100%|██████████| 2/2 [00:00<00:00,  2.86it/s]100%|██████████| 2/2 [00:00<00:00,  2.94it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1, Loop Feat 0: -0.7746464014053345
Epoch 1, Loop Adj 0: -0.8253650665283203
Epoch 2: -0.8253650665283203
Mem used: -1363MB
best_loss: tensor(-0.9539, device='cuda:1')
best_loss: tensor(-0.9541, device='cuda:1')
final loss: -0.9621026515960693
Test:
Test: 0.7086410635155096
0.7086410635155096
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.56it/s]100%|██████████| 2/2 [00:00<00:00,  2.47it/s]100%|██████████| 2/2 [00:00<00:00,  2.48it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1, Loop Feat 0: -0.7810688018798828
Epoch 1, Loop Adj 0: -0.8334909677505493
Epoch 2: -0.8334909677505493
Mem used: 154MB
best_loss: tensor(-0.9608, device='cuda:1')
best_loss: tensor(-0.9608, device='cuda:1')
final loss: -0.9613877534866333
Test:
Test: 0.6986706056129985
0.6986706056129985
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.93it/s]100%|██████████| 1/1 [00:00<00:00,  2.93it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.7728930711746216
Epoch 1: -0.7728930711746216
Mem used: 142MB
best_loss: tensor(-0.9514, device='cuda:1')
best_loss: tensor(-0.9518, device='cuda:1')
final loss: -0.9369018077850342
Test:
Test: 0.8238552437223042
0.8238552437223042
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.70it/s]100%|██████████| 1/1 [00:00<00:00,  2.63it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1: -0.7591961026191711
Mem used: 922MB
best_loss: tensor(-0.9506, device='cuda:1')
best_loss: tensor(-0.9510, device='cuda:1')
final loss: -0.9413699507713318
Test:
Test: 0.827178729689808
0.827178729689808
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.25it/s]100%|██████████| 1/1 [00:00<00:00,  3.25it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664062976837158
Epoch 1: -0.7664062976837158
Mem used: 142MB
best_loss: tensor(-0.9551, device='cuda:1')
best_loss: tensor(-0.9558, device='cuda:1')
final loss: -0.9414364695549011
Test:
Test: 0.8120384047267356
0.8120384047267356
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.97it/s]100%|██████████| 1/1 [00:00<00:00,  2.97it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7767046093940735
Epoch 1: -0.7767046093940735
Mem used: 142MB
best_loss: tensor(-0.9517, device='cuda:1')
best_loss: tensor(-0.9524, device='cuda:1')
final loss: -0.9428242444992065
Test:
Test: 0.8020679468242246
0.8020679468242246
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.70it/s]100%|██████████| 1/1 [00:00<00:00,  2.67it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883834838867188
Epoch 1: -0.7883834838867188
Mem used: 286MB
best_loss: tensor(-0.9568, device='cuda:1')
best_loss: tensor(-0.9571, device='cuda:1')
final loss: -0.950683057308197
Test:
Test: 0.7754800590841949
0.7754800590841949
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.31it/s]100%|██████████| 1/1 [00:00<00:00,  2.28it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182762145996
Epoch 1: -0.7610182762145996
Mem used: 491MB
best_loss: tensor(-0.9465, device='cuda:1')
best_loss: tensor(-0.9473, device='cuda:1')
final loss: -0.9319052696228027
Test:
Test: 0.8275480059084195
0.8275480059084195
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.60it/s]100%|██████████| 1/1 [00:00<00:00,  3.58it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1: -0.7666859030723572
Mem used: 142MB
best_loss: tensor(-0.9520, device='cuda:1')
best_loss: tensor(-0.9522, device='cuda:1')
final loss: -0.9393479228019714
Test:
Test: 0.8005908419497785
0.8005908419497785
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.57it/s]100%|██████████| 1/1 [00:00<00:00,  2.52it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1: -0.7857076525688171
Mem used: 142MB
best_loss: tensor(-0.9556, device='cuda:1')
best_loss: tensor(-0.9559, device='cuda:1')
final loss: -0.9450603723526001
Test:
Test: 0.8268094534711965
0.8268094534711965
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.22it/s]100%|██████████| 1/1 [00:00<00:00,  2.22it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1: -0.7759597301483154
Mem used: 491MB
best_loss: tensor(-0.9459, device='cuda:1')
best_loss: tensor(-0.9464, device='cuda:1')
final loss: -0.9487715363502502
Test:
Test: 0.7935745937961596
0.7935745937961596
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.63it/s]100%|██████████| 1/1 [00:00<00:00,  2.63it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1: -0.7855120301246643
Mem used: 200MB
best_loss: tensor(-0.9565, device='cuda:1')
best_loss: tensor(-0.9569, device='cuda:1')
final loss: -0.9514693021774292
Test:
Test: 0.7854505169867061
0.7854505169867061
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.54it/s]100%|██████████| 1/1 [00:00<00:00,  2.54it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.7728930711746216
Epoch 1: -0.7728930711746216
Mem used: 322MB
best_loss: tensor(-0.9489, device='cuda:1')
best_loss: tensor(-0.9518, device='cuda:1')
final loss: -0.9369018077850342
Test:
Test: 0.8238552437223042
0.8238552437223042
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.93it/s]100%|██████████| 1/1 [00:00<00:00,  2.93it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1: -0.7591961026191711
Mem used: 154MB
best_loss: tensor(-0.9485, device='cuda:1')
best_loss: tensor(-0.9510, device='cuda:1')
final loss: -0.9413699507713318
Test:
Test: 0.827178729689808
0.827178729689808
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.59it/s]100%|██████████| 1/1 [00:00<00:00,  2.58it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664062976837158
Epoch 1: -0.7664062976837158
Mem used: -470MB
best_loss: tensor(-0.9523, device='cuda:1')
best_loss: tensor(-0.9558, device='cuda:1')
final loss: -0.9414364099502563
Test:
Test: 0.8120384047267356
0.8120384047267356
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.35it/s]100%|██████████| 1/1 [00:00<00:00,  2.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.776704728603363
Epoch 1: -0.776704728603363
Mem used: 142MB
best_loss: tensor(-0.9490, device='cuda:1')
best_loss: tensor(-0.9524, device='cuda:1')
final loss: -0.9428242444992065
Test:
Test: 0.8020679468242246
0.8020679468242246
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.17it/s]100%|██████████| 1/1 [00:00<00:00,  2.10it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883834838867188
Epoch 1: -0.7883834838867188
Mem used: 142MB
best_loss: tensor(-0.9541, device='cuda:1')
best_loss: tensor(-0.9571, device='cuda:1')
final loss: -0.950683057308197
Test:
Test: 0.7754800590841949
0.7754800590841949
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.07it/s]100%|██████████| 1/1 [00:00<00:00,  3.06it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182762145996
Epoch 1: -0.7610182762145996
Mem used: 408MB
best_loss: tensor(-0.9448, device='cuda:1')
best_loss: tensor(-0.9473, device='cuda:1')
final loss: -0.9319052696228027
Test:
Test: 0.8275480059084195
0.8275480059084195
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.68it/s]100%|██████████| 1/1 [00:00<00:00,  2.67it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1: -0.7666859030723572
Mem used: 142MB
best_loss: tensor(-0.9501, device='cuda:1')
best_loss: tensor(-0.9522, device='cuda:1')
final loss: -0.9393479228019714
Test:
Test: 0.8005908419497785
0.8005908419497785
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.33it/s]100%|██████████| 1/1 [00:00<00:00,  2.33it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1: -0.7857076525688171
Mem used: 264MB
best_loss: tensor(-0.9537, device='cuda:1')
best_loss: tensor(-0.9559, device='cuda:1')
final loss: -0.9450603723526001
Test:
Test: 0.8268094534711965
0.8268094534711965
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.20it/s]100%|██████████| 1/1 [00:00<00:00,  2.20it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1: -0.7759597301483154
Mem used: 1480MB
best_loss: tensor(-0.9441, device='cuda:1')
best_loss: tensor(-0.9464, device='cuda:1')
final loss: -0.9487715363502502
Test:
Test: 0.7935745937961596
0.7935745937961596
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.32it/s]100%|██████████| 1/1 [00:00<00:00,  2.32it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1: -0.7855120301246643
Mem used: 142MB
best_loss: tensor(-0.9546, device='cuda:1')
best_loss: tensor(-0.9569, device='cuda:1')
final loss: -0.9514693021774292
Test:
Test: 0.7854505169867061
0.7854505169867061
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.30it/s]100%|██████████| 1/1 [00:00<00:00,  2.29it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.7728930711746216
Epoch 1: -0.7728930711746216
Mem used: 142MB
best_loss: tensor(-0.9518, device='cuda:1')
best_loss: tensor(-0.9520, device='cuda:1')
final loss: -0.9360990524291992
Test:
Test: 0.8238552437223042
0.8238552437223042
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.29it/s]100%|██████████| 1/1 [00:00<00:00,  2.29it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1: -0.7591961026191711
Mem used: 142MB
best_loss: tensor(-0.9513, device='cuda:1')
final loss: -0.9419565796852112
Test:
Test: 0.8290251107828656
0.8290251107828656
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.98it/s]100%|██████████| 1/1 [00:00<00:00,  1.98it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664063572883606
Epoch 1: -0.7664063572883606
Mem used: 816MB
best_loss: tensor(-0.9559, device='cuda:1')
best_loss: tensor(-0.9560, device='cuda:1')
final loss: -0.9420042634010315
Test:
Test: 0.8112998522895125
0.8112998522895125
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.35it/s]100%|██████████| 1/1 [00:00<00:00,  3.34it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7767046093940735
Epoch 1: -0.7767046093940735
Mem used: 318MB
best_loss: tensor(-0.9525, device='cuda:1')
best_loss: tensor(-0.9525, device='cuda:1')
final loss: -0.9464030265808105
Test:
Test: 0.8039143279172821
0.8039143279172821
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.49it/s]100%|██████████| 1/1 [00:00<00:00,  2.49it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883833646774292
Epoch 1: -0.7883833646774292
Mem used: 142MB
best_loss: tensor(-0.9573, device='cuda:1')
best_loss: tensor(-0.9574, device='cuda:1')
final loss: -0.950870156288147
Test:
Test: 0.7754800590841949
0.7754800590841949
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.42it/s]100%|██████████| 1/1 [00:00<00:00,  2.42it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182762145996
Epoch 1: -0.7610182762145996
Mem used: 292MB
best_loss: tensor(-0.9473, device='cuda:1')
best_loss: tensor(-0.9474, device='cuda:1')
final loss: -0.9310975670814514
Test:
Test: 0.829394387001477
0.829394387001477
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.08it/s]100%|██████████| 1/1 [00:00<00:00,  2.08it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1: -0.7666859030723572
Mem used: 142MB
best_loss: tensor(-0.9524, device='cuda:1')
best_loss: tensor(-0.9524, device='cuda:1')
final loss: -0.9397385120391846
Test:
Test: 0.80096011816839
0.80096011816839
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.61it/s]100%|██████████| 1/1 [00:00<00:00,  2.61it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857075929641724
Epoch 1: -0.7857075929641724
Mem used: -1782MB
best_loss: tensor(-0.9561, device='cuda:1')
best_loss: tensor(-0.9562, device='cuda:1')
final loss: -0.9449726939201355
Test:
Test: 0.8290251107828656
0.8290251107828656
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.77it/s]100%|██████████| 1/1 [00:00<00:00,  2.77it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1: -0.7759597301483154
Mem used: 298MB
best_loss: tensor(-0.9469, device='cuda:1')
final loss: -0.9499910473823547
Test:
Test: 0.794682422451994
0.794682422451994
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.88it/s]100%|██████████| 1/1 [00:00<00:00,  1.86it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1: -0.7855120301246643
Mem used: 280MB
best_loss: tensor(-0.9568, device='cuda:1')
best_loss: tensor(-0.9570, device='cuda:1')
final loss: -0.9546021223068237
Test:
Test: 0.7872968980797637
0.7872968980797637
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.11it/s]100%|██████████| 2/2 [00:00<00:00,  2.64it/s]100%|██████████| 2/2 [00:00<00:00,  2.54it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.7728930711746216
Epoch 1, Loop Feat 0: -0.7684584856033325
Epoch 1, Loop Adj 0: -0.817998468875885
Epoch 2: -0.817998468875885
Mem used: 142MB
best_loss: tensor(-0.9590, device='cuda:1')
best_loss: tensor(-0.9595, device='cuda:1')
final loss: -0.9520184993743896
Test:
Test: 0.733751846381093
0.733751846381093
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.91it/s]100%|██████████| 2/2 [00:00<00:00,  3.04it/s]100%|██████████| 2/2 [00:00<00:00,  3.02it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1, Loop Feat 0: -0.7607572078704834
Epoch 1, Loop Adj 0: -0.81412672996521
Epoch 2: -0.81412672996521
Mem used: 142MB
best_loss: tensor(-0.9603, device='cuda:1')
final loss: -0.9546917080879211
Test:
Test: 0.7488921713441654
0.7488921713441654
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.77it/s]100%|██████████| 2/2 [00:00<00:00,  2.92it/s]100%|██████████| 2/2 [00:00<00:00,  2.89it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664062976837158
Epoch 1, Loop Feat 0: -0.7614736557006836
Epoch 1, Loop Adj 0: -0.8018671274185181
Epoch 2: -0.8018671274185181
Mem used: 340MB
best_loss: tensor(-0.9602, device='cuda:1')
best_loss: tensor(-0.9605, device='cuda:1')
final loss: -0.9577440023422241
Test:
Test: 0.7319054652880355
0.7319054652880355
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.00it/s]100%|██████████| 2/2 [00:00<00:00,  2.36it/s]100%|██████████| 2/2 [00:00<00:00,  2.29it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7767046093940735
Epoch 1, Loop Feat 0: -0.7788113355636597
Epoch 1, Loop Adj 0: -0.8167616128921509
Epoch 2: -0.8167616128921509
Mem used: 142MB
best_loss: tensor(-0.9575, device='cuda:1')
best_loss: tensor(-0.9581, device='cuda:1')
final loss: -0.9563001990318298
Test:
Test: 0.7079025110782866
0.7079025110782866
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.76it/s]100%|██████████| 2/2 [00:00<00:00,  2.24it/s]100%|██████████| 2/2 [00:00<00:00,  2.16it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883834838867188
Epoch 1, Loop Feat 0: -0.7833106517791748
Epoch 1, Loop Adj 0: -0.8413645029067993
Epoch 2: -0.8413645029067993
Mem used: 142MB
best_loss: tensor(-0.9590, device='cuda:1')
final loss: -0.9621197581291199
Test:
Test: 0.6994091580502215
0.6994091580502215
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.50it/s]100%|██████████| 2/2 [00:00<00:00,  3.94it/s]100%|██████████| 2/2 [00:00<00:00,  3.78it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182166099548
Epoch 1, Loop Feat 0: -0.7635499835014343
Epoch 1, Loop Adj 0: -0.8178486824035645
Epoch 2: -0.8178486824035645
Mem used: 829MB
best_loss: tensor(-0.9602, device='cuda:1')
best_loss: tensor(-0.9603, device='cuda:1')
final loss: -0.954702615737915
Test:
Test: 0.7333825701624815
0.7333825701624815
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.31it/s]100%|██████████| 2/2 [00:00<00:00,  3.48it/s]100%|██████████| 2/2 [00:00<00:00,  3.45it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1, Loop Feat 0: -0.765927791595459
Epoch 1, Loop Adj 0: -0.806206464767456
Epoch 2: -0.806206464767456
Mem used: 408MB
best_loss: tensor(-0.9569, device='cuda:1')
final loss: -0.9531154632568359
Test:
Test: 0.7130723781388478
0.7130723781388478
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.72it/s]100%|██████████| 2/2 [00:00<00:00,  3.57it/s]100%|██████████| 2/2 [00:00<00:00,  3.59it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1, Loop Feat 0: -0.7881682515144348
Epoch 1, Loop Adj 0: -0.8253520727157593
Epoch 2: -0.8253520727157593
Mem used: 336MB
best_loss: tensor(-0.9635, device='cuda:1')
best_loss: tensor(-0.9639, device='cuda:1')
final loss: -0.958250880241394
Test:
Test: 0.73301329394387
0.73301329394387
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.78it/s]100%|██████████| 2/2 [00:00<00:00,  3.66it/s]100%|██████████| 2/2 [00:00<00:00,  3.44it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1, Loop Feat 0: -0.7746677994728088
Epoch 1, Loop Adj 0: -0.8256182074546814
Epoch 2: -0.8256182074546814
Mem used: 142MB
best_loss: tensor(-0.9535, device='cuda:1')
best_loss: tensor(-0.9539, device='cuda:1')
final loss: -0.9604863524436951
Test:
Test: 0.7104874446085672
0.7104874446085672
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.36it/s]100%|██████████| 2/2 [00:00<00:00,  2.68it/s]100%|██████████| 2/2 [00:00<00:00,  2.63it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1, Loop Feat 0: -0.7811415791511536
Epoch 1, Loop Adj 0: -0.833397388458252
Epoch 2: -0.833397388458252
Mem used: 142MB
best_loss: tensor(-0.9599, device='cuda:1')
best_loss: tensor(-0.9602, device='cuda:1')
final loss: -0.9593640565872192
Test:
Test: 0.7005169867060561
0.7005169867060561
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.36it/s]100%|██████████| 2/2 [00:00<00:00,  3.40it/s]100%|██████████| 2/2 [00:00<00:00,  3.36it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.7728930711746216
Epoch 1, Loop Feat 0: -0.7684584856033325
Epoch 1, Loop Adj 0: -0.817998468875885
Epoch 2: -0.817998468875885
Mem used: 142MB
best_loss: tensor(-0.9578, device='cuda:1')
best_loss: tensor(-0.9595, device='cuda:1')
final loss: -0.9520184397697449
Test:
Test: 0.733751846381093
0.733751846381093
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.99it/s]100%|██████████| 2/2 [00:00<00:00,  3.03it/s]100%|██████████| 2/2 [00:00<00:00,  3.02it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1, Loop Feat 0: -0.7607571482658386
Epoch 1, Loop Adj 0: -0.8141268491744995
Epoch 2: -0.8141268491744995
Mem used: 284MB
best_loss: tensor(-0.9585, device='cuda:1')
best_loss: tensor(-0.9600, device='cuda:1')
final loss: -0.9562832117080688
Test:
Test: 0.7503692762186115
0.7503692762186115
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.99it/s]100%|██████████| 2/2 [00:00<00:00,  2.44it/s]100%|██████████| 2/2 [00:00<00:00,  2.36it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664063572883606
Epoch 1, Loop Feat 0: -0.7614736557006836
Epoch 1, Loop Adj 0: -0.8018671274185181
Epoch 2: -0.8018671274185181
Mem used: 363MB
best_loss: tensor(-0.9583, device='cuda:1')
best_loss: tensor(-0.9605, device='cuda:1')
final loss: -0.9577440023422241
Test:
Test: 0.7319054652880355
0.7319054652880355
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.40it/s]100%|██████████| 2/2 [00:00<00:00,  2.95it/s]100%|██████████| 2/2 [00:00<00:00,  2.82it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.776704728603363
Epoch 1, Loop Feat 0: -0.7788113355636597
Epoch 1, Loop Adj 0: -0.8167616128921509
Epoch 2: -0.8167616128921509
Mem used: 154MB
best_loss: tensor(-0.9561, device='cuda:1')
best_loss: tensor(-0.9581, device='cuda:1')
final loss: -0.9563001394271851
Test:
Test: 0.7079025110782866
0.7079025110782866
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.41it/s]100%|██████████| 2/2 [00:00<00:00,  2.92it/s]100%|██████████| 2/2 [00:00<00:00,  2.79it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883834838867188
Epoch 1, Loop Feat 0: -0.7833107709884644
Epoch 1, Loop Adj 0: -0.8413645029067993
Epoch 2: -0.8413645029067993
Mem used: 142MB
best_loss: tensor(-0.9576, device='cuda:1')
best_loss: tensor(-0.9588, device='cuda:1')
final loss: -0.9611303210258484
Test:
Test: 0.6979320531757754
0.6979320531757754
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.83it/s]100%|██████████| 2/2 [00:00<00:00,  2.99it/s]100%|██████████| 2/2 [00:00<00:00,  2.93it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182166099548
Epoch 1, Loop Feat 0: -0.7635499835014343
Epoch 1, Loop Adj 0: -0.8178486824035645
Epoch 2: -0.8178486824035645
Mem used: 142MB
best_loss: tensor(-0.9582, device='cuda:1')
best_loss: tensor(-0.9603, device='cuda:1')
final loss: -0.9547026753425598
Test:
Test: 0.7333825701624815
0.7333825701624815
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.03it/s]100%|██████████| 2/2 [00:00<00:00,  2.54it/s]100%|██████████| 2/2 [00:00<00:00,  2.45it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1, Loop Feat 0: -0.765927791595459
Epoch 1, Loop Adj 0: -0.806206464767456
Epoch 2: -0.806206464767456
Mem used: -758MB
best_loss: tensor(-0.9549, device='cuda:1')
best_loss: tensor(-0.9569, device='cuda:1')
final loss: -0.9555290341377258
Test:
Test: 0.7138109305760709
0.7138109305760709
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.87it/s]100%|██████████| 2/2 [00:00<00:00,  2.82it/s]100%|██████████| 2/2 [00:00<00:00,  2.83it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1, Loop Feat 0: -0.7881682515144348
Epoch 1, Loop Adj 0: -0.8253520727157593
Epoch 2: -0.8253520727157593
Mem used: 816MB
best_loss: tensor(-0.9620, device='cuda:1')
best_loss: tensor(-0.9639, device='cuda:1')
final loss: -0.958250880241394
Test:
Test: 0.73301329394387
0.73301329394387
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.28it/s]100%|██████████| 2/2 [00:00<00:00,  2.69it/s]100%|██████████| 2/2 [00:00<00:00,  2.62it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1, Loop Feat 0: -0.7746677994728088
Epoch 1, Loop Adj 0: -0.8256182074546814
Epoch 2: -0.8256182074546814
Mem used: 312MB
best_loss: tensor(-0.9515, device='cuda:1')
best_loss: tensor(-0.9539, device='cuda:1')
final loss: -0.9604863524436951
Test:
Test: 0.7104874446085672
0.7104874446085672
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.47it/s]100%|██████████| 2/2 [00:00<00:00,  2.32it/s]100%|██████████| 2/2 [00:00<00:00,  2.34it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1, Loop Feat 0: -0.7811415791511536
Epoch 1, Loop Adj 0: -0.833397388458252
Epoch 2: -0.833397388458252
Mem used: 630MB
best_loss: tensor(-0.9581, device='cuda:1')
best_loss: tensor(-0.9602, device='cuda:1')
final loss: -0.9593640565872192
Test:
Test: 0.7005169867060561
0.7005169867060561
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.88it/s]100%|██████████| 2/2 [00:00<00:00,  3.46it/s]100%|██████████| 2/2 [00:00<00:00,  3.27it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.7728930711746216
Epoch 1, Loop Feat 0: -0.7684430480003357
Epoch 1, Loop Adj 0: -0.8179791569709778
Epoch 2: -0.8179791569709778
Mem used: 154MB
best_loss: tensor(-0.9597, device='cuda:1')
best_loss: tensor(-0.9597, device='cuda:1')
final loss: -0.9549369812011719
Test:
Test: 0.733751846381093
0.733751846381093
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.88it/s]100%|██████████| 2/2 [00:00<00:00,  2.77it/s]100%|██████████| 2/2 [00:00<00:00,  2.77it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.7591961026191711
Epoch 1, Loop Feat 0: -0.760721743106842
Epoch 1, Loop Adj 0: -0.8141072392463684
Epoch 2: -0.8141072392463684
Mem used: 142MB
best_loss: tensor(-0.9604, device='cuda:1')
best_loss: tensor(-0.9604, device='cuda:1')
final loss: -0.9578298926353455
Test:
Test: 0.7492614475627769
0.7492614475627769
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.69it/s]100%|██████████| 2/2 [00:00<00:00,  2.66it/s]100%|██████████| 2/2 [00:00<00:00,  2.59it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.7664062976837158
Epoch 1, Loop Feat 0: -0.761420726776123
Epoch 1, Loop Adj 0: -0.8017638921737671
Epoch 2: -0.8017638921737671
Mem used: 412MB
best_loss: tensor(-0.9609, device='cuda:1')
best_loss: tensor(-0.9609, device='cuda:1')
final loss: -0.9585721492767334
Test:
Test: 0.731536189069424
0.731536189069424
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.15it/s]100%|██████████| 2/2 [00:00<00:00,  3.41it/s]100%|██████████| 2/2 [00:00<00:00,  3.37it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.776704728603363
Epoch 1, Loop Feat 0: -0.7787680625915527
Epoch 1, Loop Adj 0: -0.81669682264328
Epoch 2: -0.81669682264328
Mem used: 142MB
best_loss: tensor(-0.9580, device='cuda:1')
best_loss: tensor(-0.9582, device='cuda:1')
final loss: -0.9572510123252869
Test:
Test: 0.7060561299852289
0.7060561299852289
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.22it/s]100%|██████████| 2/2 [00:00<00:00,  2.67it/s]100%|██████████| 2/2 [00:00<00:00,  2.59it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7883833646774292
Epoch 1, Loop Feat 0: -0.7832692265510559
Epoch 1, Loop Adj 0: -0.8412109613418579
Epoch 2: -0.8412109613418579
Mem used: 640MB
best_loss: tensor(-0.9590, device='cuda:1')
final loss: -0.9621450304985046
Test:
Test: 0.697562776957164
0.697562776957164
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.88it/s]100%|██████████| 2/2 [00:00<00:00,  3.17it/s]100%|██████████| 2/2 [00:00<00:00,  3.12it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.7610182166099548
Epoch 1, Loop Feat 0: -0.7635464072227478
Epoch 1, Loop Adj 0: -0.8177870512008667
Epoch 2: -0.8177870512008667
Mem used: 304MB
best_loss: tensor(-0.9609, device='cuda:1')
final loss: -0.955220639705658
Test:
Test: 0.7348596750369276
0.7348596750369276
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.95it/s]100%|██████████| 2/2 [00:00<00:00,  2.45it/s]100%|██████████| 2/2 [00:00<00:00,  2.36it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.7666859030723572
Epoch 1, Loop Feat 0: -0.7658951878547668
Epoch 1, Loop Adj 0: -0.8061029314994812
Epoch 2: -0.8061029314994812
Mem used: 616MB
best_loss: tensor(-0.9570, device='cuda:1')
final loss: -0.9556773900985718
Test:
Test: 0.7123338257016248
0.7123338257016248
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.16it/s]100%|██████████| 2/2 [00:00<00:00,  2.98it/s]100%|██████████| 2/2 [00:00<00:00,  2.96it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7857076525688171
Epoch 1, Loop Feat 0: -0.7881453037261963
Epoch 1, Loop Adj 0: -0.8254373669624329
Epoch 2: -0.8254373669624329
Mem used: 142MB
best_loss: tensor(-0.9640, device='cuda:1')
final loss: -0.9602063894271851
Test:
Test: 0.7363367799113737
0.7363367799113737
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.53it/s]100%|██████████| 2/2 [00:00<00:00,  2.77it/s]100%|██████████| 2/2 [00:00<00:00,  2.73it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7759597301483154
Epoch 1, Loop Feat 0: -0.7746462821960449
Epoch 1, Loop Adj 0: -0.8253697156906128
Epoch 2: -0.8253697156906128
Mem used: 142MB
best_loss: tensor(-0.9539, device='cuda:1')
best_loss: tensor(-0.9541, device='cuda:1')
final loss: -0.962104320526123
Test:
Test: 0.7086410635155096
0.7086410635155096
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.005, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.60it/s]100%|██████████| 2/2 [00:00<00:00,  2.35it/s]100%|██████████| 2/2 [00:00<00:00,  2.39it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7855120301246643
Epoch 1, Loop Feat 0: -0.7810685634613037
Epoch 1, Loop Adj 0: -0.8334775567054749
Epoch 2: -0.8334775567054749
Mem used: 142MB
best_loss: tensor(-0.9607, device='cuda:1')
best_loss: tensor(-0.9608, device='cuda:1')
final loss: -0.961398184299469
Test:
Test: 0.6986706056129985
0.6986706056129985
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.51it/s]100%|██████████| 1/1 [00:00<00:00,  2.48it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1: -0.685497522354126
Mem used: 254MB
best_loss: tensor(-0.8018, device='cuda:1')
final loss: -0.7583926320075989
Test:
Test: 0.9409158050221565
0.9409158050221565
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.40it/s]100%|██████████| 1/1 [00:00<00:00,  2.40it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986852645874
Epoch 1: -0.6960986852645874
Mem used: 142MB
best_loss: tensor(-0.8316, device='cuda:1')
final loss: -0.7810693383216858
Test:
Test: 0.955317577548006
0.955317577548006
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.23it/s]100%|██████████| 1/1 [00:00<00:00,  2.23it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1: -0.6847533583641052
Mem used: 142MB
best_loss: tensor(-0.8239, device='cuda:1')
best_loss: tensor(-0.8242, device='cuda:1')
final loss: -0.7730128765106201
Test:
Test: 0.941285081240768
0.941285081240768
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.03it/s]100%|██████████| 1/1 [00:00<00:00,  3.02it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328230857849
Epoch 1: -0.7075328230857849
Mem used: 284MB
best_loss: tensor(-0.8469, device='cuda:1')
final loss: -0.8008440136909485
Test:
Test: 0.9538404726735599
0.9538404726735599
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.49it/s]100%|██████████| 1/1 [00:00<00:00,  2.49it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096760272979736
Epoch 1: -0.7096760272979736
Mem used: 142MB
best_loss: tensor(-0.8426, device='cuda:1')
best_loss: tensor(-0.8432, device='cuda:1')
final loss: -0.8015331029891968
Test:
Test: 0.9405465288035451
0.9405465288035451
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.75it/s]100%|██████████| 1/1 [00:00<00:00,  2.74it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905820965766907
Epoch 1: -0.6905820965766907
Mem used: 142MB
best_loss: tensor(-0.8170, device='cuda:1')
final loss: -0.7624298334121704
Test:
Test: 0.9416543574593796
0.9416543574593796
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.19it/s]100%|██████████| 1/1 [00:00<00:00,  2.17it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1: -0.6920579075813293
Mem used: 142MB
best_loss: tensor(-0.8116, device='cuda:1')
best_loss: tensor(-0.8119, device='cuda:1')
final loss: -0.7696685791015625
Test:
Test: 0.9579025110782866
0.9579025110782866
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.05it/s]100%|██████████| 1/1 [00:00<00:00,  2.00it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1: -0.7145955562591553
Mem used: 310MB
best_loss: tensor(-0.8293, device='cuda:1')
best_loss: tensor(-0.8304, device='cuda:1')
final loss: -0.8008747100830078
Test:
Test: 0.9531019202363368
0.9531019202363368
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.47it/s]100%|██████████| 1/1 [00:00<00:00,  2.46it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1: -0.7210795283317566
Mem used: 142MB
best_loss: tensor(-0.8418, device='cuda:1')
best_loss: tensor(-0.8420, device='cuda:1')
final loss: -0.8101841807365417
Test:
Test: 0.9534711964549483
0.9534711964549483
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.31it/s]100%|██████████| 1/1 [00:00<00:00,  3.30it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1: -0.7245808243751526
Mem used: 142MB
best_loss: tensor(-0.8511, device='cuda:1')
best_loss: tensor(-0.8519, device='cuda:1')
final loss: -0.8206424713134766
Test:
Test: 0.9512555391432792
0.9512555391432792
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.47it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1: -0.685497522354126
Mem used: 1352MB
best_loss: tensor(-0.7990, device='cuda:1')
best_loss: tensor(-0.7993, device='cuda:1')
final loss: -0.7572747468948364
Test:
Test: 0.9372230428360414
0.9372230428360414
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.78it/s]100%|██████████| 1/1 [00:00<00:00,  2.77it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986852645874
Epoch 1: -0.6960986852645874
Mem used: 142MB
best_loss: tensor(-0.8295, device='cuda:1')
final loss: -0.7782789468765259
Test:
Test: 0.9423929098966026
0.9423929098966026
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.66it/s]100%|██████████| 1/1 [00:00<00:00,  2.65it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1: -0.6847533583641052
Mem used: 246MB
best_loss: tensor(-0.8207, device='cuda:1')
best_loss: tensor(-0.8222, device='cuda:1')
final loss: -0.7715949416160583
Test:
Test: 0.9357459379615952
0.9357459379615952
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.05it/s]100%|██████████| 1/1 [00:00<00:00,  3.04it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328230857849
Epoch 1: -0.7075328230857849
Mem used: 262MB
best_loss: tensor(-0.8436, device='cuda:1')
final loss: -0.79875648021698
Test:
Test: 0.9486706056129985
0.9486706056129985
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.86it/s]100%|██████████| 1/1 [00:00<00:00,  1.85it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096759676933289
Epoch 1: -0.7096759676933289
Mem used: 352MB
best_loss: tensor(-0.8411, device='cuda:1')
best_loss: tensor(-0.8412, device='cuda:1')
final loss: -0.800777792930603
Test:
Test: 0.9368537666174298
0.9368537666174298
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.20it/s]100%|██████████| 1/1 [00:00<00:00,  2.14it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905821561813354
Epoch 1: -0.6905821561813354
Mem used: 142MB
best_loss: tensor(-0.8154, device='cuda:1')
final loss: -0.7606673240661621
Test:
Test: 0.9327917282127031
0.9327917282127031
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.11it/s]100%|██████████| 1/1 [00:00<00:00,  3.10it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1: -0.6920579075813293
Mem used: 142MB
best_loss: tensor(-0.8111, device='cuda:1')
final loss: -0.767310619354248
Test:
Test: 0.9453471196454948
0.9453471196454948
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.44it/s]100%|██████████| 1/1 [00:00<00:00,  2.44it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5979332327842712
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1: -0.7145955562591553
Mem used: 256MB
best_loss: tensor(-0.8273, device='cuda:1')
best_loss: tensor(-0.8276, device='cuda:1')
final loss: -0.7986607551574707
Test:
Test: 0.9486706056129985
0.9486706056129985
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.36it/s]100%|██████████| 1/1 [00:00<00:00,  2.32it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1: -0.7210795283317566
Mem used: -1782MB
best_loss: tensor(-0.8380, device='cuda:1')
best_loss: tensor(-0.8398, device='cuda:1')
final loss: -0.8076502680778503
Test:
Test: 0.9446085672082718
0.9446085672082718
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.33it/s]100%|██████████| 1/1 [00:00<00:00,  2.33it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1: -0.7245808243751526
Mem used: 168MB
best_loss: tensor(-0.8490, device='cuda:1')
best_loss: tensor(-0.8494, device='cuda:1')
final loss: -0.8179695010185242
Test:
Test: 0.9435007385524372
0.9435007385524372
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.59it/s]100%|██████████| 1/1 [00:00<00:00,  2.59it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1: -0.685497522354126
Mem used: 312MB
best_loss: tensor(-0.8015, device='cuda:1')
final loss: -0.7575806379318237
Test:
Test: 0.9431314623338257
0.9431314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.04it/s]100%|██████████| 1/1 [00:00<00:00,  3.04it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986852645874
Epoch 1: -0.6960986852645874
Mem used: 288MB
best_loss: tensor(-0.8317, device='cuda:1')
final loss: -0.7823835015296936
Test:
Test: 0.9612259970457903
0.9612259970457903
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.16it/s]100%|██████████| 1/1 [00:00<00:00,  3.15it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1: -0.6847533583641052
Mem used: 142MB
best_loss: tensor(-0.8243, device='cuda:1')
best_loss: tensor(-0.8244, device='cuda:1')
final loss: -0.7740577459335327
Test:
Test: 0.9442392909896603
0.9442392909896603
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.24it/s]100%|██████████| 1/1 [00:00<00:00,  2.24it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328230857849
Epoch 1: -0.7075328230857849
Mem used: 142MB
best_loss: tensor(-0.8488, device='cuda:1')
final loss: -0.8010995984077454
Test:
Test: 0.955317577548006
0.955317577548006
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.04it/s]100%|██████████| 1/1 [00:00<00:00,  3.04it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096759676933289
Epoch 1: -0.7096759676933289
Mem used: 274MB
best_loss: tensor(-0.8435, device='cuda:1')
final loss: -0.8029029369354248
Test:
Test: 0.9435007385524372
0.9435007385524372
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.00it/s]100%|██████████| 1/1 [00:00<00:00,  2.00it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905820965766907
Epoch 1: -0.6905820965766907
Mem used: 142MB
best_loss: tensor(-0.8168, device='cuda:1')
final loss: -0.7622648477554321
Test:
Test: 0.9449778434268833
0.9449778434268833
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.70it/s]100%|██████████| 1/1 [00:00<00:00,  3.69it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1: -0.6920579075813293
Mem used: 142MB
best_loss: tensor(-0.8122, device='cuda:1')
final loss: -0.7701340913772583
Test:
Test: 0.9590103397341211
0.9590103397341211
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.18it/s]100%|██████████| 1/1 [00:00<00:00,  2.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1: -0.7145955562591553
Mem used: 310MB
best_loss: tensor(-0.8309, device='cuda:1')
final loss: -0.8009479641914368
Test:
Test: 0.9545790251107829
0.9545790251107829
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.87it/s]100%|██████████| 1/1 [00:00<00:00,  2.86it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1: -0.7210795283317566
Mem used: -1401MB
best_loss: tensor(-0.8424, device='cuda:1')
best_loss: tensor(-0.8424, device='cuda:1')
final loss: -0.8096120953559875
Test:
Test: 0.9556868537666174
0.9556868537666174
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.70it/s]100%|██████████| 1/1 [00:00<00:00,  2.69it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1: -0.7245808243751526
Mem used: 142MB
best_loss: tensor(-0.8519, device='cuda:1')
best_loss: tensor(-0.8520, device='cuda:1')
final loss: -0.8225044012069702
Test:
Test: 0.9523633677991138
0.9523633677991138
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.77it/s]100%|██████████| 2/2 [00:00<00:00,  3.47it/s]100%|██████████| 2/2 [00:00<00:00,  3.34it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1, Loop Feat 0: -0.6838243007659912
Epoch 1, Loop Adj 0: -0.723749041557312
Epoch 2: -0.723749041557312
Mem used: 142MB
best_loss: tensor(-0.8498, device='cuda:1')
final loss: -0.8183044791221619
Test:
Test: 0.9361152141802068
0.9361152141802068
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.19it/s]100%|██████████| 2/2 [00:00<00:00,  2.25it/s]100%|██████████| 2/2 [00:00<00:00,  2.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986256599426
Epoch 1, Loop Feat 0: -0.6996733546257019
Epoch 1, Loop Adj 0: -0.7369039058685303
Epoch 2: -0.7369039058685303
Mem used: -1325MB
best_loss: tensor(-0.8710, device='cuda:1')
final loss: -0.8361554145812988
Test:
Test: 0.9383308714918759
0.9383308714918759
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.29it/s]100%|██████████| 2/2 [00:00<00:00,  2.32it/s]100%|██████████| 2/2 [00:00<00:00,  2.31it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1, Loop Feat 0: -0.67924565076828
Epoch 1, Loop Adj 0: -0.7147417068481445
Epoch 2: -0.7147417068481445
Mem used: 400MB
best_loss: tensor(-0.8695, device='cuda:1')
best_loss: tensor(-0.8701, device='cuda:1')
final loss: -0.8352437019348145
Test:
Test: 0.9375923190546529
0.9375923190546529
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.66it/s]100%|██████████| 2/2 [00:00<00:00,  2.62it/s]100%|██████████| 2/2 [00:00<00:00,  2.62it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328826904297
Epoch 1, Loop Feat 0: -0.7091109752655029
Epoch 1, Loop Adj 0: -0.7452980279922485
Epoch 2: -0.7452980279922485
Mem used: 304MB
best_loss: tensor(-0.8842, device='cuda:1')
best_loss: tensor(-0.8850, device='cuda:1')
final loss: -0.8540387153625488
Test:
Test: 0.9368537666174298
0.9368537666174298
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.08it/s]100%|██████████| 2/2 [00:00<00:00,  2.81it/s]100%|██████████| 2/2 [00:00<00:00,  2.84it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096760272979736
Epoch 1, Loop Feat 0: -0.7058038711547852
Epoch 1, Loop Adj 0: -0.7606716156005859
Epoch 2: -0.7606716156005859
Mem used: 142MB
best_loss: tensor(-0.8875, device='cuda:1')
best_loss: tensor(-0.8879, device='cuda:1')
final loss: -0.8629673719406128
Test:
Test: 0.9279911373707533
0.9279911373707533
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.72it/s]100%|██████████| 2/2 [00:00<00:00,  3.11it/s]100%|██████████| 2/2 [00:00<00:00,  3.04it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905820965766907
Epoch 1, Loop Feat 0: -0.6944532990455627
Epoch 1, Loop Adj 0: -0.7340303063392639
Epoch 2: -0.7340303063392639
Mem used: 142MB
best_loss: tensor(-0.8586, device='cuda:1')
final loss: -0.8199751973152161
Test:
Test: 0.9346381093057607
0.9346381093057607
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.35it/s]100%|██████████| 2/2 [00:00<00:00,  2.43it/s]100%|██████████| 2/2 [00:00<00:00,  2.42it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1, Loop Feat 0: -0.6804286241531372
Epoch 1, Loop Adj 0: -0.7090773582458496
Epoch 2: -0.7090773582458496
Mem used: 142MB
best_loss: tensor(-0.8570, device='cuda:1')
final loss: -0.829948365688324
Test:
Test: 0.9416543574593796
0.9416543574593796
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.02it/s]100%|██████████| 2/2 [00:00<00:00,  2.11it/s]100%|██████████| 2/2 [00:00<00:00,  2.09it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1, Loop Feat 0: -0.720264196395874
Epoch 1, Loop Adj 0: -0.7493666410446167
Epoch 2: -0.7493666410446167
Mem used: 320MB
best_loss: tensor(-0.8759, device='cuda:1')
best_loss: tensor(-0.8760, device='cuda:1')
final loss: -0.8572812080383301
Test:
Test: 0.9387001477104875
0.9387001477104875
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.36it/s]100%|██████████| 2/2 [00:00<00:00,  2.27it/s]100%|██████████| 2/2 [00:00<00:00,  2.28it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1, Loop Feat 0: -0.7203534245491028
Epoch 1, Loop Adj 0: -0.7566410899162292
Epoch 2: -0.7566410899162292
Mem used: 544MB
best_loss: tensor(-0.8805, device='cuda:1')
best_loss: tensor(-0.8808, device='cuda:1')
final loss: -0.8620113134384155
Test:
Test: 0.9357459379615952
0.9357459379615952
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.30it/s]100%|██████████| 2/2 [00:00<00:00,  2.73it/s]100%|██████████| 2/2 [00:00<00:00,  2.62it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1, Loop Feat 0: -0.718227744102478
Epoch 1, Loop Adj 0: -0.7654691934585571
Epoch 2: -0.7654691934585571
Mem used: 142MB
best_loss: tensor(-0.8923, device='cuda:1')
best_loss: tensor(-0.8927, device='cuda:1')
final loss: -0.8738089799880981
Test:
Test: 0.9338995568685377
0.9338995568685377
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.21it/s]100%|██████████| 2/2 [00:00<00:00,  3.31it/s]100%|██████████| 2/2 [00:00<00:00,  3.30it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1, Loop Feat 0: -0.6841345429420471
Epoch 1, Loop Adj 0: -0.7244771122932434
Epoch 2: -0.7244771122932434
Mem used: 142MB
best_loss: tensor(-0.8474, device='cuda:1')
final loss: -0.8173020482063293
Test:
Test: 0.9268833087149188
0.9268833087149188
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.35it/s]100%|██████████| 2/2 [00:00<00:00,  2.73it/s]100%|██████████| 2/2 [00:00<00:00,  2.67it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986256599426
Epoch 1, Loop Feat 0: -0.6999068260192871
Epoch 1, Loop Adj 0: -0.7371917366981506
Epoch 2: -0.7371917366981506
Mem used: 142MB
best_loss: tensor(-0.8694, device='cuda:1')
final loss: -0.8365034461021423
Test:
Test: 0.9320531757754801
0.9320531757754801
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.16it/s]100%|██████████| 2/2 [00:00<00:00,  2.10it/s]100%|██████████| 2/2 [00:00<00:00,  2.11it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1, Loop Feat 0: -0.6800599694252014
Epoch 1, Loop Adj 0: -0.7152419090270996
Epoch 2: -0.7152419090270996
Mem used: -1782MB
best_loss: tensor(-0.8680, device='cuda:1')
best_loss: tensor(-0.8688, device='cuda:1')
final loss: -0.8349850177764893
Test:
Test: 0.9346381093057607
0.9346381093057607
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.18it/s]100%|██████████| 2/2 [00:00<00:00,  3.04it/s]100%|██████████| 2/2 [00:00<00:00,  2.87it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328230857849
Epoch 1, Loop Feat 0: -0.7095733880996704
Epoch 1, Loop Adj 0: -0.7457693219184875
Epoch 2: -0.7457693219184875
Mem used: 938MB
best_loss: tensor(-0.8817, device='cuda:1')
final loss: -0.8508402109146118
Test:
Test: 0.9279911373707533
0.9279911373707533
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.84it/s]100%|██████████| 2/2 [00:00<00:00,  2.96it/s]100%|██████████| 2/2 [00:00<00:00,  2.93it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096760272979736
Epoch 1, Loop Feat 0: -0.7063655853271484
Epoch 1, Loop Adj 0: -0.7611970901489258
Epoch 2: -0.7611970901489258
Mem used: 278MB
best_loss: tensor(-0.8846, device='cuda:1')
final loss: -0.8601436018943787
Test:
Test: 0.9169128508124077
0.9169128508124077
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.90it/s]100%|██████████| 2/2 [00:00<00:00,  2.24it/s]100%|██████████| 2/2 [00:00<00:00,  2.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905820965766907
Epoch 1, Loop Feat 0: -0.694896399974823
Epoch 1, Loop Adj 0: -0.7344042062759399
Epoch 2: -0.7344042062759399
Mem used: 444MB
best_loss: tensor(-0.8573, device='cuda:1')
final loss: -0.8202770948410034
Test:
Test: 0.9239290989660266
0.9239290989660266
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.22it/s]100%|██████████| 2/2 [00:00<00:00,  2.83it/s]100%|██████████| 2/2 [00:00<00:00,  2.72it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1, Loop Feat 0: -0.6810836791992188
Epoch 1, Loop Adj 0: -0.7096821069717407
Epoch 2: -0.7096821069717407
Mem used: 142MB
best_loss: tensor(-0.8557, device='cuda:1')
final loss: -0.8282730579376221
Test:
Test: 0.9320531757754801
0.9320531757754801
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.02it/s]100%|██████████| 2/2 [00:00<00:00,  2.51it/s]100%|██████████| 2/2 [00:00<00:00,  2.42it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1, Loop Feat 0: -0.7206461429595947
Epoch 1, Loop Adj 0: -0.749504029750824
Epoch 2: -0.749504029750824
Mem used: 142MB
best_loss: tensor(-0.8735, device='cuda:1')
best_loss: tensor(-0.8737, device='cuda:1')
final loss: -0.8577209115028381
Test:
Test: 0.9342688330871491
0.9342688330871491
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.89it/s]100%|██████████| 2/2 [00:00<00:00,  2.59it/s]100%|██████████| 2/2 [00:00<00:00,  2.63it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1, Loop Feat 0: -0.7205268740653992
Epoch 1, Loop Adj 0: -0.7571831941604614
Epoch 2: -0.7571831941604614
Mem used: 685MB
best_loss: tensor(-0.8781, device='cuda:1')
best_loss: tensor(-0.8786, device='cuda:1')
final loss: -0.8606746792793274
Test:
Test: 0.9261447562776958
0.9261447562776958
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.18it/s]100%|██████████| 2/2 [00:00<00:00,  2.33it/s]100%|██████████| 2/2 [00:00<00:00,  2.27it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1, Loop Feat 0: -0.7185655236244202
Epoch 1, Loop Adj 0: -0.7660281658172607
Epoch 2: -0.7660281658172607
Mem used: 342MB
best_loss: tensor(-0.8902, device='cuda:1')
best_loss: tensor(-0.8904, device='cuda:1')
final loss: -0.8716334104537964
Test:
Test: 0.9257754800590842
0.9257754800590842
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.17it/s]100%|██████████| 2/2 [00:00<00:00,  3.19it/s]100%|██████████| 2/2 [00:00<00:00,  3.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1, Loop Feat 0: -0.6837451457977295
Epoch 1, Loop Adj 0: -0.7235836386680603
Epoch 2: -0.7235836386680603
Mem used: 142MB
best_loss: tensor(-0.8491, device='cuda:1')
final loss: -0.8183977007865906
Test:
Test: 0.9361152141802068
0.9361152141802068
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.03it/s]100%|██████████| 2/2 [00:00<00:00,  2.34it/s]100%|██████████| 2/2 [00:00<00:00,  2.29it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986852645874
Epoch 1, Loop Feat 0: -0.6996228694915771
Epoch 1, Loop Adj 0: -0.7368361949920654
Epoch 2: -0.7368361949920654
Mem used: 142MB
best_loss: tensor(-0.8711, device='cuda:1')
final loss: -0.8384802341461182
Test:
Test: 0.9401772525849336
0.9401772525849336
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.86it/s]100%|██████████| 2/2 [00:00<00:00,  3.23it/s]100%|██████████| 2/2 [00:00<00:00,  3.17it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1, Loop Feat 0: -0.6790553331375122
Epoch 1, Loop Adj 0: -0.7146372199058533
Epoch 2: -0.7146372199058533
Mem used: 142MB
best_loss: tensor(-0.8705, device='cuda:1')
final loss: -0.8369408249855042
Test:
Test: 0.9387001477104875
0.9387001477104875
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.34it/s]100%|██████████| 2/2 [00:00<00:00,  2.66it/s]100%|██████████| 2/2 [00:00<00:00,  2.60it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328230857849
Epoch 1, Loop Feat 0: -0.7090024352073669
Epoch 1, Loop Adj 0: -0.7451130151748657
Epoch 2: -0.7451130151748657
Mem used: 142MB
best_loss: tensor(-0.8855, device='cuda:1')
final loss: -0.8551028370857239
Test:
Test: 0.9387001477104875
0.9387001477104875
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.25it/s]100%|██████████| 2/2 [00:00<00:00,  2.30it/s]100%|██████████| 2/2 [00:00<00:00,  2.29it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096760272979736
Epoch 1, Loop Feat 0: -0.7056704759597778
Epoch 1, Loop Adj 0: -0.7605382204055786
Epoch 2: -0.7605382204055786
Mem used: 816MB
best_loss: tensor(-0.8879, device='cuda:1')
best_loss: tensor(-0.8880, device='cuda:1')
final loss: -0.8636619448661804
Test:
Test: 0.9290989660265879
0.9290989660265879
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.57it/s]100%|██████████| 2/2 [00:00<00:00,  2.85it/s]100%|██████████| 2/2 [00:00<00:00,  2.80it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905821561813354
Epoch 1, Loop Feat 0: -0.6943458318710327
Epoch 1, Loop Adj 0: -0.7339850068092346
Epoch 2: -0.7339850068092346
Mem used: 464MB
best_loss: tensor(-0.8590, device='cuda:1')
final loss: -0.8190568089485168
Test:
Test: 0.9368537666174298
0.9368537666174298
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.77it/s]100%|██████████| 2/2 [00:00<00:00,  2.85it/s]100%|██████████| 2/2 [00:00<00:00,  2.84it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1, Loop Feat 0: -0.6802704930305481
Epoch 1, Loop Adj 0: -0.7089387774467468
Epoch 2: -0.7089387774467468
Mem used: 414MB
best_loss: tensor(-0.8569, device='cuda:1')
final loss: -0.8310468792915344
Test:
Test: 0.9457163958641064
0.9457163958641064
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.92it/s]100%|██████████| 2/2 [00:00<00:00,  2.83it/s]100%|██████████| 2/2 [00:00<00:00,  2.84it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1, Loop Feat 0: -0.7201629877090454
Epoch 1, Loop Adj 0: -0.7493277192115784
Epoch 2: -0.7493277192115784
Mem used: 142MB
best_loss: tensor(-0.8763, device='cuda:1')
final loss: -0.859183669090271
Test:
Test: 0.9409158050221565
0.9409158050221565
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.71it/s]100%|██████████| 2/2 [00:00<00:00,  2.77it/s]100%|██████████| 2/2 [00:00<00:00,  2.76it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210794687271118
Epoch 1, Loop Feat 0: -0.7203085422515869
Epoch 1, Loop Adj 0: -0.7565237879753113
Epoch 2: -0.7565237879753113
Mem used: 142MB
best_loss: tensor(-0.8812, device='cuda:1')
final loss: -0.8624179363250732
Test:
Test: 0.9364844903988183
0.9364844903988183
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.47it/s]100%|██████████| 2/2 [00:01<00:00,  1.50it/s]100%|██████████| 2/2 [00:01<00:00,  1.49it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1, Loop Feat 0: -0.7181326746940613
Epoch 1, Loop Adj 0: -0.7653560638427734
Epoch 2: -0.7653560638427734
Mem used: 142MB
best_loss: tensor(-0.8927, device='cuda:1')
best_loss: tensor(-0.8928, device='cuda:1')
final loss: -0.8748367428779602
Test:
Test: 0.930576070901034
0.930576070901034
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.22it/s]100%|██████████| 1/1 [00:00<00:00,  3.21it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1: -0.685497522354126
Mem used: 142MB
best_loss: tensor(-0.8018, device='cuda:1')
final loss: -0.7582679986953735
Test:
Test: 0.9409158050221565
0.9409158050221565
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.20it/s]100%|██████████| 1/1 [00:00<00:00,  2.20it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986852645874
Epoch 1: -0.6960986852645874
Mem used: 142MB
best_loss: tensor(-0.8316, device='cuda:1')
final loss: -0.7810693383216858
Test:
Test: 0.955317577548006
0.955317577548006
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.61it/s]100%|██████████| 1/1 [00:00<00:00,  2.60it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1: -0.6847533583641052
Mem used: -1359MB
best_loss: tensor(-0.8239, device='cuda:1')
best_loss: tensor(-0.8242, device='cuda:1')
final loss: -0.7726140022277832
Test:
Test: 0.941285081240768
0.941285081240768
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.17it/s]100%|██████████| 1/1 [00:00<00:00,  3.11it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328826904297
Epoch 1: -0.7075328826904297
Mem used: 142MB
best_loss: tensor(-0.8471, device='cuda:1')
final loss: -0.8005576133728027
Test:
Test: 0.9542097488921714
0.9542097488921714
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.08it/s]100%|██████████| 1/1 [00:00<00:00,  3.08it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096760272979736
Epoch 1: -0.7096760272979736
Mem used: 418MB
best_loss: tensor(-0.8426, device='cuda:1')
best_loss: tensor(-0.8432, device='cuda:1')
final loss: -0.8015745878219604
Test:
Test: 0.9405465288035451
0.9405465288035451
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.90it/s]100%|██████████| 1/1 [00:00<00:00,  1.90it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905820965766907
Epoch 1: -0.6905820965766907
Mem used: 598MB
best_loss: tensor(-0.8170, device='cuda:1')
final loss: -0.7624298334121704
Test:
Test: 0.9416543574593796
0.9416543574593796
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.17it/s]100%|██████████| 1/1 [00:00<00:00,  2.17it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1: -0.6920579075813293
Mem used: 312MB
best_loss: tensor(-0.8116, device='cuda:1')
best_loss: tensor(-0.8119, device='cuda:1')
final loss: -0.7696613073348999
Test:
Test: 0.9579025110782866
0.9579025110782866
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.50it/s]100%|██████████| 1/1 [00:00<00:00,  2.50it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1: -0.7145955562591553
Mem used: 142MB
best_loss: tensor(-0.8293, device='cuda:1')
final loss: -0.8001816868782043
Test:
Test: 0.9505169867060561
0.9505169867060561
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.99it/s]100%|██████████| 1/1 [00:00<00:00,  2.96it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1: -0.7210795283317566
Mem used: 142MB
best_loss: tensor(-0.8418, device='cuda:1')
best_loss: tensor(-0.8420, device='cuda:1')
final loss: -0.8101841807365417
Test:
Test: 0.9534711964549483
0.9534711964549483
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.41it/s]100%|██████████| 1/1 [00:00<00:00,  2.41it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1: -0.7245808243751526
Mem used: -1522MB
best_loss: tensor(-0.8511, device='cuda:1')
best_loss: tensor(-0.8519, device='cuda:1')
final loss: -0.8212217092514038
Test:
Test: 0.9512555391432792
0.9512555391432792
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.23it/s]100%|██████████| 1/1 [00:00<00:00,  3.14it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1: -0.685497522354126
Mem used: -1782MB
best_loss: tensor(-0.7990, device='cuda:1')
final loss: -0.7586084008216858
Test:
Test: 0.9335302806499262
0.9335302806499262
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.32it/s]100%|██████████| 1/1 [00:00<00:00,  2.28it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986256599426
Epoch 1: -0.6960986256599426
Mem used: 254MB
best_loss: tensor(-0.8295, device='cuda:1')
final loss: -0.7782789468765259
Test:
Test: 0.9423929098966026
0.9423929098966026
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.05it/s]100%|██████████| 1/1 [00:00<00:00,  3.00it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1: -0.6847533583641052
Mem used: 676MB
best_loss: tensor(-0.8207, device='cuda:1')
best_loss: tensor(-0.8221, device='cuda:1')
final loss: -0.771834135055542
Test:
Test: 0.939807976366322
0.939807976366322
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.13it/s]100%|██████████| 1/1 [00:00<00:00,  2.08it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328230857849
Epoch 1: -0.7075328230857849
Mem used: 142MB
best_loss: tensor(-0.8436, device='cuda:1')
best_loss: tensor(-0.8455, device='cuda:1')
final loss: -0.7985653877258301
Test:
Test: 0.9527326440177253
0.9527326440177253
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.36it/s]100%|██████████| 1/1 [00:00<00:00,  2.36it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096760272979736
Epoch 1: -0.7096760272979736
Mem used: 142MB
best_loss: tensor(-0.8411, device='cuda:1')
best_loss: tensor(-0.8413, device='cuda:1')
final loss: -0.8001922965049744
Test:
Test: 0.9346381093057607
0.9346381093057607
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.49it/s]100%|██████████| 1/1 [00:00<00:00,  2.49it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905820965766907
Epoch 1: -0.6905820965766907
Mem used: -1782MB
best_loss: tensor(-0.8155, device='cuda:1')
final loss: -0.7612781524658203
Test:
Test: 0.9327917282127031
0.9327917282127031
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.44it/s]100%|██████████| 1/1 [00:00<00:00,  2.42it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1: -0.6920579075813293
Mem used: -1347MB
best_loss: tensor(-0.8111, device='cuda:1')
final loss: -0.7673107385635376
Test:
Test: 0.9453471196454948
0.9453471196454948
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.78it/s]100%|██████████| 1/1 [00:00<00:00,  2.78it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1: -0.7145955562591553
Mem used: 264MB
best_loss: tensor(-0.8273, device='cuda:1')
best_loss: tensor(-0.8278, device='cuda:1')
final loss: -0.798771321773529
Test:
Test: 0.94903988183161
0.94903988183161
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.01it/s]100%|██████████| 1/1 [00:00<00:00,  3.00it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1: -0.7210795283317566
Mem used: 142MB
best_loss: tensor(-0.8380, device='cuda:1')
best_loss: tensor(-0.8397, device='cuda:1')
final loss: -0.8073321580886841
Test:
Test: 0.9449778434268833
0.9449778434268833
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.76it/s]100%|██████████| 1/1 [00:00<00:00,  2.75it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1: -0.7245808243751526
Mem used: 386MB
best_loss: tensor(-0.8490, device='cuda:1')
best_loss: tensor(-0.8496, device='cuda:1')
final loss: -0.8182381391525269
Test:
Test: 0.9431314623338257
0.9431314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.48it/s]100%|██████████| 1/1 [00:00<00:00,  2.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1: -0.685497522354126
Mem used: -1782MB
best_loss: tensor(-0.8015, device='cuda:1')
final loss: -0.757580578327179
Test:
Test: 0.9431314623338257
0.9431314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.54it/s]100%|██████████| 1/1 [00:00<00:00,  2.54it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986256599426
Epoch 1: -0.6960986256599426
Mem used: 392MB
best_loss: tensor(-0.8317, device='cuda:1')
final loss: -0.7824968695640564
Test:
Test: 0.9612259970457903
0.9612259970457903
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.86it/s]100%|██████████| 1/1 [00:00<00:00,  2.68it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1: -0.6847533583641052
Mem used: 340MB
best_loss: tensor(-0.8243, device='cuda:1')
best_loss: tensor(-0.8244, device='cuda:1')
final loss: -0.7740577459335327
Test:
Test: 0.9442392909896603
0.9442392909896603
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.12it/s]100%|██████████| 1/1 [00:00<00:00,  2.11it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328230857849
Epoch 1: -0.7075328230857849
Mem used: -583MB
best_loss: tensor(-0.8488, device='cuda:1')
final loss: -0.8010995984077454
Test:
Test: 0.955317577548006
0.955317577548006
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.63it/s]100%|██████████| 1/1 [00:00<00:00,  2.63it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096760272979736
Epoch 1: -0.7096760272979736
Mem used: 142MB
best_loss: tensor(-0.8435, device='cuda:1')
best_loss: tensor(-0.8436, device='cuda:1')
final loss: -0.8023768663406372
Test:
Test: 0.9435007385524372
0.9435007385524372
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.40it/s]100%|██████████| 1/1 [00:00<00:00,  2.40it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905820965766907
Epoch 1: -0.6905820965766907
Mem used: 142MB
best_loss: tensor(-0.8168, device='cuda:1')
best_loss: tensor(-0.8169, device='cuda:1')
final loss: -0.7642764449119568
Test:
Test: 0.9453471196454948
0.9453471196454948
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.71it/s]100%|██████████| 1/1 [00:00<00:00,  2.71it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1: -0.6920579075813293
Mem used: 280MB
best_loss: tensor(-0.8122, device='cuda:1')
final loss: -0.7701340317726135
Test:
Test: 0.9590103397341211
0.9590103397341211
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.69it/s]100%|██████████| 1/1 [00:00<00:00,  2.68it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1: -0.7145955562591553
Mem used: 936MB
best_loss: tensor(-0.8309, device='cuda:1')
final loss: -0.8009478449821472
Test:
Test: 0.9545790251107829
0.9545790251107829
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.49it/s]100%|██████████| 1/1 [00:00<00:00,  2.49it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1: -0.7210795283317566
Mem used: 456MB
best_loss: tensor(-0.8424, device='cuda:1')
best_loss: tensor(-0.8424, device='cuda:1')
final loss: -0.8096120953559875
Test:
Test: 0.9556868537666174
0.9556868537666174
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.21it/s]100%|██████████| 1/1 [00:00<00:00,  2.21it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1: -0.7245808243751526
Mem used: 300MB
best_loss: tensor(-0.8519, device='cuda:1')
best_loss: tensor(-0.8520, device='cuda:1')
final loss: -0.8225044012069702
Test:
Test: 0.9523633677991138
0.9523633677991138
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.34it/s]100%|██████████| 2/2 [00:00<00:00,  2.42it/s]100%|██████████| 2/2 [00:00<00:00,  2.39it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1, Loop Feat 0: -0.683817982673645
Epoch 1, Loop Adj 0: -0.7237515449523926
Epoch 2: -0.7237515449523926
Mem used: 312MB
best_loss: tensor(-0.8498, device='cuda:1')
final loss: -0.8183075785636902
Test:
Test: 0.9361152141802068
0.9361152141802068
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.46it/s]100%|██████████| 2/2 [00:00<00:00,  3.42it/s]100%|██████████| 2/2 [00:00<00:00,  3.23it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986256599426
Epoch 1, Loop Feat 0: -0.6996756792068481
Epoch 1, Loop Adj 0: -0.7368915677070618
Epoch 2: -0.7368915677070618
Mem used: 142MB
best_loss: tensor(-0.8710, device='cuda:1')
final loss: -0.8361492156982422
Test:
Test: 0.9383308714918759
0.9383308714918759
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.23it/s]100%|██████████| 2/2 [00:00<00:00,  3.24it/s]100%|██████████| 2/2 [00:00<00:00,  3.24it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1, Loop Feat 0: -0.6792420744895935
Epoch 1, Loop Adj 0: -0.7147372364997864
Epoch 2: -0.7147372364997864
Mem used: 142MB
best_loss: tensor(-0.8695, device='cuda:1')
best_loss: tensor(-0.8701, device='cuda:1')
final loss: -0.835360586643219
Test:
Test: 0.9375923190546529
0.9375923190546529
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.55it/s]100%|██████████| 2/2 [00:00<00:00,  2.57it/s]100%|██████████| 2/2 [00:00<00:00,  2.57it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328230857849
Epoch 1, Loop Feat 0: -0.7091065049171448
Epoch 1, Loop Adj 0: -0.7452988624572754
Epoch 2: -0.7452988624572754
Mem used: -1522MB
best_loss: tensor(-0.8842, device='cuda:1')
best_loss: tensor(-0.8850, device='cuda:1')
final loss: -0.8554569482803345
Test:
Test: 0.9364844903988183
0.9364844903988183
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.99it/s]100%|██████████| 2/2 [00:00<00:00,  2.82it/s]100%|██████████| 2/2 [00:00<00:00,  2.82it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096760272979736
Epoch 1, Loop Feat 0: -0.7058025598526001
Epoch 1, Loop Adj 0: -0.7606697082519531
Epoch 2: -0.7606697082519531
Mem used: 142MB
best_loss: tensor(-0.8875, device='cuda:1')
best_loss: tensor(-0.8880, device='cuda:1')
final loss: -0.8630044460296631
Test:
Test: 0.9279911373707533
0.9279911373707533
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.36it/s]100%|██████████| 2/2 [00:00<00:00,  2.78it/s]100%|██████████| 2/2 [00:00<00:00,  2.70it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905820965766907
Epoch 1, Loop Feat 0: -0.6944458484649658
Epoch 1, Loop Adj 0: -0.7340378761291504
Epoch 2: -0.7340378761291504
Mem used: 382MB
best_loss: tensor(-0.8586, device='cuda:1')
final loss: -0.8199791312217712
Test:
Test: 0.9346381093057607
0.9346381093057607
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.62it/s]100%|██████████| 2/2 [00:00<00:00,  2.34it/s]100%|██████████| 2/2 [00:00<00:00,  2.19it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1, Loop Feat 0: -0.6804293990135193
Epoch 1, Loop Adj 0: -0.7090636491775513
Epoch 2: -0.7090636491775513
Mem used: 837MB
best_loss: tensor(-0.8570, device='cuda:1')
final loss: -0.8299567699432373
Test:
Test: 0.9416543574593796
0.9416543574593796
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.35it/s]100%|██████████| 2/2 [00:00<00:00,  2.65it/s]100%|██████████| 2/2 [00:00<00:00,  2.60it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1, Loop Feat 0: -0.7202609777450562
Epoch 1, Loop Adj 0: -0.7493610382080078
Epoch 2: -0.7493610382080078
Mem used: 142MB
best_loss: tensor(-0.8760, device='cuda:1')
final loss: -0.8590533137321472
Test:
Test: 0.9379615952732644
0.9379615952732644
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.49it/s]100%|██████████| 2/2 [00:00<00:00,  2.33it/s]100%|██████████| 2/2 [00:00<00:00,  2.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1, Loop Feat 0: -0.7203562259674072
Epoch 1, Loop Adj 0: -0.7566402554512024
Epoch 2: -0.7566402554512024
Mem used: 142MB
best_loss: tensor(-0.8805, device='cuda:1')
best_loss: tensor(-0.8808, device='cuda:1')
final loss: -0.8618104457855225
Test:
Test: 0.9361152141802068
0.9361152141802068
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.02it/s]100%|██████████| 2/2 [00:00<00:00,  3.37it/s]100%|██████████| 2/2 [00:00<00:00,  3.31it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1, Loop Feat 0: -0.7182290554046631
Epoch 1, Loop Adj 0: -0.7654716372489929
Epoch 2: -0.7654716372489929
Mem used: 142MB
best_loss: tensor(-0.8923, device='cuda:1')
best_loss: tensor(-0.8927, device='cuda:1')
final loss: -0.8738112449645996
Test:
Test: 0.9338995568685377
0.9338995568685377
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.74it/s]100%|██████████| 2/2 [00:00<00:00,  3.08it/s]100%|██████████| 2/2 [00:00<00:00,  3.02it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1, Loop Feat 0: -0.6841182112693787
Epoch 1, Loop Adj 0: -0.7244344353675842
Epoch 2: -0.7244344353675842
Mem used: -1025MB
best_loss: tensor(-0.8474, device='cuda:1')
final loss: -0.8168392777442932
Test:
Test: 0.9272525849335302
0.9272525849335302
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.44it/s]100%|██████████| 2/2 [00:01<00:00,  1.65it/s]100%|██████████| 2/2 [00:01<00:00,  1.73it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986852645874
Epoch 1, Loop Feat 0: -0.6999081373214722
Epoch 1, Loop Adj 0: -0.7371946573257446
Epoch 2: -0.7371946573257446
Mem used: 290MB
best_loss: tensor(-0.8694, device='cuda:1')
final loss: -0.8364979028701782
Test:
Test: 0.9320531757754801
0.9320531757754801
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.92it/s]100%|██████████| 2/2 [00:00<00:00,  4.48it/s]100%|██████████| 2/2 [00:00<00:00,  4.38it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1, Loop Feat 0: -0.6800248026847839
Epoch 1, Loop Adj 0: -0.7151963710784912
Epoch 2: -0.7151963710784912
Mem used: 142MB
best_loss: tensor(-0.8680, device='cuda:1')
best_loss: tensor(-0.8689, device='cuda:1')
final loss: -0.8336763978004456
Test:
Test: 0.9346381093057607
0.9346381093057607
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.53it/s]100%|██████████| 2/2 [00:00<00:00,  2.65it/s]100%|██████████| 2/2 [00:00<00:00,  2.63it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328826904297
Epoch 1, Loop Feat 0: -0.7095445990562439
Epoch 1, Loop Adj 0: -0.7457351684570312
Epoch 2: -0.7457351684570312
Mem used: 412MB
best_loss: tensor(-0.8816, device='cuda:1')
final loss: -0.8504325151443481
Test:
Test: 0.9283604135893648
0.9283604135893648
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  4.03it/s]100%|██████████| 2/2 [00:00<00:00,  2.87it/s]100%|██████████| 2/2 [00:00<00:00,  3.00it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096759676933289
Epoch 1, Loop Feat 0: -0.7063364386558533
Epoch 1, Loop Adj 0: -0.7611970901489258
Epoch 2: -0.7611970901489258
Mem used: 142MB
best_loss: tensor(-0.8846, device='cuda:1')
best_loss: tensor(-0.8848, device='cuda:1')
final loss: -0.8611717224121094
Test:
Test: 0.9176514032496307
0.9176514032496307
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.93it/s]100%|██████████| 2/2 [00:00<00:00,  2.63it/s]100%|██████████| 2/2 [00:00<00:00,  2.48it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905820965766907
Epoch 1, Loop Feat 0: -0.6948748826980591
Epoch 1, Loop Adj 0: -0.7344259023666382
Epoch 2: -0.7344259023666382
Mem used: 142MB
best_loss: tensor(-0.8574, device='cuda:1')
final loss: -0.8187100291252136
Test:
Test: 0.9231905465288035
0.9231905465288035
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.68it/s]100%|██████████| 2/2 [00:00<00:00,  3.36it/s]100%|██████████| 2/2 [00:00<00:00,  3.19it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1, Loop Feat 0: -0.6810484528541565
Epoch 1, Loop Adj 0: -0.7096421122550964
Epoch 2: -0.7096421122550964
Mem used: 272MB
best_loss: tensor(-0.8557, device='cuda:1')
final loss: -0.828587532043457
Test:
Test: 0.9327917282127031
0.9327917282127031
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.90it/s]100%|██████████| 2/2 [00:00<00:00,  2.76it/s]100%|██████████| 2/2 [00:00<00:00,  2.85it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1, Loop Feat 0: -0.720630407333374
Epoch 1, Loop Adj 0: -0.7494924068450928
Epoch 2: -0.7494924068450928
Mem used: 1227MB
best_loss: tensor(-0.8736, device='cuda:1')
best_loss: tensor(-0.8737, device='cuda:1')
final loss: -0.8578006625175476
Test:
Test: 0.9338995568685377
0.9338995568685377
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.97it/s]100%|██████████| 2/2 [00:00<00:00,  2.50it/s]100%|██████████| 2/2 [00:00<00:00,  2.56it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1, Loop Feat 0: -0.7205166816711426
Epoch 1, Loop Adj 0: -0.7571461796760559
Epoch 2: -0.7571461796760559
Mem used: 142MB
best_loss: tensor(-0.8781, device='cuda:1')
best_loss: tensor(-0.8786, device='cuda:1')
final loss: -0.860550582408905
Test:
Test: 0.9265140324963073
0.9265140324963073
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.80it/s]100%|██████████| 2/2 [00:00<00:00,  3.05it/s]100%|██████████| 2/2 [00:00<00:00,  2.97it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1, Loop Feat 0: -0.7185556292533875
Epoch 1, Loop Adj 0: -0.7659791111946106
Epoch 2: -0.7659791111946106
Mem used: -1782MB
best_loss: tensor(-0.8905, device='cuda:1')
best_loss: tensor(-0.8905, device='cuda:1')
final loss: -0.871300458908081
Test:
Test: 0.9254062038404727
0.9254062038404727
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.61it/s]100%|██████████| 2/2 [00:00<00:00,  2.61it/s]100%|██████████| 2/2 [00:00<00:00,  2.61it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1, Loop Feat 0: -0.6837438344955444
Epoch 1, Loop Adj 0: -0.7235863208770752
Epoch 2: -0.7235863208770752
Mem used: 816MB
best_loss: tensor(-0.8491, device='cuda:1')
final loss: -0.8183948993682861
Test:
Test: 0.9361152141802068
0.9361152141802068
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.72it/s]100%|██████████| 2/2 [00:00<00:00,  3.33it/s]100%|██████████| 2/2 [00:00<00:00,  3.22it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986256599426
Epoch 1, Loop Feat 0: -0.6996221542358398
Epoch 1, Loop Adj 0: -0.7368342876434326
Epoch 2: -0.7368342876434326
Mem used: 222MB
best_loss: tensor(-0.8711, device='cuda:1')
final loss: -0.8384823203086853
Test:
Test: 0.9401772525849336
0.9401772525849336
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.96it/s]100%|██████████| 2/2 [00:00<00:00,  2.17it/s]100%|██████████| 2/2 [00:00<00:00,  2.13it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1, Loop Feat 0: -0.6790540218353271
Epoch 1, Loop Adj 0: -0.714638888835907
Epoch 2: -0.714638888835907
Mem used: 372MB
best_loss: tensor(-0.8705, device='cuda:1')
final loss: -0.8369386792182922
Test:
Test: 0.9387001477104875
0.9387001477104875
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.60it/s]100%|██████████| 2/2 [00:00<00:00,  2.85it/s]100%|██████████| 2/2 [00:00<00:00,  2.81it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328826904297
Epoch 1, Loop Feat 0: -0.7090012431144714
Epoch 1, Loop Adj 0: -0.7451145052909851
Epoch 2: -0.7451145052909851
Mem used: 142MB
best_loss: tensor(-0.8855, device='cuda:1')
final loss: -0.8551050424575806
Test:
Test: 0.9387001477104875
0.9387001477104875
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.13it/s]100%|██████████| 2/2 [00:00<00:00,  2.44it/s]100%|██████████| 2/2 [00:00<00:00,  2.39it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6175430417060852
Epoch 0, Loop Adj 0: -0.7096760272979736
Epoch 1, Loop Feat 0: -0.7056692838668823
Epoch 1, Loop Adj 0: -0.7605384588241577
Epoch 2: -0.7605384588241577
Mem used: 142MB
best_loss: tensor(-0.8879, device='cuda:1')
best_loss: tensor(-0.8880, device='cuda:1')
final loss: -0.8636631369590759
Test:
Test: 0.9290989660265879
0.9290989660265879
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.19it/s]100%|██████████| 2/2 [00:00<00:00,  2.72it/s]100%|██████████| 2/2 [00:00<00:00,  2.62it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905821561813354
Epoch 1, Loop Feat 0: -0.6943446397781372
Epoch 1, Loop Adj 0: -0.7339836359024048
Epoch 2: -0.7339836359024048
Mem used: 142MB
best_loss: tensor(-0.8590, device='cuda:1')
final loss: -0.8190552592277527
Test:
Test: 0.9368537666174298
0.9368537666174298
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.75it/s]100%|██████████| 2/2 [00:00<00:00,  2.87it/s]100%|██████████| 2/2 [00:00<00:00,  2.85it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1, Loop Feat 0: -0.680269718170166
Epoch 1, Loop Adj 0: -0.7089338898658752
Epoch 2: -0.7089338898658752
Mem used: 142MB
best_loss: tensor(-0.8569, device='cuda:1')
final loss: -0.8310467600822449
Test:
Test: 0.9457163958641064
0.9457163958641064
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.15it/s]100%|██████████| 2/2 [00:00<00:00,  2.33it/s]100%|██████████| 2/2 [00:00<00:00,  2.30it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5979332327842712
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1, Loop Feat 0: -0.7201621532440186
Epoch 1, Loop Adj 0: -0.7493237257003784
Epoch 2: -0.7493237257003784
Mem used: 462MB
best_loss: tensor(-0.8763, device='cuda:1')
final loss: -0.859179675579071
Test:
Test: 0.9409158050221565
0.9409158050221565
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.74it/s]100%|██████████| 2/2 [00:00<00:00,  2.24it/s]100%|██████████| 2/2 [00:00<00:00,  2.15it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1, Loop Feat 0: -0.7203075289726257
Epoch 1, Loop Adj 0: -0.7565184831619263
Epoch 2: -0.7565184831619263
Mem used: 230MB
best_loss: tensor(-0.8812, device='cuda:1')
final loss: -0.8624106645584106
Test:
Test: 0.9364844903988183
0.9364844903988183
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.29it/s]100%|██████████| 2/2 [00:00<00:00,  2.03it/s]100%|██████████| 2/2 [00:00<00:00,  2.05it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1, Loop Feat 0: -0.7181324362754822
Epoch 1, Loop Adj 0: -0.7653630375862122
Epoch 2: -0.7653630375862122
Mem used: 142MB
best_loss: tensor(-0.8927, device='cuda:1')
best_loss: tensor(-0.8928, device='cuda:1')
final loss: -0.8754026293754578
Test:
Test: 0.9309453471196455
0.9309453471196455
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.71it/s]100%|██████████| 1/1 [00:00<00:00,  2.71it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1: -0.685497522354126
Mem used: 142MB
best_loss: tensor(-0.8018, device='cuda:1')
final loss: -0.7582679986953735
Test:
Test: 0.9409158050221565
0.9409158050221565
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.02it/s]100%|██████████| 1/1 [00:00<00:00,  2.97it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986852645874
Epoch 1: -0.6960986852645874
Mem used: 142MB
best_loss: tensor(-0.8316, device='cuda:1')
final loss: -0.7810693383216858
Test:
Test: 0.955317577548006
0.955317577548006
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.37it/s]100%|██████████| 1/1 [00:00<00:00,  2.37it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1: -0.6847533583641052
Mem used: 142MB
best_loss: tensor(-0.8239, device='cuda:1')
final loss: -0.7723490595817566
Test:
Test: 0.9409158050221565
0.9409158050221565
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.51it/s]100%|██████████| 1/1 [00:00<00:00,  2.51it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328826904297
Epoch 1: -0.7075328826904297
Mem used: 360MB
best_loss: tensor(-0.8469, device='cuda:1')
best_loss: tensor(-0.8481, device='cuda:1')
final loss: -0.7997658848762512
Test:
Test: 0.955317577548006
0.955317577548006
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.35it/s]100%|██████████| 1/1 [00:00<00:00,  2.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096760272979736
Epoch 1: -0.7096760272979736
Mem used: 291MB
best_loss: tensor(-0.8426, device='cuda:1')
best_loss: tensor(-0.8433, device='cuda:1')
final loss: -0.8021934032440186
Test:
Test: 0.9431314623338257
0.9431314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.51it/s]100%|██████████| 1/1 [00:00<00:00,  2.51it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905821561813354
Epoch 1: -0.6905821561813354
Mem used: 142MB
best_loss: tensor(-0.8170, device='cuda:1')
final loss: -0.7624298334121704
Test:
Test: 0.9416543574593796
0.9416543574593796
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.73it/s]100%|██████████| 1/1 [00:00<00:00,  2.70it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1: -0.6920579075813293
Mem used: 142MB
best_loss: tensor(-0.8116, device='cuda:1')
best_loss: tensor(-0.8120, device='cuda:1')
final loss: -0.7696887254714966
Test:
Test: 0.9590103397341211
0.9590103397341211
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.63it/s]100%|██████████| 1/1 [00:00<00:00,  2.62it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1: -0.7145955562591553
Mem used: 142MB
best_loss: tensor(-0.8293, device='cuda:1')
best_loss: tensor(-0.8307, device='cuda:1')
final loss: -0.8005627393722534
Test:
Test: 0.9549483013293943
0.9549483013293943
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.48it/s]100%|██████████| 1/1 [00:00<00:00,  1.48it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1: -0.7210795283317566
Mem used: -1783MB
best_loss: tensor(-0.8418, device='cuda:1')
best_loss: tensor(-0.8424, device='cuda:1')
final loss: -0.8092414140701294
Test:
Test: 0.9542097488921714
0.9542097488921714
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.72it/s]100%|██████████| 1/1 [00:00<00:00,  2.68it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1: -0.7245808243751526
Mem used: 948MB
best_loss: tensor(-0.8511, device='cuda:1')
best_loss: tensor(-0.8519, device='cuda:1')
final loss: -0.8223040699958801
Test:
Test: 0.9516248153618907
0.9516248153618907
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.38it/s]100%|██████████| 1/1 [00:00<00:00,  2.38it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1: -0.685497522354126
Mem used: 286MB
best_loss: tensor(-0.7990, device='cuda:1')
best_loss: tensor(-0.8014, device='cuda:1')
final loss: -0.7568668127059937
Test:
Test: 0.9442392909896603
0.9442392909896603
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.49it/s]100%|██████████| 1/1 [00:00<00:00,  2.40it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986852645874
Epoch 1: -0.6960986852645874
Mem used: 346MB
best_loss: tensor(-0.8295, device='cuda:1')
best_loss: tensor(-0.8313, device='cuda:1')
final loss: -0.7818917036056519
Test:
Test: 0.9612259970457903
0.9612259970457903
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.91it/s]100%|██████████| 1/1 [00:00<00:00,  1.91it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1: -0.6847533583641052
Mem used: 142MB
best_loss: tensor(-0.8207, device='cuda:1')
best_loss: tensor(-0.8238, device='cuda:1')
final loss: -0.7711646556854248
Test:
Test: 0.9431314623338257
0.9431314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.34it/s]100%|██████████| 1/1 [00:00<00:00,  2.33it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328826904297
Epoch 1: -0.7075328826904297
Mem used: 816MB
best_loss: tensor(-0.8436, device='cuda:1')
best_loss: tensor(-0.8481, device='cuda:1')
final loss: -0.7997658848762512
Test:
Test: 0.955317577548006
0.955317577548006
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.43it/s]100%|██████████| 1/1 [00:00<00:00,  2.37it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096759676933289
Epoch 1: -0.7096759676933289
Mem used: 270MB
best_loss: tensor(-0.8411, device='cuda:1')
best_loss: tensor(-0.8433, device='cuda:1')
final loss: -0.8021934032440186
Test:
Test: 0.9431314623338257
0.9431314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.17it/s]100%|██████████| 1/1 [00:00<00:00,  2.15it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905820965766907
Epoch 1: -0.6905820965766907
Mem used: 158MB
best_loss: tensor(-0.8155, device='cuda:1')
best_loss: tensor(-0.8164, device='cuda:1')
final loss: -0.7631645202636719
Test:
Test: 0.9431314623338257
0.9431314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.58it/s]100%|██████████| 1/1 [00:00<00:00,  3.46it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1: -0.6920579075813293
Mem used: 142MB
best_loss: tensor(-0.8110, device='cuda:1')
best_loss: tensor(-0.8120, device='cuda:1')
final loss: -0.7696887254714966
Test:
Test: 0.9590103397341211
0.9590103397341211
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.45it/s]100%|██████████| 1/1 [00:00<00:00,  2.45it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1: -0.7145955562591553
Mem used: 142MB
best_loss: tensor(-0.8273, device='cuda:1')
best_loss: tensor(-0.8307, device='cuda:1')
final loss: -0.8005627393722534
Test:
Test: 0.9549483013293943
0.9549483013293943
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.85it/s]100%|██████████| 1/1 [00:00<00:00,  2.84it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1: -0.7210795283317566
Mem used: -1679MB
best_loss: tensor(-0.8380, device='cuda:1')
best_loss: tensor(-0.8424, device='cuda:1')
final loss: -0.8092414140701294
Test:
Test: 0.9542097488921714
0.9542097488921714
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.35it/s]100%|██████████| 1/1 [00:00<00:00,  3.29it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1: -0.7245808243751526
Mem used: 230MB
best_loss: tensor(-0.8490, device='cuda:1')
best_loss: tensor(-0.8519, device='cuda:1')
final loss: -0.8223040699958801
Test:
Test: 0.9516248153618907
0.9516248153618907
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.21it/s]100%|██████████| 1/1 [00:00<00:00,  2.14it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1: -0.685497522354126
Mem used: 290MB
best_loss: tensor(-0.8015, device='cuda:1')
final loss: -0.757580578327179
Test:
Test: 0.9431314623338257
0.9431314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.37it/s]100%|██████████| 1/1 [00:00<00:00,  2.36it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986852645874
Epoch 1: -0.6960986852645874
Mem used: 142MB
best_loss: tensor(-0.8317, device='cuda:1')
final loss: -0.7824968695640564
Test:
Test: 0.9612259970457903
0.9612259970457903
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.55it/s]100%|██████████| 1/1 [00:00<00:00,  2.55it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1: -0.6847533583641052
Mem used: 142MB
best_loss: tensor(-0.8243, device='cuda:1')
best_loss: tensor(-0.8244, device='cuda:1')
final loss: -0.7740577459335327
Test:
Test: 0.9442392909896603
0.9442392909896603
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.32it/s]100%|██████████| 1/1 [00:00<00:00,  2.32it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328230857849
Epoch 1: -0.7075328230857849
Mem used: 142MB
best_loss: tensor(-0.8488, device='cuda:1')
final loss: -0.8010995984077454
Test:
Test: 0.955317577548006
0.955317577548006
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.75it/s]100%|██████████| 1/1 [00:00<00:00,  2.75it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096759676933289
Epoch 1: -0.7096759676933289
Mem used: 142MB
best_loss: tensor(-0.8435, device='cuda:1')
best_loss: tensor(-0.8436, device='cuda:1')
final loss: -0.8023768663406372
Test:
Test: 0.9435007385524372
0.9435007385524372
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.62it/s]100%|██████████| 1/1 [00:00<00:00,  2.61it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905820965766907
Epoch 1: -0.6905820965766907
Mem used: 282MB
best_loss: tensor(-0.8168, device='cuda:1')
best_loss: tensor(-0.8169, device='cuda:1')
final loss: -0.7642764449119568
Test:
Test: 0.9453471196454948
0.9453471196454948
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.58it/s]100%|██████████| 1/1 [00:00<00:00,  2.54it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1: -0.6920579075813293
Mem used: 232MB
best_loss: tensor(-0.8122, device='cuda:1')
final loss: -0.7701340913772583
Test:
Test: 0.9590103397341211
0.9590103397341211
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.72it/s]100%|██████████| 1/1 [00:00<00:00,  2.72it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1: -0.7145955562591553
Mem used: 548MB
best_loss: tensor(-0.8309, device='cuda:1')
final loss: -0.8009478449821472
Test:
Test: 0.9545790251107829
0.9545790251107829
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.06it/s]100%|██████████| 1/1 [00:00<00:00,  3.05it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1: -0.7210795283317566
Mem used: 142MB
best_loss: tensor(-0.8424, device='cuda:1')
best_loss: tensor(-0.8424, device='cuda:1')
final loss: -0.8102031350135803
Test:
Test: 0.955317577548006
0.955317577548006
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.44it/s]100%|██████████| 1/1 [00:00<00:00,  2.44it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1: -0.7245808243751526
Mem used: -1047MB
best_loss: tensor(-0.8519, device='cuda:1')
best_loss: tensor(-0.8520, device='cuda:1')
final loss: -0.8225044012069702
Test:
Test: 0.9523633677991138
0.9523633677991138
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.41it/s]100%|██████████| 2/2 [00:00<00:00,  2.81it/s]100%|██████████| 2/2 [00:00<00:00,  2.72it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.6854974627494812
Epoch 1, Loop Feat 0: -0.6837775707244873
Epoch 1, Loop Adj 0: -0.723670244216919
Epoch 2: -0.723670244216919
Mem used: 816MB
best_loss: tensor(-0.8497, device='cuda:1')
final loss: -0.8189833760261536
Test:
Test: 0.9361152141802068
0.9361152141802068
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.64it/s]100%|██████████| 2/2 [00:00<00:00,  2.48it/s]100%|██████████| 2/2 [00:00<00:00,  2.50it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986852645874
Epoch 1, Loop Feat 0: -0.6996486186981201
Epoch 1, Loop Adj 0: -0.7368980646133423
Epoch 2: -0.7368980646133423
Mem used: 276MB
best_loss: tensor(-0.8711, device='cuda:1')
final loss: -0.8365294933319092
Test:
Test: 0.9375923190546529
0.9375923190546529
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.82it/s]100%|██████████| 2/2 [00:00<00:00,  3.08it/s]100%|██████████| 2/2 [00:00<00:00,  3.03it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1, Loop Feat 0: -0.6791414022445679
Epoch 1, Loop Adj 0: -0.7146544456481934
Epoch 2: -0.7146544456481934
Mem used: 142MB
best_loss: tensor(-0.8696, device='cuda:1')
best_loss: tensor(-0.8702, device='cuda:1')
final loss: -0.8367286920547485
Test:
Test: 0.9375923190546529
0.9375923190546529
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.68it/s]100%|██████████| 2/2 [00:00<00:00,  2.34it/s]100%|██████████| 2/2 [00:00<00:00,  2.38it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328230857849
Epoch 1, Loop Feat 0: -0.7090502381324768
Epoch 1, Loop Adj 0: -0.7452165484428406
Epoch 2: -0.7452165484428406
Mem used: 142MB
best_loss: tensor(-0.8842, device='cuda:1')
best_loss: tensor(-0.8847, device='cuda:1')
final loss: -0.8539705872535706
Test:
Test: 0.9379615952732644
0.9379615952732644
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.38it/s]100%|██████████| 2/2 [00:00<00:00,  2.91it/s]100%|██████████| 2/2 [00:00<00:00,  2.81it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096760272979736
Epoch 1, Loop Feat 0: -0.7057324647903442
Epoch 1, Loop Adj 0: -0.7605879902839661
Epoch 2: -0.7605879902839661
Mem used: 142MB
best_loss: tensor(-0.8874, device='cuda:1')
best_loss: tensor(-0.8877, device='cuda:1')
final loss: -0.8623751401901245
Test:
Test: 0.9276218611521418
0.9276218611521418
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  4.00it/s]100%|██████████| 2/2 [00:00<00:00,  3.87it/s]100%|██████████| 2/2 [00:00<00:00,  3.88it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905820965766907
Epoch 1, Loop Feat 0: -0.6943916082382202
Epoch 1, Loop Adj 0: -0.7340251207351685
Epoch 2: -0.7340251207351685
Mem used: 428MB
best_loss: tensor(-0.8586, device='cuda:1')
final loss: -0.8200120329856873
Test:
Test: 0.9346381093057607
0.9346381093057607
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.72it/s]100%|██████████| 2/2 [00:01<00:00,  1.73it/s]100%|██████████| 2/2 [00:01<00:00,  1.71it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1, Loop Feat 0: -0.6803435683250427
Epoch 1, Loop Adj 0: -0.7089908123016357
Epoch 2: -0.7089908123016357
Mem used: 961MB
best_loss: tensor(-0.8570, device='cuda:1')
final loss: -0.829944908618927
Test:
Test: 0.9416543574593796
0.9416543574593796
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.43it/s]100%|██████████| 2/2 [00:00<00:00,  2.65it/s]100%|██████████| 2/2 [00:00<00:00,  2.75it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1, Loop Feat 0: -0.720208466053009
Epoch 1, Loop Adj 0: -0.7493574619293213
Epoch 2: -0.7493574619293213
Mem used: 142MB
best_loss: tensor(-0.8760, device='cuda:1')
best_loss: tensor(-0.8760, device='cuda:1')
final loss: -0.8581003546714783
Test:
Test: 0.939069423929099
0.939069423929099
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.20it/s]100%|██████████| 2/2 [00:00<00:00,  2.56it/s]100%|██████████| 2/2 [00:00<00:00,  2.49it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1, Loop Feat 0: -0.7203298211097717
Epoch 1, Loop Adj 0: -0.7565833926200867
Epoch 2: -0.7565833926200867
Mem used: 142MB
best_loss: tensor(-0.8805, device='cuda:1')
best_loss: tensor(-0.8810, device='cuda:1')
final loss: -0.862377405166626
Test:
Test: 0.9357459379615952
0.9357459379615952
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.26it/s]100%|██████████| 2/2 [00:00<00:00,  2.38it/s]100%|██████████| 2/2 [00:00<00:00,  2.36it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1, Loop Feat 0: -0.7181803584098816
Epoch 1, Loop Adj 0: -0.7654174566268921
Epoch 2: -0.7654174566268921
Mem used: 142MB
best_loss: tensor(-0.8923, device='cuda:1')
best_loss: tensor(-0.8927, device='cuda:1')
final loss: -0.8747170567512512
Test:
Test: 0.9324224519940916
0.9324224519940916
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.21it/s]100%|██████████| 2/2 [00:00<00:00,  2.19it/s]100%|██████████| 2/2 [00:00<00:00,  2.16it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1, Loop Feat 0: -0.6837775707244873
Epoch 1, Loop Adj 0: -0.723670244216919
Epoch 2: -0.723670244216919
Mem used: 142MB
best_loss: tensor(-0.8473, device='cuda:1')
best_loss: tensor(-0.8488, device='cuda:1')
final loss: -0.8191879391670227
Test:
Test: 0.9361152141802068
0.9361152141802068
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.28it/s]100%|██████████| 2/2 [00:00<00:00,  2.66it/s]100%|██████████| 2/2 [00:00<00:00,  2.60it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986256599426
Epoch 1, Loop Feat 0: -0.6996486186981201
Epoch 1, Loop Adj 0: -0.7368980646133423
Epoch 2: -0.7368980646133423
Mem used: 142MB
best_loss: tensor(-0.8694, device='cuda:1')
best_loss: tensor(-0.8706, device='cuda:1')
final loss: -0.8371263742446899
Test:
Test: 0.939069423929099
0.939069423929099
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.11it/s]100%|██████████| 2/2 [00:00<00:00,  2.18it/s]100%|██████████| 2/2 [00:00<00:00,  2.16it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1, Loop Feat 0: -0.6791414022445679
Epoch 1, Loop Adj 0: -0.7146544456481934
Epoch 2: -0.7146544456481934
Mem used: 142MB
best_loss: tensor(-0.8677, device='cuda:1')
best_loss: tensor(-0.8702, device='cuda:1')
final loss: -0.8367286920547485
Test:
Test: 0.9375923190546529
0.9375923190546529
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.63it/s]100%|██████████| 2/2 [00:00<00:00,  2.85it/s]100%|██████████| 2/2 [00:00<00:00,  2.82it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328826904297
Epoch 1, Loop Feat 0: -0.7090501189231873
Epoch 1, Loop Adj 0: -0.7452165484428406
Epoch 2: -0.7452165484428406
Mem used: 302MB
best_loss: tensor(-0.8815, device='cuda:1')
best_loss: tensor(-0.8847, device='cuda:1')
final loss: -0.8539705872535706
Test:
Test: 0.9379615952732644
0.9379615952732644
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.64it/s]100%|██████████| 2/2 [00:00<00:00,  2.67it/s]100%|██████████| 2/2 [00:00<00:00,  2.60it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096760272979736
Epoch 1, Loop Feat 0: -0.7057324647903442
Epoch 1, Loop Adj 0: -0.7605879902839661
Epoch 2: -0.7605879902839661
Mem used: 522MB
best_loss: tensor(-0.8854, device='cuda:1')
best_loss: tensor(-0.8877, device='cuda:1')
final loss: -0.8623751401901245
Test:
Test: 0.9276218611521418
0.9276218611521418
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.33it/s]100%|██████████| 2/2 [00:00<00:00,  3.08it/s]100%|██████████| 2/2 [00:00<00:00,  2.93it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905820965766907
Epoch 1, Loop Feat 0: -0.6943916082382202
Epoch 1, Loop Adj 0: -0.7340251207351685
Epoch 2: -0.7340251207351685
Mem used: 142MB
best_loss: tensor(-0.8573, device='cuda:1')
best_loss: tensor(-0.8585, device='cuda:1')
final loss: -0.8184128999710083
Test:
Test: 0.9361152141802068
0.9361152141802068
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.17it/s]100%|██████████| 2/2 [00:00<00:00,  3.19it/s]100%|██████████| 2/2 [00:00<00:00,  3.17it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1, Loop Feat 0: -0.6803435683250427
Epoch 1, Loop Adj 0: -0.7089908123016357
Epoch 2: -0.7089908123016357
Mem used: 284MB
best_loss: tensor(-0.8559, device='cuda:1')
best_loss: tensor(-0.8567, device='cuda:1')
final loss: -0.8313894867897034
Test:
Test: 0.9435007385524372
0.9435007385524372
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.34it/s]100%|██████████| 2/2 [00:00<00:00,  2.37it/s]100%|██████████| 2/2 [00:00<00:00,  2.36it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1, Loop Feat 0: -0.720208466053009
Epoch 1, Loop Adj 0: -0.7493575215339661
Epoch 2: -0.7493575215339661
Mem used: 142MB
best_loss: tensor(-0.8731, device='cuda:1')
best_loss: tensor(-0.8760, device='cuda:1')
final loss: -0.8581003546714783
Test:
Test: 0.939069423929099
0.939069423929099
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.37it/s]100%|██████████| 2/2 [00:00<00:00,  2.81it/s]100%|██████████| 2/2 [00:00<00:00,  2.68it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1, Loop Feat 0: -0.7203298211097717
Epoch 1, Loop Adj 0: -0.7565834522247314
Epoch 2: -0.7565834522247314
Mem used: 340MB
best_loss: tensor(-0.8778, device='cuda:1')
best_loss: tensor(-0.8810, device='cuda:1')
final loss: -0.862377405166626
Test:
Test: 0.9357459379615952
0.9357459379615952
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.65it/s]100%|██████████| 2/2 [00:01<00:00,  2.02it/s]100%|██████████| 2/2 [00:01<00:00,  1.94it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1, Loop Feat 0: -0.7181804180145264
Epoch 1, Loop Adj 0: -0.7654174566268921
Epoch 2: -0.7654174566268921
Mem used: 398MB
best_loss: tensor(-0.8905, device='cuda:1')
best_loss: tensor(-0.8927, device='cuda:1')
final loss: -0.8747170567512512
Test:
Test: 0.9324224519940916
0.9324224519940916
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.73it/s]100%|██████████| 2/2 [00:00<00:00,  2.66it/s]100%|██████████| 2/2 [00:00<00:00,  2.67it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.685497522354126
Epoch 1, Loop Feat 0: -0.6837428212165833
Epoch 1, Loop Adj 0: -0.7235828638076782
Epoch 2: -0.7235828638076782
Mem used: 142MB
best_loss: tensor(-0.8491, device='cuda:1')
final loss: -0.8183953762054443
Test:
Test: 0.9361152141802068
0.9361152141802068
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.22it/s]100%|██████████| 2/2 [00:00<00:00,  2.45it/s]100%|██████████| 2/2 [00:00<00:00,  2.39it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6960986256599426
Epoch 1, Loop Feat 0: -0.6996225714683533
Epoch 1, Loop Adj 0: -0.7368342876434326
Epoch 2: -0.7368342876434326
Mem used: 142MB
best_loss: tensor(-0.8711, device='cuda:1')
final loss: -0.8377467393875122
Test:
Test: 0.9401772525849336
0.9401772525849336
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.05it/s]100%|██████████| 2/2 [00:00<00:00,  2.11it/s]100%|██████████| 2/2 [00:00<00:00,  2.10it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6847533583641052
Epoch 1, Loop Feat 0: -0.6790533661842346
Epoch 1, Loop Adj 0: -0.7146381139755249
Epoch 2: -0.7146381139755249
Mem used: 142MB
best_loss: tensor(-0.8705, device='cuda:1')
final loss: -0.8369387984275818
Test:
Test: 0.9387001477104875
0.9387001477104875
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.41it/s]100%|██████████| 2/2 [00:00<00:00,  2.31it/s]100%|██████████| 2/2 [00:00<00:00,  2.32it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.7075328826904297
Epoch 1, Loop Feat 0: -0.7090010046958923
Epoch 1, Loop Adj 0: -0.7451137900352478
Epoch 2: -0.7451137900352478
Mem used: 468MB
best_loss: tensor(-0.8855, device='cuda:1')
final loss: -0.8551051616668701
Test:
Test: 0.9387001477104875
0.9387001477104875
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.21it/s]100%|██████████| 2/2 [00:00<00:00,  2.74it/s]100%|██████████| 2/2 [00:00<00:00,  2.64it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.7096760272979736
Epoch 1, Loop Feat 0: -0.7056690454483032
Epoch 1, Loop Adj 0: -0.7605388164520264
Epoch 2: -0.7605388164520264
Mem used: 390MB
best_loss: tensor(-0.8879, device='cuda:1')
best_loss: tensor(-0.8880, device='cuda:1')
final loss: -0.8636656403541565
Test:
Test: 0.9290989660265879
0.9290989660265879
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.63it/s]100%|██████████| 2/2 [00:00<00:00,  2.72it/s]100%|██████████| 2/2 [00:00<00:00,  2.70it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.6905820965766907
Epoch 1, Loop Feat 0: -0.6943438649177551
Epoch 1, Loop Adj 0: -0.7339823842048645
Epoch 2: -0.7339823842048645
Mem used: 400MB
best_loss: tensor(-0.8590, device='cuda:1')
final loss: -0.8190557956695557
Test:
Test: 0.9368537666174298
0.9368537666174298
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.18it/s]100%|██████████| 2/2 [00:00<00:00,  3.24it/s]100%|██████████| 2/2 [00:00<00:00,  3.21it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6920579075813293
Epoch 1, Loop Feat 0: -0.6802695393562317
Epoch 1, Loop Adj 0: -0.7089332938194275
Epoch 2: -0.7089332938194275
Mem used: 358MB
best_loss: tensor(-0.8569, device='cuda:1')
final loss: -0.8310469388961792
Test:
Test: 0.9457163958641064
0.9457163958641064
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.15it/s]100%|██████████| 2/2 [00:00<00:00,  2.63it/s]100%|██████████| 2/2 [00:00<00:00,  2.52it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.7145955562591553
Epoch 1, Loop Feat 0: -0.7201615571975708
Epoch 1, Loop Adj 0: -0.7493230700492859
Epoch 2: -0.7493230700492859
Mem used: 142MB
best_loss: tensor(-0.8763, device='cuda:1')
final loss: -0.8591788411140442
Test:
Test: 0.9409158050221565
0.9409158050221565
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.23it/s]100%|██████████| 2/2 [00:00<00:00,  2.50it/s]100%|██████████| 2/2 [00:00<00:00,  2.44it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.7210795283317566
Epoch 1, Loop Feat 0: -0.7203077077865601
Epoch 1, Loop Adj 0: -0.7565165162086487
Epoch 2: -0.7565165162086487
Mem used: 142MB
best_loss: tensor(-0.8812, device='cuda:1')
final loss: -0.8624111413955688
Test:
Test: 0.9364844903988183
0.9364844903988183
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.79it/s]100%|██████████| 2/2 [00:00<00:00,  2.92it/s]100%|██████████| 2/2 [00:00<00:00,  2.90it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.7245808243751526
Epoch 1, Loop Feat 0: -0.7181320786476135
Epoch 1, Loop Adj 0: -0.7653629779815674
Epoch 2: -0.7653629779815674
Mem used: 569MB
best_loss: tensor(-0.8927, device='cuda:1')
best_loss: tensor(-0.8928, device='cuda:1')
final loss: -0.8754005432128906
Test:
Test: 0.9309453471196455
0.9309453471196455
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.37it/s]100%|██████████| 1/1 [00:00<00:00,  2.36it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1: -0.5871251821517944
Mem used: 260MB
best_loss: tensor(-0.6002, device='cuda:1')
final loss: -0.593696117401123
Test:
Test: 0.8914327917282127
0.8914327917282127
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.59it/s]100%|██████████| 1/1 [00:00<00:00,  2.49it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1: -0.6147587895393372
Mem used: 142MB
best_loss: tensor(-0.6404, device='cuda:1')
final loss: -0.6249909996986389
Test:
Test: 0.9335302806499262
0.9335302806499262
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.10it/s]100%|██████████| 1/1 [00:00<00:00,  2.09it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1: -0.6013228893280029
Mem used: 142MB
best_loss: tensor(-0.6274, device='cuda:1')
final loss: -0.6121952533721924
Test:
Test: 0.9250369276218612
0.9250369276218612
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.51it/s]100%|██████████| 1/1 [00:00<00:00,  2.51it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1: -0.6348603367805481
Mem used: -1651MB
best_loss: tensor(-0.6671, device='cuda:1')
final loss: -0.6520786881446838
Test:
Test: 0.906573116691285
0.906573116691285
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.24it/s]100%|██████████| 1/1 [00:00<00:00,  2.24it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256739616394
Epoch 1: -0.6364256739616394
Mem used: 640MB
best_loss: tensor(-0.6500, device='cuda:1')
final loss: -0.6431149840354919
Test:
Test: 0.9335302806499262
0.9335302806499262
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.09it/s]100%|██████████| 1/1 [00:00<00:00,  2.06it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1: -0.5944854617118835
Mem used: 352MB
best_loss: tensor(-0.6149, device='cuda:1')
final loss: -0.596197247505188
Test:
Test: 0.8947562776957164
0.8947562776957164
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.55it/s]100%|██████████| 1/1 [00:00<00:00,  2.55it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1: -0.6121348142623901
Mem used: 306MB
best_loss: tensor(-0.6206, device='cuda:1')
final loss: -0.6112505793571472
Test:
Test: 0.9431314623338257
0.9431314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.92it/s]100%|██████████| 1/1 [00:00<00:00,  2.92it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1: -0.629896342754364
Mem used: 142MB
best_loss: tensor(-0.6349, device='cuda:1')
best_loss: tensor(-0.6350, device='cuda:1')
final loss: -0.6392619013786316
Test:
Test: 0.8932791728212703
0.8932791728212703
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.23it/s]100%|██████████| 1/1 [00:00<00:00,  3.23it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1: -0.6394254565238953
Mem used: 142MB
best_loss: tensor(-0.6436, device='cuda:1')
final loss: -0.6456443071365356
Test:
Test: 0.8932791728212703
0.8932791728212703
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.89it/s]100%|██████████| 1/1 [00:00<00:00,  2.89it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1: -0.6556931734085083
Mem used: 142MB
best_loss: tensor(-0.6655, device='cuda:1')
final loss: -0.673012912273407
Test:
Test: 0.9047267355982275
0.9047267355982275
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.83it/s]100%|██████████| 1/1 [00:00<00:00,  1.82it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1: -0.5871251821517944
Mem used: 526MB
best_loss: tensor(-0.6042, device='cuda:1')
final loss: -0.5982066988945007
Test:
Test: 0.8818316100443131
0.8818316100443131
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.63it/s]100%|██████████| 1/1 [00:00<00:00,  2.63it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1: -0.6147587895393372
Mem used: 142MB
best_loss: tensor(-0.6444, device='cuda:1')
final loss: -0.6244638562202454
Test:
Test: 0.9250369276218612
0.9250369276218612
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.96it/s]100%|██████████| 1/1 [00:00<00:00,  2.96it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1: -0.6013228893280029
Mem used: 142MB
best_loss: tensor(-0.6303, device='cuda:1')
final loss: -0.6155741214752197
Test:
Test: 0.9169128508124077
0.9169128508124077
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.30it/s]100%|██████████| 1/1 [00:00<00:00,  2.29it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1: -0.6348603367805481
Mem used: 502MB
best_loss: tensor(-0.6679, device='cuda:1')
final loss: -0.6545754075050354
Test:
Test: 0.9025110782865583
0.9025110782865583
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.73it/s]100%|██████████| 1/1 [00:00<00:00,  2.73it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256739616394
Epoch 1: -0.6364256739616394
Mem used: 326MB
best_loss: tensor(-0.6524, device='cuda:1')
final loss: -0.6469227075576782
Test:
Test: 0.9235598227474151
0.9235598227474151
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.79it/s]100%|██████████| 1/1 [00:00<00:00,  1.79it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1: -0.5944854617118835
Mem used: 336MB
best_loss: tensor(-0.6182, device='cuda:1')
final loss: -0.599814772605896
Test:
Test: 0.8855243722304283
0.8855243722304283
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.60it/s]100%|██████████| 1/1 [00:00<00:00,  2.54it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121347546577454
Epoch 1: -0.6121347546577454
Mem used: 162MB
best_loss: tensor(-0.6249, device='cuda:1')
final loss: -0.6135552525520325
Test:
Test: 0.9276218611521418
0.9276218611521418
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.79it/s]100%|██████████| 1/1 [00:00<00:00,  1.79it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1: -0.629896342754364
Mem used: 142MB
best_loss: tensor(-0.6373, device='cuda:1')
final loss: -0.6407385468482971
Test:
Test: 0.8851550960118169
0.8851550960118169
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.83it/s]100%|██████████| 1/1 [00:00<00:00,  2.83it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1: -0.6394254565238953
Mem used: 142MB
best_loss: tensor(-0.6459, device='cuda:1')
final loss: -0.6492277383804321
Test:
Test: 0.8810930576070901
0.8810930576070901
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.61it/s]100%|██████████| 1/1 [00:00<00:00,  2.60it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1: -0.6556931734085083
Mem used: 142MB
best_loss: tensor(-0.6681, device='cuda:1')
final loss: -0.675157904624939
Test:
Test: 0.8943870014771049
0.8943870014771049
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.35it/s]100%|██████████| 1/1 [00:00<00:00,  1.24it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1: -0.5871251821517944
Mem used: 1352MB
best_loss: tensor(-0.5989, device='cuda:1')
final loss: -0.592160701751709
Test:
Test: 0.895864106351551
0.895864106351551
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.35it/s]100%|██████████| 1/1 [00:00<00:00,  2.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1: -0.6147587895393372
Mem used: 258MB
best_loss: tensor(-0.6397, device='cuda:1')
best_loss: tensor(-0.6398, device='cuda:1')
final loss: -0.6238564252853394
Test:
Test: 0.9383308714918759
0.9383308714918759
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.94it/s]100%|██████████| 1/1 [00:00<00:00,  2.89it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1: -0.6013228893280029
Mem used: 142MB
best_loss: tensor(-0.6271, device='cuda:1')
final loss: -0.6112287044525146
Test:
Test: 0.9276218611521418
0.9276218611521418
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.44it/s]100%|██████████| 1/1 [00:00<00:00,  2.29it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1: -0.6348603367805481
Mem used: 142MB
best_loss: tensor(-0.6662, device='cuda:1')
final loss: -0.6522647142410278
Test:
Test: 0.906573116691285
0.906573116691285
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.68it/s]100%|██████████| 1/1 [00:00<00:00,  2.68it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256143569946
Epoch 1: -0.6364256143569946
Mem used: 142MB
best_loss: tensor(-0.6494, device='cuda:1')
final loss: -0.6437982320785522
Test:
Test: 0.9375923190546529
0.9375923190546529
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.35it/s]100%|██████████| 1/1 [00:00<00:00,  3.34it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1: -0.5944854617118835
Mem used: 142MB
best_loss: tensor(-0.6143, device='cuda:1')
final loss: -0.5954870581626892
Test:
Test: 0.8991875923190547
0.8991875923190547
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.99it/s]100%|██████████| 1/1 [00:00<00:00,  2.98it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1: -0.6121348142623901
Mem used: 640MB
best_loss: tensor(-0.6199, device='cuda:1')
final loss: -0.61008220911026
Test:
Test: 0.9453471196454948
0.9453471196454948
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.15it/s]100%|██████████| 1/1 [00:00<00:00,  2.09it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1: -0.629896342754364
Mem used: 294MB
best_loss: tensor(-0.6346, device='cuda:1')
best_loss: tensor(-0.6347, device='cuda:1')
final loss: -0.6365795135498047
Test:
Test: 0.8947562776957164
0.8947562776957164
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.76it/s]100%|██████████| 1/1 [00:00<00:00,  2.71it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1: -0.6394254565238953
Mem used: 142MB
best_loss: tensor(-0.6428, device='cuda:1')
final loss: -0.643186628818512
Test:
Test: 0.896602658788774
0.896602658788774
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.40it/s]100%|██████████| 1/1 [00:00<00:00,  2.34it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1: -0.6556931734085083
Mem used: 142MB
best_loss: tensor(-0.6649, device='cuda:1')
best_loss: tensor(-0.6649, device='cuda:1')
final loss: -0.671977698802948
Test:
Test: 0.9069423929098966
0.9069423929098966
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.21it/s]100%|██████████| 2/2 [00:00<00:00,  3.22it/s]100%|██████████| 2/2 [00:00<00:00,  3.22it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1, Loop Feat 0: -0.5873145461082458
Epoch 1, Loop Adj 0: -0.6007211804389954
Epoch 2: -0.6007211804389954
Mem used: -1782MB
best_loss: tensor(-0.6217, device='cuda:1')
final loss: -0.6155652403831482
Test:
Test: 0.9106351550960118
0.9106351550960118
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.35it/s]100%|██████████| 2/2 [00:00<00:00,  2.38it/s]100%|██████████| 2/2 [00:00<00:00,  2.34it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1, Loop Feat 0: -0.6212886571884155
Epoch 1, Loop Adj 0: -0.634276807308197
Epoch 2: -0.634276807308197
Mem used: 348MB
best_loss: tensor(-0.6598, device='cuda:1')
final loss: -0.645301878452301
Test:
Test: 0.9409158050221565
0.9409158050221565
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.82it/s]100%|██████████| 2/2 [00:00<00:00,  2.25it/s]100%|██████████| 2/2 [00:00<00:00,  2.13it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1, Loop Feat 0: -0.5970523953437805
Epoch 1, Loop Adj 0: -0.605155885219574
Epoch 2: -0.605155885219574
Mem used: 334MB
best_loss: tensor(-0.6450, device='cuda:1')
final loss: -0.6296078562736511
Test:
Test: 0.931314623338257
0.931314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.09it/s]100%|██████████| 2/2 [00:00<00:00,  2.96it/s]100%|██████████| 2/2 [00:00<00:00,  2.98it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1, Loop Feat 0: -0.6381441354751587
Epoch 1, Loop Adj 0: -0.6544086933135986
Epoch 2: -0.6544086933135986
Mem used: 142MB
best_loss: tensor(-0.6847, device='cuda:1')
best_loss: tensor(-0.6848, device='cuda:1')
final loss: -0.6712694764137268
Test:
Test: 0.9217134416543574
0.9217134416543574
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.54it/s]100%|██████████| 2/2 [00:00<00:00,  2.54it/s]100%|██████████| 2/2 [00:00<00:00,  2.52it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256739616394
Epoch 1, Loop Feat 0: -0.6315187811851501
Epoch 1, Loop Adj 0: -0.6473118662834167
Epoch 2: -0.6473118662834167
Mem used: 366MB
best_loss: tensor(-0.6661, device='cuda:1')
best_loss: tensor(-0.6663, device='cuda:1')
final loss: -0.6608443856239319
Test:
Test: 0.9394387001477105
0.9394387001477105
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.38it/s]100%|██████████| 2/2 [00:00<00:00,  2.48it/s]100%|██████████| 2/2 [00:00<00:00,  2.46it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1, Loop Feat 0: -0.5979064702987671
Epoch 1, Loop Adj 0: -0.6157461404800415
Epoch 2: -0.6157461404800415
Mem used: 142MB
best_loss: tensor(-0.6358, device='cuda:1')
final loss: -0.617474377155304
Test:
Test: 0.9098966026587888
0.9098966026587888
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.32it/s]100%|██████████| 2/2 [00:00<00:00,  2.50it/s]100%|██████████| 2/2 [00:00<00:00,  2.47it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1, Loop Feat 0: -0.6012586951255798
Epoch 1, Loop Adj 0: -0.6098747253417969
Epoch 2: -0.6098747253417969
Mem used: 142MB
best_loss: tensor(-0.6387, device='cuda:1')
final loss: -0.629663348197937
Test:
Test: 0.9486706056129985
0.9486706056129985
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.87it/s]100%|██████████| 2/2 [00:00<00:00,  2.82it/s]100%|██████████| 2/2 [00:00<00:00,  2.83it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1, Loop Feat 0: -0.6356854438781738
Epoch 1, Loop Adj 0: -0.6364833116531372
Epoch 2: -0.6364833116531372
Mem used: 312MB
best_loss: tensor(-0.6561, device='cuda:1')
final loss: -0.6608914136886597
Test:
Test: 0.9113737075332349
0.9113737075332349
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.49it/s]100%|██████████| 2/2 [00:00<00:00,  2.53it/s]100%|██████████| 2/2 [00:00<00:00,  2.52it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1, Loop Feat 0: -0.6375865340232849
Epoch 1, Loop Adj 0: -0.6530728936195374
Epoch 2: -0.6530728936195374
Mem used: 566MB
best_loss: tensor(-0.6644, device='cuda:1')
final loss: -0.665780246257782
Test:
Test: 0.9062038404726735
0.9062038404726735
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.65it/s]100%|██████████| 2/2 [00:00<00:00,  2.34it/s]100%|██████████| 2/2 [00:00<00:00,  2.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1, Loop Feat 0: -0.6501976251602173
Epoch 1, Loop Adj 0: -0.6672923564910889
Epoch 2: -0.6672923564910889
Mem used: 142MB
best_loss: tensor(-0.6819, device='cuda:1')
best_loss: tensor(-0.6821, device='cuda:1')
final loss: -0.6906724572181702
Test:
Test: 0.9176514032496307
0.9176514032496307
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.04it/s]100%|██████████| 2/2 [00:00<00:00,  2.27it/s]100%|██████████| 2/2 [00:00<00:00,  2.23it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1, Loop Feat 0: -0.5886309742927551
Epoch 1, Loop Adj 0: -0.6019777655601501
Epoch 2: -0.6019777655601501
Mem used: 142MB
best_loss: tensor(-0.6242, device='cuda:1')
final loss: -0.618887722492218
Test:
Test: 0.9014032496307238
0.9014032496307238
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.59it/s]100%|██████████| 2/2 [00:00<00:00,  2.75it/s]100%|██████████| 2/2 [00:00<00:00,  2.72it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1, Loop Feat 0: -0.6222655177116394
Epoch 1, Loop Adj 0: -0.6352775692939758
Epoch 2: -0.6352775692939758
Mem used: 396MB
best_loss: tensor(-0.6630, device='cuda:1')
final loss: -0.6466466784477234
Test:
Test: 0.9324224519940916
0.9324224519940916
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.51it/s]100%|██████████| 2/2 [00:00<00:00,  3.05it/s]100%|██████████| 2/2 [00:00<00:00,  2.90it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1, Loop Feat 0: -0.5984057784080505
Epoch 1, Loop Adj 0: -0.6061858534812927
Epoch 2: -0.6061858534812927
Mem used: 394MB
best_loss: tensor(-0.6487, device='cuda:1')
final loss: -0.6340395212173462
Test:
Test: 0.9231905465288035
0.9231905465288035
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.57it/s]100%|██████████| 2/2 [00:00<00:00,  2.34it/s]100%|██████████| 2/2 [00:00<00:00,  2.45it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1, Loop Feat 0: -0.639387845993042
Epoch 1, Loop Adj 0: -0.6554771661758423
Epoch 2: -0.6554771661758423
Mem used: 360MB
best_loss: tensor(-0.6851, device='cuda:1')
final loss: -0.6714096665382385
Test:
Test: 0.914327917282127
0.914327917282127
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.66it/s]100%|██████████| 2/2 [00:00<00:00,  3.00it/s]100%|██████████| 2/2 [00:00<00:00,  2.94it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256143569946
Epoch 1, Loop Feat 0: -0.6324620246887207
Epoch 1, Loop Adj 0: -0.6481921076774597
Epoch 2: -0.6481921076774597
Mem used: 294MB
best_loss: tensor(-0.6694, device='cuda:1')
final loss: -0.6660038828849792
Test:
Test: 0.9290989660265879
0.9290989660265879
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.89it/s]100%|██████████| 2/2 [00:00<00:00,  2.50it/s]100%|██████████| 2/2 [00:00<00:00,  2.38it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1, Loop Feat 0: -0.5993279218673706
Epoch 1, Loop Adj 0: -0.6169615983963013
Epoch 2: -0.6169615983963013
Mem used: 142MB
best_loss: tensor(-0.6396, device='cuda:1')
final loss: -0.620612621307373
Test:
Test: 0.8984490398818316
0.8984490398818316
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.20it/s]100%|██████████| 2/2 [00:00<00:00,  2.46it/s]100%|██████████| 2/2 [00:00<00:00,  2.41it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1, Loop Feat 0: -0.6025195121765137
Epoch 1, Loop Adj 0: -0.6112268567085266
Epoch 2: -0.6112268567085266
Mem used: 142MB
best_loss: tensor(-0.6413, device='cuda:1')
final loss: -0.6335225105285645
Test:
Test: 0.939069423929099
0.939069423929099
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.98it/s]100%|██████████| 2/2 [00:00<00:00,  2.43it/s]100%|██████████| 2/2 [00:00<00:00,  2.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1, Loop Feat 0: -0.636648952960968
Epoch 1, Loop Adj 0: -0.6373796463012695
Epoch 2: -0.6373796463012695
Mem used: 142MB
best_loss: tensor(-0.6593, device='cuda:1')
final loss: -0.6621407270431519
Test:
Test: 0.9010339734121122
0.9010339734121122
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.34it/s]100%|██████████| 2/2 [00:01<00:00,  1.80it/s]100%|██████████| 2/2 [00:01<00:00,  1.87it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1, Loop Feat 0: -0.6384143829345703
Epoch 1, Loop Adj 0: -0.6540900468826294
Epoch 2: -0.6540900468826294
Mem used: 142MB
best_loss: tensor(-0.6662, device='cuda:1')
final loss: -0.6691667437553406
Test:
Test: 0.9002954209748892
0.9002954209748892
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.97it/s]100%|██████████| 2/2 [00:00<00:00,  2.76it/s]100%|██████████| 2/2 [00:00<00:00,  2.79it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1, Loop Feat 0: -0.6509357690811157
Epoch 1, Loop Adj 0: -0.6682651042938232
Epoch 2: -0.6682651042938232
Mem used: 414MB
best_loss: tensor(-0.6845, device='cuda:1')
final loss: -0.6910495162010193
Test:
Test: 0.9076809453471196
0.9076809453471196
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.80it/s]100%|██████████| 2/2 [00:00<00:00,  2.76it/s]100%|██████████| 2/2 [00:00<00:00,  2.76it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1, Loop Feat 0: -0.5870129466056824
Epoch 1, Loop Adj 0: -0.6004450917243958
Epoch 2: -0.6004450917243958
Mem used: 526MB
best_loss: tensor(-0.6195, device='cuda:1')
best_loss: tensor(-0.6195, device='cuda:1')
final loss: -0.6128425002098083
Test:
Test: 0.9146971935007385
0.9146971935007385
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.84it/s]100%|██████████| 2/2 [00:00<00:00,  2.98it/s]100%|██████████| 2/2 [00:00<00:00,  2.91it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1, Loop Feat 0: -0.6210658550262451
Epoch 1, Loop Adj 0: -0.6340474486351013
Epoch 2: -0.6340474486351013
Mem used: 365MB
best_loss: tensor(-0.6587, device='cuda:1')
final loss: -0.6433510780334473
Test:
Test: 0.9453471196454948
0.9453471196454948
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.72it/s]100%|██████████| 2/2 [00:00<00:00,  2.95it/s]100%|██████████| 2/2 [00:00<00:00,  2.91it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1, Loop Feat 0: -0.5967444777488708
Epoch 1, Loop Adj 0: -0.6049189567565918
Epoch 2: -0.6049189567565918
Mem used: 142MB
best_loss: tensor(-0.6441, device='cuda:1')
final loss: -0.6291787624359131
Test:
Test: 0.9364844903988183
0.9364844903988183
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.80it/s]100%|██████████| 2/2 [00:00<00:00,  3.06it/s]100%|██████████| 2/2 [00:00<00:00,  3.00it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1, Loop Feat 0: -0.6378586292266846
Epoch 1, Loop Adj 0: -0.6541612148284912
Epoch 2: -0.6541612148284912
Mem used: 142MB
best_loss: tensor(-0.6839, device='cuda:1')
final loss: -0.6704465746879578
Test:
Test: 0.9213441654357459
0.9213441654357459
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.19it/s]100%|██████████| 2/2 [00:00<00:00,  2.73it/s]100%|██████████| 2/2 [00:00<00:00,  2.63it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256143569946
Epoch 1, Loop Feat 0: -0.6312991380691528
Epoch 1, Loop Adj 0: -0.6470980644226074
Epoch 2: -0.6470980644226074
Mem used: 142MB
best_loss: tensor(-0.6656, device='cuda:1')
final loss: -0.6604124903678894
Test:
Test: 0.9420236336779911
0.9420236336779911
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.25it/s]100%|██████████| 2/2 [00:00<00:00,  2.56it/s]100%|██████████| 2/2 [00:00<00:00,  2.51it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1, Loop Feat 0: -0.5975944995880127
Epoch 1, Loop Adj 0: -0.6154734492301941
Epoch 2: -0.6154734492301941
Mem used: 314MB
best_loss: tensor(-0.6346, device='cuda:1')
best_loss: tensor(-0.6347, device='cuda:1')
final loss: -0.6154209971427917
Test:
Test: 0.9113737075332349
0.9113737075332349
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.59it/s]100%|██████████| 2/2 [00:00<00:00,  2.77it/s]100%|██████████| 2/2 [00:00<00:00,  2.74it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1, Loop Feat 0: -0.6009660959243774
Epoch 1, Loop Adj 0: -0.6095739603042603
Epoch 2: -0.6095739603042603
Mem used: 300MB
best_loss: tensor(-0.6380, device='cuda:1')
final loss: -0.6295877695083618
Test:
Test: 0.9527326440177253
0.9527326440177253
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.29it/s]100%|██████████| 2/2 [00:00<00:00,  3.28it/s]100%|██████████| 2/2 [00:00<00:00,  3.26it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1, Loop Feat 0: -0.6354557871818542
Epoch 1, Loop Adj 0: -0.6362571716308594
Epoch 2: -0.6362571716308594
Mem used: 142MB
best_loss: tensor(-0.6554, device='cuda:1')
best_loss: tensor(-0.6555, device='cuda:1')
final loss: -0.6594029068946838
Test:
Test: 0.9146971935007385
0.9146971935007385
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.17it/s]100%|██████████| 2/2 [00:00<00:00,  2.48it/s]100%|██████████| 2/2 [00:00<00:00,  2.43it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1, Loop Feat 0: -0.6373886466026306
Epoch 1, Loop Adj 0: -0.6528475284576416
Epoch 2: -0.6528475284576416
Mem used: 284MB
best_loss: tensor(-0.6637, device='cuda:1')
final loss: -0.6648358702659607
Test:
Test: 0.9135893648449039
0.9135893648449039
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.05it/s]100%|██████████| 2/2 [00:00<00:00,  2.23it/s]100%|██████████| 2/2 [00:00<00:00,  2.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1, Loop Feat 0: -0.6500106453895569
Epoch 1, Loop Adj 0: -0.6670585870742798
Epoch 2: -0.6670585870742798
Mem used: 142MB
best_loss: tensor(-0.6819, device='cuda:1')
best_loss: tensor(-0.6821, device='cuda:1')
final loss: -0.6908064484596252
Test:
Test: 0.9198670605612999
0.9198670605612999
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.80it/s]100%|██████████| 1/1 [00:00<00:00,  2.80it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1: -0.5871251821517944
Mem used: 142MB
best_loss: tensor(-0.6002, device='cuda:1')
final loss: -0.593696117401123
Test:
Test: 0.8914327917282127
0.8914327917282127
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.67it/s]100%|██████████| 1/1 [00:00<00:00,  2.67it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1: -0.6147587895393372
Mem used: 334MB
best_loss: tensor(-0.6404, device='cuda:1')
final loss: -0.6249909996986389
Test:
Test: 0.9335302806499262
0.9335302806499262
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.50it/s]100%|██████████| 1/1 [00:00<00:00,  2.49it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1: -0.6013228893280029
Mem used: 264MB
best_loss: tensor(-0.6274, device='cuda:1')
final loss: -0.6121952533721924
Test:
Test: 0.9250369276218612
0.9250369276218612
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.23it/s]100%|██████████| 1/1 [00:00<00:00,  2.23it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1: -0.6348603367805481
Mem used: 506MB
best_loss: tensor(-0.6671, device='cuda:1')
final loss: -0.6520787477493286
Test:
Test: 0.906573116691285
0.906573116691285
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.59it/s]100%|██████████| 1/1 [00:00<00:00,  2.59it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256143569946
Epoch 1: -0.6364256143569946
Mem used: 142MB
best_loss: tensor(-0.6500, device='cuda:1')
final loss: -0.6431149244308472
Test:
Test: 0.9335302806499262
0.9335302806499262
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.19it/s]100%|██████████| 1/1 [00:00<00:00,  2.19it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1: -0.5944854617118835
Mem used: 142MB
best_loss: tensor(-0.6149, device='cuda:1')
final loss: -0.596197247505188
Test:
Test: 0.8947562776957164
0.8947562776957164
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.54it/s]100%|██████████| 1/1 [00:00<00:00,  2.54it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1: -0.6121348142623901
Mem used: 716MB
best_loss: tensor(-0.6206, device='cuda:1')
final loss: -0.6112505793571472
Test:
Test: 0.9431314623338257
0.9431314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.51it/s]100%|██████████| 1/1 [00:00<00:00,  2.51it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1: -0.629896342754364
Mem used: 350MB
best_loss: tensor(-0.6349, device='cuda:1')
best_loss: tensor(-0.6352, device='cuda:1')
final loss: -0.6376603245735168
Test:
Test: 0.8921713441654358
0.8921713441654358
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.02it/s]100%|██████████| 1/1 [00:00<00:00,  3.02it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1: -0.6394254565238953
Mem used: 142MB
best_loss: tensor(-0.6436, device='cuda:1')
final loss: -0.6456443071365356
Test:
Test: 0.8932791728212703
0.8932791728212703
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.04it/s]100%|██████████| 1/1 [00:00<00:00,  2.04it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1: -0.6556931734085083
Mem used: 142MB
best_loss: tensor(-0.6655, device='cuda:1')
final loss: -0.673012912273407
Test:
Test: 0.9047267355982275
0.9047267355982275
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.37it/s]100%|██████████| 1/1 [00:00<00:00,  2.37it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1: -0.5871251821517944
Mem used: 142MB
best_loss: tensor(-0.6042, device='cuda:1')
final loss: -0.5982066988945007
Test:
Test: 0.8818316100443131
0.8818316100443131
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.17it/s]100%|██████████| 1/1 [00:00<00:00,  2.15it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1: -0.6147587895393372
Mem used: 142MB
best_loss: tensor(-0.6444, device='cuda:1')
final loss: -0.6244638562202454
Test:
Test: 0.9250369276218612
0.9250369276218612
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.14it/s]100%|██████████| 1/1 [00:00<00:00,  2.14it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1: -0.6013228893280029
Mem used: 601MB
best_loss: tensor(-0.6303, device='cuda:1')
final loss: -0.6155741214752197
Test:
Test: 0.9169128508124077
0.9169128508124077
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.53it/s]100%|██████████| 1/1 [00:00<00:00,  2.52it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1: -0.6348603367805481
Mem used: 252MB
best_loss: tensor(-0.6679, device='cuda:1')
final loss: -0.6555163860321045
Test:
Test: 0.9025110782865583
0.9025110782865583
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.47it/s]100%|██████████| 1/1 [00:00<00:00,  2.47it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256739616394
Epoch 1: -0.6364256739616394
Mem used: 142MB
best_loss: tensor(-0.6524, device='cuda:1')
final loss: -0.6469227075576782
Test:
Test: 0.9235598227474151
0.9235598227474151
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.28it/s]100%|██████████| 1/1 [00:00<00:00,  3.27it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1: -0.5944854617118835
Mem used: 142MB
best_loss: tensor(-0.6182, device='cuda:1')
final loss: -0.599814772605896
Test:
Test: 0.8855243722304283
0.8855243722304283
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.55it/s]100%|██████████| 1/1 [00:00<00:00,  3.54it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1: -0.6121348142623901
Mem used: 142MB
best_loss: tensor(-0.6249, device='cuda:1')
final loss: -0.6135552525520325
Test:
Test: 0.9276218611521418
0.9276218611521418
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.99it/s]100%|██████████| 1/1 [00:00<00:00,  1.99it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1: -0.629896342754364
Mem used: 142MB
best_loss: tensor(-0.6373, device='cuda:1')
final loss: -0.6407385468482971
Test:
Test: 0.8851550960118169
0.8851550960118169
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.51it/s]100%|██████████| 1/1 [00:00<00:00,  2.46it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1: -0.6394254565238953
Mem used: 294MB
best_loss: tensor(-0.6459, device='cuda:1')
final loss: -0.6492277383804321
Test:
Test: 0.8810930576070901
0.8810930576070901
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.07it/s]100%|██████████| 1/1 [00:00<00:00,  2.07it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1: -0.6556931734085083
Mem used: 478MB
best_loss: tensor(-0.6681, device='cuda:1')
final loss: -0.675157904624939
Test:
Test: 0.8943870014771049
0.8943870014771049
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.16it/s]100%|██████████| 1/1 [00:00<00:00,  3.04it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1: -0.5871251821517944
Mem used: 510MB
best_loss: tensor(-0.5989, device='cuda:1')
final loss: -0.5926108956336975
Test:
Test: 0.895864106351551
0.895864106351551
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.25it/s]100%|██████████| 1/1 [00:00<00:00,  2.25it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1: -0.6147587895393372
Mem used: 142MB
best_loss: tensor(-0.6397, device='cuda:1')
best_loss: tensor(-0.6398, device='cuda:1')
final loss: -0.6237428784370422
Test:
Test: 0.9383308714918759
0.9383308714918759
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.19it/s]100%|██████████| 1/1 [00:00<00:00,  2.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1: -0.6013228893280029
Mem used: 142MB
best_loss: tensor(-0.6271, device='cuda:1')
final loss: -0.6112287044525146
Test:
Test: 0.9276218611521418
0.9276218611521418
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.33it/s]100%|██████████| 1/1 [00:00<00:00,  2.32it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1: -0.6348603367805481
Mem used: 142MB
best_loss: tensor(-0.6662, device='cuda:1')
final loss: -0.6522647142410278
Test:
Test: 0.906573116691285
0.906573116691285
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.37it/s]100%|██████████| 1/1 [00:00<00:00,  2.37it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256143569946
Epoch 1: -0.6364256143569946
Mem used: 142MB
best_loss: tensor(-0.6494, device='cuda:1')
final loss: -0.6437982320785522
Test:
Test: 0.9375923190546529
0.9375923190546529
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.65it/s]100%|██████████| 1/1 [00:00<00:00,  2.64it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1: -0.5944854617118835
Mem used: 264MB
best_loss: tensor(-0.6143, device='cuda:1')
final loss: -0.5954870581626892
Test:
Test: 0.8991875923190547
0.8991875923190547
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.48it/s]100%|██████████| 1/1 [00:00<00:00,  2.48it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1: -0.6121348142623901
Mem used: 248MB
best_loss: tensor(-0.6199, device='cuda:1')
final loss: -0.61008220911026
Test:
Test: 0.9453471196454948
0.9453471196454948
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.30it/s]100%|██████████| 1/1 [00:00<00:00,  2.30it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1: -0.629896342754364
Mem used: 142MB
best_loss: tensor(-0.6346, device='cuda:1')
best_loss: tensor(-0.6347, device='cuda:1')
final loss: -0.6365795135498047
Test:
Test: 0.8947562776957164
0.8947562776957164
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.20it/s]100%|██████████| 1/1 [00:00<00:00,  2.08it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1: -0.6394254565238953
Mem used: 142MB
best_loss: tensor(-0.6428, device='cuda:1')
best_loss: tensor(-0.6428, device='cuda:1')
final loss: -0.6440651416778564
Test:
Test: 0.896602658788774
0.896602658788774
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.35it/s]100%|██████████| 1/1 [00:00<00:00,  2.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1: -0.6556931734085083
Mem used: 142MB
best_loss: tensor(-0.6649, device='cuda:1')
best_loss: tensor(-0.6649, device='cuda:1')
final loss: -0.671977698802948
Test:
Test: 0.9069423929098966
0.9069423929098966
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.50it/s]100%|██████████| 2/2 [00:00<00:00,  2.33it/s]100%|██████████| 2/2 [00:00<00:00,  2.36it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1, Loop Feat 0: -0.5873034596443176
Epoch 1, Loop Adj 0: -0.6007176637649536
Epoch 2: -0.6007176637649536
Mem used: 574MB
best_loss: tensor(-0.6217, device='cuda:1')
final loss: -0.61585932970047
Test:
Test: 0.9106351550960118
0.9106351550960118
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.00it/s]100%|██████████| 2/2 [00:00<00:00,  2.67it/s]100%|██████████| 2/2 [00:00<00:00,  2.71it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1, Loop Feat 0: -0.6212882399559021
Epoch 1, Loop Adj 0: -0.6342741250991821
Epoch 2: -0.6342741250991821
Mem used: 342MB
best_loss: tensor(-0.6598, device='cuda:1')
final loss: -0.6453024744987488
Test:
Test: 0.9409158050221565
0.9409158050221565
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.12it/s]100%|██████████| 2/2 [00:00<00:00,  2.51it/s]100%|██████████| 2/2 [00:00<00:00,  2.44it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1, Loop Feat 0: -0.5970495939254761
Epoch 1, Loop Adj 0: -0.605150580406189
Epoch 2: -0.605150580406189
Mem used: 296MB
best_loss: tensor(-0.6450, device='cuda:1')
final loss: -0.6296077370643616
Test:
Test: 0.931314623338257
0.931314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.54it/s]100%|██████████| 2/2 [00:00<00:00,  2.36it/s]100%|██████████| 2/2 [00:00<00:00,  2.39it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1, Loop Feat 0: -0.6381405591964722
Epoch 1, Loop Adj 0: -0.6544030904769897
Epoch 2: -0.6544030904769897
Mem used: 142MB
best_loss: tensor(-0.6847, device='cuda:1')
best_loss: tensor(-0.6847, device='cuda:1')
final loss: -0.6716095209121704
Test:
Test: 0.9217134416543574
0.9217134416543574
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.45it/s]100%|██████████| 2/2 [00:00<00:00,  2.89it/s]100%|██████████| 2/2 [00:00<00:00,  2.81it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256739616394
Epoch 1, Loop Feat 0: -0.6315160393714905
Epoch 1, Loop Adj 0: -0.6473028063774109
Epoch 2: -0.6473028063774109
Mem used: 142MB
best_loss: tensor(-0.6661, device='cuda:1')
best_loss: tensor(-0.6663, device='cuda:1')
final loss: -0.6608437299728394
Test:
Test: 0.9394387001477105
0.9394387001477105
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.07it/s]100%|██████████| 2/2 [00:00<00:00,  3.03it/s]100%|██████████| 2/2 [00:00<00:00,  3.04it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1, Loop Feat 0: -0.5979034900665283
Epoch 1, Loop Adj 0: -0.6157422065734863
Epoch 2: -0.6157422065734863
Mem used: 142MB
best_loss: tensor(-0.6358, device='cuda:1')
final loss: -0.6174743175506592
Test:
Test: 0.9098966026587888
0.9098966026587888
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.51it/s]100%|██████████| 2/2 [00:00<00:00,  2.95it/s]100%|██████████| 2/2 [00:00<00:00,  2.87it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1, Loop Feat 0: -0.6012560725212097
Epoch 1, Loop Adj 0: -0.6098723411560059
Epoch 2: -0.6098723411560059
Mem used: 142MB
best_loss: tensor(-0.6387, device='cuda:1')
final loss: -0.6296629905700684
Test:
Test: 0.9486706056129985
0.9486706056129985
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.20it/s]100%|██████████| 2/2 [00:00<00:00,  2.61it/s]100%|██████████| 2/2 [00:00<00:00,  2.54it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1, Loop Feat 0: -0.6356766819953918
Epoch 1, Loop Adj 0: -0.6364749073982239
Epoch 2: -0.6364749073982239
Mem used: 142MB
best_loss: tensor(-0.6561, device='cuda:1')
final loss: -0.6608906984329224
Test:
Test: 0.9113737075332349
0.9113737075332349
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.33it/s]100%|██████████| 2/2 [00:00<00:00,  2.68it/s]100%|██████████| 2/2 [00:00<00:00,  2.76it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1, Loop Feat 0: -0.6375812292098999
Epoch 1, Loop Adj 0: -0.6530691385269165
Epoch 2: -0.6530691385269165
Mem used: 278MB
best_loss: tensor(-0.6645, device='cuda:1')
final loss: -0.6658103466033936
Test:
Test: 0.906573116691285
0.906573116691285
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.56it/s]100%|██████████| 2/2 [00:01<00:00,  1.89it/s]100%|██████████| 2/2 [00:01<00:00,  1.83it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1, Loop Feat 0: -0.6501952409744263
Epoch 1, Loop Adj 0: -0.6672829985618591
Epoch 2: -0.6672829985618591
Mem used: 346MB
best_loss: tensor(-0.6819, device='cuda:1')
best_loss: tensor(-0.6821, device='cuda:1')
final loss: -0.6900505423545837
Test:
Test: 0.9187592319054653
0.9187592319054653
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.23it/s]100%|██████████| 2/2 [00:00<00:00,  2.22it/s]100%|██████████| 2/2 [00:00<00:00,  2.22it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1, Loop Feat 0: -0.5886131525039673
Epoch 1, Loop Adj 0: -0.6019763946533203
Epoch 2: -0.6019763946533203
Mem used: 142MB
best_loss: tensor(-0.6243, device='cuda:1')
final loss: -0.6182676553726196
Test:
Test: 0.9010339734121122
0.9010339734121122
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.92it/s]100%|██████████| 2/2 [00:00<00:00,  3.31it/s]100%|██████████| 2/2 [00:00<00:00,  3.25it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1, Loop Feat 0: -0.6222659945487976
Epoch 1, Loop Adj 0: -0.6352835893630981
Epoch 2: -0.6352835893630981
Mem used: 142MB
best_loss: tensor(-0.6628, device='cuda:1')
final loss: -0.647327721118927
Test:
Test: 0.9324224519940916
0.9324224519940916
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.83it/s]100%|██████████| 2/2 [00:00<00:00,  2.50it/s]100%|██████████| 2/2 [00:00<00:00,  2.54it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1, Loop Feat 0: -0.5984047055244446
Epoch 1, Loop Adj 0: -0.606173574924469
Epoch 2: -0.606173574924469
Mem used: 142MB
best_loss: tensor(-0.6488, device='cuda:1')
final loss: -0.6329718828201294
Test:
Test: 0.9231905465288035
0.9231905465288035
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.62it/s]100%|██████████| 2/2 [00:00<00:00,  3.20it/s]100%|██████████| 2/2 [00:00<00:00,  3.09it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1, Loop Feat 0: -0.6393356919288635
Epoch 1, Loop Adj 0: -0.6554279327392578
Epoch 2: -0.6554279327392578
Mem used: -1782MB
best_loss: tensor(-0.6851, device='cuda:1')
final loss: -0.6728531122207642
Test:
Test: 0.914327917282127
0.914327917282127
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.59it/s]100%|██████████| 2/2 [00:00<00:00,  2.26it/s]100%|██████████| 2/2 [00:00<00:00,  2.29it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256739616394
Epoch 1, Loop Feat 0: -0.63239985704422
Epoch 1, Loop Adj 0: -0.6481252908706665
Epoch 2: -0.6481252908706665
Mem used: -758MB
best_loss: tensor(-0.6694, device='cuda:1')
final loss: -0.6659917235374451
Test:
Test: 0.9294682422451994
0.9294682422451994
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.89it/s]100%|██████████| 2/2 [00:00<00:00,  2.55it/s]100%|██████████| 2/2 [00:00<00:00,  2.42it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1, Loop Feat 0: -0.5992991924285889
Epoch 1, Loop Adj 0: -0.6169576048851013
Epoch 2: -0.6169576048851013
Mem used: 380MB
best_loss: tensor(-0.6396, device='cuda:1')
final loss: -0.620612621307373
Test:
Test: 0.8984490398818316
0.8984490398818316
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.65it/s]100%|██████████| 2/2 [00:00<00:00,  2.44it/s]100%|██████████| 2/2 [00:00<00:00,  2.45it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1, Loop Feat 0: -0.6025121808052063
Epoch 1, Loop Adj 0: -0.6112215518951416
Epoch 2: -0.6112215518951416
Mem used: 142MB
best_loss: tensor(-0.6413, device='cuda:1')
final loss: -0.6335221529006958
Test:
Test: 0.939069423929099
0.939069423929099
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.23it/s]100%|██████████| 2/2 [00:00<00:00,  2.43it/s]100%|██████████| 2/2 [00:00<00:00,  2.39it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1, Loop Feat 0: -0.6366366147994995
Epoch 1, Loop Adj 0: -0.6373693943023682
Epoch 2: -0.6373693943023682
Mem used: 380MB
best_loss: tensor(-0.6594, device='cuda:1')
final loss: -0.6642863154411316
Test:
Test: 0.9010339734121122
0.9010339734121122
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.31it/s]100%|██████████| 2/2 [00:00<00:00,  2.88it/s]100%|██████████| 2/2 [00:00<00:00,  2.78it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1, Loop Feat 0: -0.6384122371673584
Epoch 1, Loop Adj 0: -0.6540750861167908
Epoch 2: -0.6540750861167908
Mem used: 142MB
best_loss: tensor(-0.6663, device='cuda:1')
final loss: -0.669019341468811
Test:
Test: 0.9002954209748892
0.9002954209748892
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.53it/s]100%|██████████| 2/2 [00:00<00:00,  2.74it/s]100%|██████████| 2/2 [00:00<00:00,  2.69it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1, Loop Feat 0: -0.650933563709259
Epoch 1, Loop Adj 0: -0.6682626008987427
Epoch 2: -0.6682626008987427
Mem used: -1782MB
best_loss: tensor(-0.6845, device='cuda:1')
final loss: -0.6910498142242432
Test:
Test: 0.9076809453471196
0.9076809453471196
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.02it/s]100%|██████████| 2/2 [00:00<00:00,  2.70it/s]100%|██████████| 2/2 [00:00<00:00,  2.74it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1, Loop Feat 0: -0.5870106816291809
Epoch 1, Loop Adj 0: -0.6004438996315002
Epoch 2: -0.6004438996315002
Mem used: 364MB
best_loss: tensor(-0.6195, device='cuda:1')
final loss: -0.6140019297599792
Test:
Test: 0.914327917282127
0.914327917282127
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.09it/s]100%|██████████| 2/2 [00:00<00:00,  2.12it/s]100%|██████████| 2/2 [00:00<00:00,  2.12it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1, Loop Feat 0: -0.6210651993751526
Epoch 1, Loop Adj 0: -0.6340469121932983
Epoch 2: -0.6340469121932983
Mem used: 362MB
best_loss: tensor(-0.6587, device='cuda:1')
final loss: -0.6433511972427368
Test:
Test: 0.9453471196454948
0.9453471196454948
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.14it/s]100%|██████████| 2/2 [00:00<00:00,  2.97it/s]100%|██████████| 2/2 [00:00<00:00,  2.77it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1, Loop Feat 0: -0.5967429876327515
Epoch 1, Loop Adj 0: -0.6049179434776306
Epoch 2: -0.6049179434776306
Mem used: 540MB
best_loss: tensor(-0.6441, device='cuda:1')
final loss: -0.6291787624359131
Test:
Test: 0.9364844903988183
0.9364844903988183
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.92it/s]100%|██████████| 2/2 [00:01<00:00,  1.96it/s]100%|██████████| 2/2 [00:01<00:00,  1.95it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1, Loop Feat 0: -0.6378571391105652
Epoch 1, Loop Adj 0: -0.6541589498519897
Epoch 2: -0.6541589498519897
Mem used: 142MB
best_loss: tensor(-0.6839, device='cuda:1')
final loss: -0.6704465746879578
Test:
Test: 0.9213441654357459
0.9213441654357459
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.89it/s]100%|██████████| 2/2 [00:00<00:00,  3.10it/s]100%|██████████| 2/2 [00:00<00:00,  3.07it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256143569946
Epoch 1, Loop Feat 0: -0.6312975883483887
Epoch 1, Loop Adj 0: -0.6470969319343567
Epoch 2: -0.6470969319343567
Mem used: 142MB
best_loss: tensor(-0.6656, device='cuda:1')
final loss: -0.6604125499725342
Test:
Test: 0.9420236336779911
0.9420236336779911
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.27it/s]100%|██████████| 2/2 [00:00<00:00,  2.54it/s]100%|██████████| 2/2 [00:00<00:00,  2.49it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1, Loop Feat 0: -0.597593367099762
Epoch 1, Loop Adj 0: -0.6154721975326538
Epoch 2: -0.6154721975326538
Mem used: -1782MB
best_loss: tensor(-0.6346, device='cuda:1')
best_loss: tensor(-0.6347, device='cuda:1')
final loss: -0.6154207587242126
Test:
Test: 0.9113737075332349
0.9113737075332349
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.14it/s]100%|██████████| 2/2 [00:00<00:00,  3.33it/s]100%|██████████| 2/2 [00:00<00:00,  3.30it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1, Loop Feat 0: -0.6009650826454163
Epoch 1, Loop Adj 0: -0.6095733642578125
Epoch 2: -0.6095733642578125
Mem used: 640MB
best_loss: tensor(-0.6380, device='cuda:1')
final loss: -0.629587709903717
Test:
Test: 0.9527326440177253
0.9527326440177253
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.75it/s]100%|██████████| 2/2 [00:00<00:00,  2.97it/s]100%|██████████| 2/2 [00:00<00:00,  2.94it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5979332327842712
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1, Loop Feat 0: -0.6354539394378662
Epoch 1, Loop Adj 0: -0.6362550258636475
Epoch 2: -0.6362550258636475
Mem used: 340MB
best_loss: tensor(-0.6554, device='cuda:1')
best_loss: tensor(-0.6555, device='cuda:1')
final loss: -0.6594029068946838
Test:
Test: 0.9146971935007385
0.9146971935007385
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.59it/s]100%|██████████| 2/2 [00:00<00:00,  2.17it/s]100%|██████████| 2/2 [00:00<00:00,  2.22it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1, Loop Feat 0: -0.6373869180679321
Epoch 1, Loop Adj 0: -0.6528459191322327
Epoch 2: -0.6528459191322327
Mem used: 631MB
best_loss: tensor(-0.6637, device='cuda:1')
final loss: -0.664835512638092
Test:
Test: 0.9135893648449039
0.9135893648449039
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.91it/s]100%|██████████| 2/2 [00:00<00:00,  2.30it/s]100%|██████████| 2/2 [00:00<00:00,  2.23it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1, Loop Feat 0: -0.6500105857849121
Epoch 1, Loop Adj 0: -0.6670569181442261
Epoch 2: -0.6670569181442261
Mem used: 142MB
best_loss: tensor(-0.6819, device='cuda:1')
best_loss: tensor(-0.6821, device='cuda:1')
final loss: -0.6908062100410461
Test:
Test: 0.9198670605612999
0.9198670605612999
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.08it/s]100%|██████████| 1/1 [00:00<00:00,  3.02it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1: -0.5871251821517944
Mem used: 142MB
best_loss: tensor(-0.6002, device='cuda:1')
final loss: -0.5934178829193115
Test:
Test: 0.8914327917282127
0.8914327917282127
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.83it/s]100%|██████████| 1/1 [00:00<00:00,  2.83it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1: -0.6147587895393372
Mem used: 142MB
best_loss: tensor(-0.6404, device='cuda:1')
final loss: -0.6231107711791992
Test:
Test: 0.9335302806499262
0.9335302806499262
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.60it/s]100%|██████████| 1/1 [00:00<00:00,  2.60it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1: -0.6013228893280029
Mem used: 256MB
best_loss: tensor(-0.6274, device='cuda:1')
final loss: -0.6121952533721924
Test:
Test: 0.9250369276218612
0.9250369276218612
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.52it/s]100%|██████████| 1/1 [00:00<00:00,  3.51it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1: -0.6348603367805481
Mem used: 450MB
best_loss: tensor(-0.6671, device='cuda:1')
final loss: -0.6539799571037292
Test:
Test: 0.906573116691285
0.906573116691285
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.04it/s]100%|██████████| 1/1 [00:00<00:00,  3.03it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256143569946
Epoch 1: -0.6364256143569946
Mem used: 142MB
best_loss: tensor(-0.6500, device='cuda:1')
final loss: -0.6431149840354919
Test:
Test: 0.9335302806499262
0.9335302806499262
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.50it/s]100%|██████████| 1/1 [00:00<00:00,  2.45it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1: -0.5944854617118835
Mem used: 142MB
best_loss: tensor(-0.6149, device='cuda:1')
final loss: -0.596197247505188
Test:
Test: 0.8947562776957164
0.8947562776957164
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.98it/s]100%|██████████| 1/1 [00:00<00:00,  2.97it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1: -0.6121348142623901
Mem used: 142MB
best_loss: tensor(-0.6206, device='cuda:1')
final loss: -0.6112505793571472
Test:
Test: 0.9431314623338257
0.9431314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.28it/s]100%|██████████| 1/1 [00:00<00:00,  3.27it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1: -0.629896342754364
Mem used: 142MB
best_loss: tensor(-0.6349, device='cuda:1')
best_loss: tensor(-0.6350, device='cuda:1')
final loss: -0.6362192034721375
Test:
Test: 0.8943870014771049
0.8943870014771049
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.01it/s]100%|██████████| 1/1 [00:00<00:00,  3.01it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1: -0.6394254565238953
Mem used: 238MB
best_loss: tensor(-0.6436, device='cuda:1')
final loss: -0.6456443071365356
Test:
Test: 0.8932791728212703
0.8932791728212703
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.49it/s]100%|██████████| 1/1 [00:00<00:00,  2.49it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1: -0.6556931734085083
Mem used: 817MB
best_loss: tensor(-0.6655, device='cuda:1')
final loss: -0.673012912273407
Test:
Test: 0.9047267355982275
0.9047267355982275
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.36it/s]100%|██████████| 1/1 [00:00<00:00,  2.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1: -0.5871251821517944
Mem used: 142MB
best_loss: tensor(-0.6042, device='cuda:1')
final loss: -0.5982066988945007
Test:
Test: 0.8818316100443131
0.8818316100443131
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.06it/s]100%|██████████| 1/1 [00:00<00:00,  3.06it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1: -0.6147587895393372
Mem used: 142MB
best_loss: tensor(-0.6444, device='cuda:1')
final loss: -0.6244638562202454
Test:
Test: 0.9250369276218612
0.9250369276218612
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.84it/s]100%|██████████| 1/1 [00:00<00:00,  1.84it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1: -0.6013228893280029
Mem used: -1782MB
best_loss: tensor(-0.6303, device='cuda:1')
final loss: -0.6155741214752197
Test:
Test: 0.9169128508124077
0.9169128508124077
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.85it/s]100%|██████████| 1/1 [00:00<00:00,  2.85it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1: -0.6348603367805481
Mem used: 142MB
best_loss: tensor(-0.6679, device='cuda:1')
final loss: -0.6555163860321045
Test:
Test: 0.9025110782865583
0.9025110782865583
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.60it/s]100%|██████████| 1/1 [00:00<00:00,  2.57it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256739616394
Epoch 1: -0.6364256739616394
Mem used: 248MB
best_loss: tensor(-0.6524, device='cuda:1')
final loss: -0.6469227075576782
Test:
Test: 0.9235598227474151
0.9235598227474151
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.98it/s]100%|██████████| 1/1 [00:00<00:00,  2.88it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1: -0.5944854617118835
Mem used: 478MB
best_loss: tensor(-0.6182, device='cuda:1')
final loss: -0.599814772605896
Test:
Test: 0.8855243722304283
0.8855243722304283
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.03it/s]100%|██████████| 1/1 [00:00<00:00,  2.03it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1: -0.6121348142623901
Mem used: 304MB
best_loss: tensor(-0.6249, device='cuda:1')
final loss: -0.6135552525520325
Test:
Test: 0.9276218611521418
0.9276218611521418
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.71it/s]100%|██████████| 1/1 [00:00<00:00,  2.70it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1: -0.629896342754364
Mem used: 142MB
best_loss: tensor(-0.6373, device='cuda:1')
final loss: -0.6421204209327698
Test:
Test: 0.8851550960118169
0.8851550960118169
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.63it/s]100%|██████████| 1/1 [00:00<00:00,  2.63it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1: -0.6394254565238953
Mem used: 142MB
best_loss: tensor(-0.6458, device='cuda:1')
final loss: -0.6496176719665527
Test:
Test: 0.8818316100443131
0.8818316100443131
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.13it/s]100%|██████████| 1/1 [00:00<00:00,  3.09it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1: -0.6556931734085083
Mem used: 90MB
best_loss: tensor(-0.6681, device='cuda:1')
final loss: -0.675157904624939
Test:
Test: 0.8943870014771049
0.8943870014771049
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.86it/s]100%|██████████| 1/1 [00:00<00:00,  2.86it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1: -0.5871251821517944
Mem used: 314MB
best_loss: tensor(-0.5989, device='cuda:1')
final loss: -0.592160701751709
Test:
Test: 0.895864106351551
0.895864106351551
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.87it/s]100%|██████████| 1/1 [00:00<00:00,  2.86it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1: -0.6147587895393372
Mem used: 456MB
best_loss: tensor(-0.6397, device='cuda:1')
best_loss: tensor(-0.6398, device='cuda:1')
final loss: -0.6228579878807068
Test:
Test: 0.9383308714918759
0.9383308714918759
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.28it/s]100%|██████████| 1/1 [00:00<00:00,  2.28it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1: -0.6013228893280029
Mem used: 142MB
best_loss: tensor(-0.6271, device='cuda:1')
final loss: -0.6112287044525146
Test:
Test: 0.9276218611521418
0.9276218611521418
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.79it/s]100%|██████████| 1/1 [00:00<00:00,  2.72it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1: -0.6348603367805481
Mem used: 272MB
best_loss: tensor(-0.6662, device='cuda:1')
final loss: -0.6522647142410278
Test:
Test: 0.906573116691285
0.906573116691285
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.23it/s]100%|██████████| 1/1 [00:00<00:00,  3.22it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256739616394
Epoch 1: -0.6364256739616394
Mem used: 142MB
best_loss: tensor(-0.6494, device='cuda:1')
final loss: -0.6437982320785522
Test:
Test: 0.9375923190546529
0.9375923190546529
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.54it/s]100%|██████████| 1/1 [00:00<00:00,  2.54it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1: -0.5944854617118835
Mem used: 340MB
best_loss: tensor(-0.6143, device='cuda:1')
final loss: -0.5954870581626892
Test:
Test: 0.8991875923190547
0.8991875923190547
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.99it/s]100%|██████████| 1/1 [00:00<00:00,  2.95it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1: -0.6121348142623901
Mem used: 142MB
best_loss: tensor(-0.6199, device='cuda:1')
final loss: -0.61008220911026
Test:
Test: 0.9453471196454948
0.9453471196454948
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.96it/s]100%|██████████| 1/1 [00:00<00:00,  1.96it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1: -0.629896342754364
Mem used: 142MB
best_loss: tensor(-0.6346, device='cuda:1')
best_loss: tensor(-0.6347, device='cuda:1')
final loss: -0.6365795135498047
Test:
Test: 0.8947562776957164
0.8947562776957164
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.48it/s]100%|██████████| 1/1 [00:00<00:00,  2.46it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1: -0.6394254565238953
Mem used: 142MB
best_loss: tensor(-0.6428, device='cuda:1')
best_loss: tensor(-0.6428, device='cuda:1')
final loss: -0.6440651416778564
Test:
Test: 0.896602658788774
0.896602658788774
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.14it/s]100%|██████████| 1/1 [00:00<00:00,  2.13it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556932330131531
Epoch 1: -0.6556932330131531
Mem used: -1782MB
best_loss: tensor(-0.6649, device='cuda:1')
best_loss: tensor(-0.6649, device='cuda:1')
final loss: -0.671977698802948
Test:
Test: 0.9069423929098966
0.9069423929098966
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.26it/s]100%|██████████| 2/2 [00:00<00:00,  3.31it/s]100%|██████████| 2/2 [00:00<00:00,  3.30it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1, Loop Feat 0: -0.5871497392654419
Epoch 1, Loop Adj 0: -0.6005737781524658
Epoch 2: -0.6005737781524658
Mem used: -2699MB
best_loss: tensor(-0.6217, device='cuda:1')
final loss: -0.615121603012085
Test:
Test: 0.9102658788774003
0.9102658788774003
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.55it/s]100%|██████████| 2/2 [00:00<00:00,  3.01it/s]100%|██████████| 2/2 [00:00<00:00,  2.93it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1, Loop Feat 0: -0.6211782097816467
Epoch 1, Loop Adj 0: -0.6341618895530701
Epoch 2: -0.6341618895530701
Mem used: 816MB
best_loss: tensor(-0.6596, device='cuda:1')
final loss: -0.645232617855072
Test:
Test: 0.9409158050221565
0.9409158050221565
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.95it/s]100%|██████████| 2/2 [00:00<00:00,  3.42it/s]100%|██████████| 2/2 [00:00<00:00,  3.34it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1, Loop Feat 0: -0.5968904495239258
Epoch 1, Loop Adj 0: -0.605028510093689
Epoch 2: -0.605028510093689
Mem used: 264MB
best_loss: tensor(-0.6447, device='cuda:1')
final loss: -0.6291183233261108
Test:
Test: 0.931314623338257
0.931314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.43it/s]100%|██████████| 2/2 [00:00<00:00,  2.62it/s]100%|██████████| 2/2 [00:00<00:00,  2.59it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1, Loop Feat 0: -0.6379894614219666
Epoch 1, Loop Adj 0: -0.6542738080024719
Epoch 2: -0.6542738080024719
Mem used: 570MB
best_loss: tensor(-0.6846, device='cuda:1')
final loss: -0.6719945669174194
Test:
Test: 0.9187592319054653
0.9187592319054653
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.40it/s]100%|██████████| 2/2 [00:00<00:00,  2.59it/s]100%|██████████| 2/2 [00:00<00:00,  2.56it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256143569946
Epoch 1, Loop Feat 0: -0.6313977241516113
Epoch 1, Loop Adj 0: -0.6471872925758362
Epoch 2: -0.6471872925758362
Mem used: 142MB
best_loss: tensor(-0.6661, device='cuda:1')
final loss: -0.6616596579551697
Test:
Test: 0.9364844903988183
0.9364844903988183
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.56it/s]100%|██████████| 2/2 [00:00<00:00,  2.65it/s]100%|██████████| 2/2 [00:00<00:00,  2.60it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1, Loop Feat 0: -0.597740650177002
Epoch 1, Loop Adj 0: -0.6156061291694641
Epoch 2: -0.6156061291694641
Mem used: 142MB
best_loss: tensor(-0.6358, device='cuda:1')
final loss: -0.6166138648986816
Test:
Test: 0.9098966026587888
0.9098966026587888
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.66it/s]100%|██████████| 2/2 [00:00<00:00,  2.63it/s]100%|██████████| 2/2 [00:00<00:00,  2.63it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1, Loop Feat 0: -0.6011047959327698
Epoch 1, Loop Adj 0: -0.6097182035446167
Epoch 2: -0.6097182035446167
Mem used: 142MB
best_loss: tensor(-0.6386, device='cuda:1')
final loss: -0.629187822341919
Test:
Test: 0.9479320531757754
0.9479320531757754
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.29it/s]100%|██████████| 2/2 [00:00<00:00,  3.72it/s]100%|██████████| 2/2 [00:00<00:00,  3.65it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1, Loop Feat 0: -0.6355636715888977
Epoch 1, Loop Adj 0: -0.6363623142242432
Epoch 2: -0.6363623142242432
Mem used: 158MB
best_loss: tensor(-0.6562, device='cuda:1')
final loss: -0.6587284803390503
Test:
Test: 0.9113737075332349
0.9113737075332349
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.30it/s]100%|██████████| 2/2 [00:00<00:00,  2.59it/s]100%|██████████| 2/2 [00:00<00:00,  2.52it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1, Loop Feat 0: -0.6374801397323608
Epoch 1, Loop Adj 0: -0.6529524922370911
Epoch 2: -0.6529524922370911
Mem used: 294MB
best_loss: tensor(-0.6645, device='cuda:1')
final loss: -0.666197657585144
Test:
Test: 0.906573116691285
0.906573116691285
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.73it/s]100%|██████████| 2/2 [00:00<00:00,  3.18it/s]100%|██████████| 2/2 [00:00<00:00,  3.10it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1, Loop Feat 0: -0.6501011252403259
Epoch 1, Loop Adj 0: -0.6671668887138367
Epoch 2: -0.6671668887138367
Mem used: 142MB
best_loss: tensor(-0.6817, device='cuda:1')
best_loss: tensor(-0.6821, device='cuda:1')
final loss: -0.6913251280784607
Test:
Test: 0.9180206794682423
0.9180206794682423
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.28it/s]100%|██████████| 2/2 [00:00<00:00,  3.21it/s]100%|██████████| 2/2 [00:00<00:00,  3.22it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1, Loop Feat 0: -0.5871497392654419
Epoch 1, Loop Adj 0: -0.600573718547821
Epoch 2: -0.600573718547821
Mem used: 142MB
best_loss: tensor(-0.6244, device='cuda:1')
final loss: -0.6193571090698242
Test:
Test: 0.9021418020679468
0.9021418020679468
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.91it/s]100%|██████████| 2/2 [00:00<00:00,  2.63it/s]100%|██████████| 2/2 [00:00<00:00,  2.49it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1, Loop Feat 0: -0.6211782097816467
Epoch 1, Loop Adj 0: -0.6341618895530701
Epoch 2: -0.6341618895530701
Mem used: -1523MB
best_loss: tensor(-0.6630, device='cuda:1')
final loss: -0.647130012512207
Test:
Test: 0.9342688330871491
0.9342688330871491
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.70it/s]100%|██████████| 2/2 [00:00<00:00,  2.21it/s]100%|██████████| 2/2 [00:00<00:00,  2.27it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1, Loop Feat 0: -0.5968904495239258
Epoch 1, Loop Adj 0: -0.605028510093689
Epoch 2: -0.605028510093689
Mem used: 142MB
best_loss: tensor(-0.6479, device='cuda:1')
final loss: -0.6328572034835815
Test:
Test: 0.9235598227474151
0.9235598227474151
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.24it/s]100%|██████████| 2/2 [00:00<00:00,  2.60it/s]100%|██████████| 2/2 [00:00<00:00,  2.53it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1, Loop Feat 0: -0.6379894614219666
Epoch 1, Loop Adj 0: -0.6542738080024719
Epoch 2: -0.6542738080024719
Mem used: 370MB
best_loss: tensor(-0.6855, device='cuda:1')
final loss: -0.6725316047668457
Test:
Test: 0.912850812407681
0.912850812407681
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.14it/s]100%|██████████| 2/2 [00:00<00:00,  2.40it/s]100%|██████████| 2/2 [00:00<00:00,  2.36it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256143569946
Epoch 1, Loop Feat 0: -0.6313977241516113
Epoch 1, Loop Adj 0: -0.6471872925758362
Epoch 2: -0.6471872925758362
Mem used: 833MB
best_loss: tensor(-0.6690, device='cuda:1')
final loss: -0.6659734845161438
Test:
Test: 0.9283604135893648
0.9283604135893648
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.27it/s]100%|██████████| 2/2 [00:00<00:00,  3.42it/s]100%|██████████| 2/2 [00:00<00:00,  3.40it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1, Loop Feat 0: -0.597740650177002
Epoch 1, Loop Adj 0: -0.6156061291694641
Epoch 2: -0.6156061291694641
Mem used: 142MB
best_loss: tensor(-0.6393, device='cuda:1')
final loss: -0.6195918321609497
Test:
Test: 0.8980797636632201
0.8980797636632201
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.40it/s]100%|██████████| 2/2 [00:00<00:00,  2.80it/s]100%|██████████| 2/2 [00:00<00:00,  2.72it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1, Loop Feat 0: -0.6011047959327698
Epoch 1, Loop Adj 0: -0.6097181439399719
Epoch 2: -0.6097181439399719
Mem used: 142MB
best_loss: tensor(-0.6414, device='cuda:1')
final loss: -0.6330676674842834
Test:
Test: 0.9401772525849336
0.9401772525849336
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.12it/s]100%|██████████| 2/2 [00:00<00:00,  2.28it/s]100%|██████████| 2/2 [00:00<00:00,  2.22it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5979332327842712
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1, Loop Feat 0: -0.6355636715888977
Epoch 1, Loop Adj 0: -0.6363623738288879
Epoch 2: -0.6363623738288879
Mem used: -1782MB
best_loss: tensor(-0.6592, device='cuda:1')
final loss: -0.6614589095115662
Test:
Test: 0.9006646971935007
0.9006646971935007
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.29it/s]100%|██████████| 2/2 [00:00<00:00,  2.49it/s]100%|██████████| 2/2 [00:00<00:00,  2.37it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1, Loop Feat 0: -0.6374800801277161
Epoch 1, Loop Adj 0: -0.6529524922370911
Epoch 2: -0.6529524922370911
Mem used: 382MB
best_loss: tensor(-0.6658, device='cuda:1')
final loss: -0.6690698862075806
Test:
Test: 0.9025110782865583
0.9025110782865583
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.44it/s]100%|██████████| 2/2 [00:00<00:00,  2.49it/s]100%|██████████| 2/2 [00:00<00:00,  2.47it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556932330131531
Epoch 1, Loop Feat 0: -0.6501011252403259
Epoch 1, Loop Adj 0: -0.6671668887138367
Epoch 2: -0.6671668887138367
Mem used: 360MB
best_loss: tensor(-0.6847, device='cuda:1')
final loss: -0.6924158334732056
Test:
Test: 0.9080502215657311
0.9080502215657311
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.34it/s]100%|██████████| 2/2 [00:00<00:00,  2.20it/s]100%|██████████| 2/2 [00:00<00:00,  2.22it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5871251821517944
Epoch 1, Loop Feat 0: -0.5870093703269958
Epoch 1, Loop Adj 0: -0.6004433035850525
Epoch 2: -0.6004433035850525
Mem used: 364MB
best_loss: tensor(-0.6195, device='cuda:1')
final loss: -0.6140017509460449
Test:
Test: 0.914327917282127
0.914327917282127
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.20it/s]100%|██████████| 2/2 [00:00<00:00,  2.49it/s]100%|██████████| 2/2 [00:00<00:00,  2.44it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.6147587895393372
Epoch 1, Loop Feat 0: -0.6210647225379944
Epoch 1, Loop Adj 0: -0.6340467929840088
Epoch 2: -0.6340467929840088
Mem used: 624MB
best_loss: tensor(-0.6587, device='cuda:1')
final loss: -0.6433514356613159
Test:
Test: 0.9453471196454948
0.9453471196454948
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.50it/s]100%|██████████| 2/2 [00:00<00:00,  2.77it/s]100%|██████████| 2/2 [00:00<00:00,  2.73it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.6013228893280029
Epoch 1, Loop Feat 0: -0.5967423319816589
Epoch 1, Loop Adj 0: -0.6049171090126038
Epoch 2: -0.6049171090126038
Mem used: 142MB
best_loss: tensor(-0.6441, device='cuda:1')
final loss: -0.6291789412498474
Test:
Test: 0.9364844903988183
0.9364844903988183
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.55it/s]100%|██████████| 2/2 [00:00<00:00,  2.63it/s]100%|██████████| 2/2 [00:00<00:00,  2.62it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6348603367805481
Epoch 1, Loop Feat 0: -0.6378563642501831
Epoch 1, Loop Adj 0: -0.6541582942008972
Epoch 2: -0.6541582942008972
Mem used: 142MB
best_loss: tensor(-0.6839, device='cuda:1')
final loss: -0.670446515083313
Test:
Test: 0.9213441654357459
0.9213441654357459
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.33it/s]100%|██████████| 2/2 [00:00<00:00,  2.76it/s]100%|██████████| 2/2 [00:00<00:00,  2.83it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6364256143569946
Epoch 1, Loop Feat 0: -0.6312972903251648
Epoch 1, Loop Adj 0: -0.647095799446106
Epoch 2: -0.647095799446106
Mem used: -758MB
best_loss: tensor(-0.6656, device='cuda:1')
final loss: -0.6604132056236267
Test:
Test: 0.9420236336779911
0.9420236336779911
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.85it/s]100%|██████████| 2/2 [00:00<00:00,  3.85it/s]100%|██████████| 2/2 [00:00<00:00,  3.85it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5944854617118835
Epoch 1, Loop Feat 0: -0.5975931286811829
Epoch 1, Loop Adj 0: -0.6154720187187195
Epoch 2: -0.6154720187187195
Mem used: 142MB
best_loss: tensor(-0.6346, device='cuda:1')
best_loss: tensor(-0.6347, device='cuda:1')
final loss: -0.6154207587242126
Test:
Test: 0.9113737075332349
0.9113737075332349
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.42it/s]100%|██████████| 2/2 [00:00<00:00,  2.32it/s]100%|██████████| 2/2 [00:00<00:00,  2.34it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.6121348142623901
Epoch 1, Loop Feat 0: -0.6009649038314819
Epoch 1, Loop Adj 0: -0.6095731258392334
Epoch 2: -0.6095731258392334
Mem used: 90MB
best_loss: tensor(-0.6380, device='cuda:1')
final loss: -0.6295876502990723
Test:
Test: 0.9527326440177253
0.9527326440177253
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.82it/s]100%|██████████| 2/2 [00:00<00:00,  2.31it/s]100%|██████████| 2/2 [00:00<00:00,  2.22it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5979332327842712
Epoch 0, Loop Adj 0: -0.629896342754364
Epoch 1, Loop Feat 0: -0.6354532241821289
Epoch 1, Loop Adj 0: -0.6362544894218445
Epoch 2: -0.6362544894218445
Mem used: 811MB
best_loss: tensor(-0.6554, device='cuda:1')
best_loss: tensor(-0.6555, device='cuda:1')
final loss: -0.659403383731842
Test:
Test: 0.9146971935007385
0.9146971935007385
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.67it/s]100%|██████████| 2/2 [00:00<00:00,  2.94it/s]100%|██████████| 2/2 [00:00<00:00,  2.89it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6394254565238953
Epoch 1, Loop Feat 0: -0.6373862624168396
Epoch 1, Loop Adj 0: -0.6528456807136536
Epoch 2: -0.6528456807136536
Mem used: 342MB
best_loss: tensor(-0.6637, device='cuda:1')
final loss: -0.6648354530334473
Test:
Test: 0.9135893648449039
0.9135893648449039
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=0.0001, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.29it/s]100%|██████████| 2/2 [00:00<00:00,  2.90it/s]100%|██████████| 2/2 [00:00<00:00,  2.79it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6556931734085083
Epoch 1, Loop Feat 0: -0.6500106453895569
Epoch 1, Loop Adj 0: -0.6670564413070679
Epoch 2: -0.6670564413070679
Mem used: 402MB
best_loss: tensor(-0.6819, device='cuda:1')
best_loss: tensor(-0.6821, device='cuda:1')
final loss: -0.6908056735992432
Test:
Test: 0.9198670605612999
0.9198670605612999
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.32it/s]100%|██████████| 1/1 [00:00<00:00,  3.32it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1: -0.5700475573539734
Mem used: 142MB
best_loss: tensor(-0.5692, device='cuda:1')
final loss: -0.5700176954269409
Test:
Test: 0.8777695716395865
0.8777695716395865
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.28it/s]100%|██████████| 1/1 [00:00<00:00,  2.28it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1: -0.5998179316520691
Mem used: 390MB
best_loss: tensor(-0.6096, device='cuda:1')
final loss: -0.5996890068054199
Test:
Test: 0.9272525849335302
0.9272525849335302
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.92it/s]100%|██████████| 1/1 [00:00<00:00,  1.92it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1: -0.5883730053901672
Mem used: 142MB
best_loss: tensor(-0.5993, device='cuda:1')
final loss: -0.5905247926712036
Test:
Test: 0.920605612998523
0.920605612998523
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.25it/s]100%|██████████| 1/1 [00:00<00:00,  2.22it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1: -0.6204400062561035
Mem used: 236MB
best_loss: tensor(-0.6367, device='cuda:1')
final loss: -0.6299448609352112
Test:
Test: 0.8862629246676514
0.8862629246676514
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.19it/s]100%|██████████| 1/1 [00:00<00:00,  2.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1: -0.6252853870391846
Mem used: 142MB
best_loss: tensor(-0.6218, device='cuda:1')
final loss: -0.621247410774231
Test:
Test: 0.9287296898079763
0.9287296898079763
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.28it/s]100%|██████████| 1/1 [00:00<00:00,  2.28it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1: -0.5779958963394165
Mem used: 142MB
best_loss: tensor(-0.5837, device='cuda:1')
best_loss: tensor(-0.5838, device='cuda:1')
final loss: -0.572499692440033
Test:
Test: 0.888109305760709
0.888109305760709
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.19it/s]100%|██████████| 1/1 [00:00<00:00,  2.19it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1: -0.5973249077796936
Mem used: 142MB
best_loss: tensor(-0.5914, device='cuda:1')
final loss: -0.5867443084716797
Test:
Test: 0.9279911373707533
0.9279911373707533
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.00it/s]100%|██████████| 1/1 [00:00<00:00,  2.00it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1: -0.6116454005241394
Mem used: -1782MB
best_loss: tensor(-0.6023, device='cuda:1')
final loss: -0.6114569306373596
Test:
Test: 0.8737075332348597
0.8737075332348597
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.17it/s]100%|██████████| 1/1 [00:00<00:00,  2.10it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1: -0.6230250597000122
Mem used: -1782MB
best_loss: tensor(-0.6105, device='cuda:1')
final loss: -0.6192219257354736
Test:
Test: 0.8737075332348597
0.8737075332348597
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.43it/s]100%|██████████| 1/1 [00:00<00:00,  2.42it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1: -0.6422785520553589
Mem used: 364MB
best_loss: tensor(-0.6358, device='cuda:1')
final loss: -0.6496391892433167
Test:
Test: 0.8895864106351551
0.8895864106351551
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.76it/s]100%|██████████| 1/1 [00:00<00:00,  2.75it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1: -0.5700475573539734
Mem used: 242MB
best_loss: tensor(-0.5750, device='cuda:1')
final loss: -0.5740842223167419
Test:
Test: 0.8674298375184638
0.8674298375184638
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.07it/s]100%|██████████| 1/1 [00:00<00:00,  3.06it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1: -0.5998179316520691
Mem used: 142MB
best_loss: tensor(-0.6146, device='cuda:1')
final loss: -0.6036352515220642
Test:
Test: 0.9191285081240768
0.9191285081240768
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.42it/s]100%|██████████| 1/1 [00:00<00:00,  2.38it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1: -0.5883730053901672
Mem used: 142MB
best_loss: tensor(-0.6023, device='cuda:1')
final loss: -0.5936775803565979
Test:
Test: 0.9132200886262924
0.9132200886262924
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.21it/s]100%|██████████| 1/1 [00:00<00:00,  2.21it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1: -0.6204400062561035
Mem used: 142MB
best_loss: tensor(-0.6390, device='cuda:1')
final loss: -0.6319695711135864
Test:
Test: 0.8836779911373708
0.8836779911373708
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.49it/s]100%|██████████| 1/1 [00:00<00:00,  2.48it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1: -0.6252853870391846
Mem used: 142MB
best_loss: tensor(-0.6254, device='cuda:1')
final loss: -0.6247382164001465
Test:
Test: 0.920605612998523
0.920605612998523
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.56it/s]100%|██████████| 1/1 [00:00<00:00,  2.56it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1: -0.5779958963394165
Mem used: 242MB
best_loss: tensor(-0.5888, device='cuda:1')
final loss: -0.5780509114265442
Test:
Test: 0.8722304283604135
0.8722304283604135
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.68it/s]100%|██████████| 1/1 [00:00<00:00,  2.65it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1: -0.5973249077796936
Mem used: 210MB
best_loss: tensor(-0.5958, device='cuda:1')
final loss: -0.5906469225883484
Test:
Test: 0.9124815361890695
0.9124815361890695
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.34it/s]100%|██████████| 1/1 [00:00<00:00,  3.34it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1: -0.6116454005241394
Mem used: 142MB
best_loss: tensor(-0.6055, device='cuda:1')
final loss: -0.616543710231781
Test:
Test: 0.8711225997045791
0.8711225997045791
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.88it/s]100%|██████████| 1/1 [00:00<00:00,  2.75it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1: -0.6230250597000122
Mem used: 142MB
best_loss: tensor(-0.6140, device='cuda:1')
final loss: -0.6225937008857727
Test:
Test: 0.8641063515509602
0.8641063515509602
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.43it/s]100%|██████████| 1/1 [00:00<00:00,  2.42it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1: -0.6422785520553589
Mem used: -1607MB
best_loss: tensor(-0.6396, device='cuda:1')
final loss: -0.6526389718055725
Test:
Test: 0.8810930576070901
0.8810930576070901
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.90it/s]100%|██████████| 1/1 [00:00<00:00,  3.90it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1: -0.5700475573539734
Mem used: 142MB
best_loss: tensor(-0.5682, device='cuda:1')
final loss: -0.5676238536834717
Test:
Test: 0.879615952732644
0.879615952732644
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.44it/s]100%|██████████| 1/1 [00:00<00:00,  3.37it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1: -0.5998179316520691
Mem used: 222MB
best_loss: tensor(-0.6084, device='cuda:1')
best_loss: tensor(-0.6085, device='cuda:1')
final loss: -0.5995118618011475
Test:
Test: 0.9327917282127031
0.9327917282127031
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.41it/s]100%|██████████| 1/1 [00:00<00:00,  2.23it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1: -0.5883730053901672
Mem used: 334MB
best_loss: tensor(-0.5986, device='cuda:1')
final loss: -0.5890340209007263
Test:
Test: 0.9231905465288035
0.9231905465288035
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.84it/s]100%|██████████| 1/1 [00:00<00:00,  2.84it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1: -0.6204400062561035
Mem used: -1522MB
best_loss: tensor(-0.6355, device='cuda:1')
final loss: -0.6288245320320129
Test:
Test: 0.8862629246676514
0.8862629246676514
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.73it/s]100%|██████████| 1/1 [00:00<00:00,  2.73it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1: -0.6252853870391846
Mem used: 142MB
best_loss: tensor(-0.6209, device='cuda:1')
final loss: -0.622058629989624
Test:
Test: 0.9320531757754801
0.9320531757754801
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.43it/s]100%|██████████| 1/1 [00:00<00:00,  2.43it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1: -0.5779958963394165
Mem used: 142MB
best_loss: tensor(-0.5831, device='cuda:1')
final loss: -0.5712790489196777
Test:
Test: 0.8870014771048744
0.8870014771048744
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.90it/s]100%|██████████| 1/1 [00:00<00:00,  2.89it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1: -0.5973249077796936
Mem used: 142MB
best_loss: tensor(-0.5899, device='cuda:1')
final loss: -0.5862894654273987
Test:
Test: 0.9316838995568686
0.9316838995568686
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.70it/s]100%|██████████| 1/1 [00:00<00:00,  2.68it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1: -0.6116454005241394
Mem used: 354MB
best_loss: tensor(-0.6017, device='cuda:1')
best_loss: tensor(-0.6018, device='cuda:1')
final loss: -0.6097202897071838
Test:
Test: 0.8785081240768094
0.8785081240768094
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.63it/s]100%|██████████| 1/1 [00:00<00:00,  2.63it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1: -0.6230250597000122
Mem used: 276MB
best_loss: tensor(-0.6093, device='cuda:1')
best_loss: tensor(-0.6094, device='cuda:1')
final loss: -0.6169101595878601
Test:
Test: 0.8777695716395865
0.8777695716395865
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.69it/s]100%|██████████| 1/1 [00:00<00:00,  2.69it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1: -0.6422785520553589
Mem used: 142MB
best_loss: tensor(-0.6348, device='cuda:1')
final loss: -0.6492644548416138
Test:
Test: 0.8892171344165436
0.8892171344165436
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.31it/s]100%|██████████| 2/2 [00:00<00:00,  2.61it/s]100%|██████████| 2/2 [00:00<00:00,  2.55it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1, Loop Feat 0: -0.5702927112579346
Epoch 1, Loop Adj 0: -0.5689419507980347
Epoch 2: -0.5689419507980347
Mem used: -1522MB
best_loss: tensor(-0.5727, device='cuda:1')
final loss: -0.5715366005897522
Test:
Test: 0.8814623338257016
0.8814623338257016
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.80it/s]100%|██████████| 2/2 [00:00<00:00,  2.24it/s]100%|██████████| 2/2 [00:00<00:00,  2.31it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1, Loop Feat 0: -0.6065241694450378
Epoch 1, Loop Adj 0: -0.6056128144264221
Epoch 2: -0.6056128144264221
Mem used: 142MB
best_loss: tensor(-0.6125, device='cuda:1')
final loss: -0.6046878099441528
Test:
Test: 0.9283604135893648
0.9283604135893648
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.12it/s]100%|██████████| 2/2 [00:00<00:00,  2.48it/s]100%|██████████| 2/2 [00:00<00:00,  2.41it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1, Loop Feat 0: -0.5844225287437439
Epoch 1, Loop Adj 0: -0.5815762877464294
Epoch 2: -0.5815762877464294
Mem used: 142MB
best_loss: tensor(-0.6013, device='cuda:1')
final loss: -0.5921459794044495
Test:
Test: 0.920605612998523
0.920605612998523
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.97it/s]100%|██████████| 2/2 [00:00<00:00,  2.47it/s]100%|██████████| 2/2 [00:00<00:00,  2.47it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1, Loop Feat 0: -0.6242100596427917
Epoch 1, Loop Adj 0: -0.6280819773674011
Epoch 2: -0.6280819773674011
Mem used: 550MB
best_loss: tensor(-0.6387, device='cuda:1')
final loss: -0.631913423538208
Test:
Test: 0.8866322008862629
0.8866322008862629
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.09it/s]100%|██████████| 2/2 [00:00<00:00,  2.15it/s]100%|██████████| 2/2 [00:00<00:00,  2.13it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1, Loop Feat 0: -0.6200400590896606
Epoch 1, Loop Adj 0: -0.6248250007629395
Epoch 2: -0.6248250007629395
Mem used: 346MB
best_loss: tensor(-0.6236, device='cuda:1')
final loss: -0.6242198944091797
Test:
Test: 0.9287296898079763
0.9287296898079763
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.80it/s]100%|██████████| 2/2 [00:00<00:00,  2.62it/s]100%|██████████| 2/2 [00:00<00:00,  2.64it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1, Loop Feat 0: -0.5811924934387207
Epoch 1, Loop Adj 0: -0.5842741131782532
Epoch 2: -0.5842741131782532
Mem used: 478MB
best_loss: tensor(-0.5867, device='cuda:1')
final loss: -0.5751628875732422
Test:
Test: 0.888109305760709
0.888109305760709
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.46it/s]100%|██████████| 2/2 [00:00<00:00,  2.67it/s]100%|██████████| 2/2 [00:00<00:00,  2.60it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1, Loop Feat 0: -0.5865999460220337
Epoch 1, Loop Adj 0: -0.5834004878997803
Epoch 2: -0.5834004878997803
Mem used: 142MB
best_loss: tensor(-0.5932, device='cuda:1')
final loss: -0.5890520215034485
Test:
Test: 0.9287296898079763
0.9287296898079763
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.58it/s]100%|██████████| 2/2 [00:00<00:00,  2.67it/s]100%|██████████| 2/2 [00:00<00:00,  2.63it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1, Loop Feat 0: -0.6176303625106812
Epoch 1, Loop Adj 0: -0.602847695350647
Epoch 2: -0.602847695350647
Mem used: 142MB
best_loss: tensor(-0.6053, device='cuda:1')
final loss: -0.6152293682098389
Test:
Test: 0.8785081240768094
0.8785081240768094
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.45it/s]100%|██████████| 2/2 [00:00<00:00,  2.84it/s]100%|██████████| 2/2 [00:00<00:00,  2.74it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1, Loop Feat 0: -0.6205371022224426
Epoch 1, Loop Adj 0: -0.6215353608131409
Epoch 2: -0.6215353608131409
Mem used: -1782MB
best_loss: tensor(-0.6132, device='cuda:1')
final loss: -0.6219960451126099
Test:
Test: 0.8748153618906942
0.8748153618906942
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.25it/s]100%|██████████| 2/2 [00:00<00:00,  2.64it/s]100%|██████████| 2/2 [00:00<00:00,  2.58it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1, Loop Feat 0: -0.6367933750152588
Epoch 1, Loop Adj 0: -0.6424588561058044
Epoch 2: -0.6424588561058044
Mem used: 142MB
best_loss: tensor(-0.6367, device='cuda:1')
best_loss: tensor(-0.6372, device='cuda:1')
final loss: -0.6515530347824097
Test:
Test: 0.8929098966026587
0.8929098966026587
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.66it/s]100%|██████████| 2/2 [00:00<00:00,  2.87it/s]100%|██████████| 2/2 [00:00<00:00,  2.84it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1, Loop Feat 0: -0.5717308521270752
Epoch 1, Loop Adj 0: -0.5704231858253479
Epoch 2: -0.5704231858253479
Mem used: -619MB
best_loss: tensor(-0.5776, device='cuda:1')
final loss: -0.5766876339912415
Test:
Test: 0.870384047267356
0.870384047267356
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.26it/s]100%|██████████| 2/2 [00:00<00:00,  2.11it/s]100%|██████████| 2/2 [00:00<00:00,  2.13it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1, Loop Feat 0: -0.6075827479362488
Epoch 1, Loop Adj 0: -0.6067972779273987
Epoch 2: -0.6067972779273987
Mem used: 368MB
best_loss: tensor(-0.6167, device='cuda:1')
final loss: -0.6077253818511963
Test:
Test: 0.9224519940915805
0.9224519940915805
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.57it/s]100%|██████████| 2/2 [00:00<00:00,  3.55it/s]100%|██████████| 2/2 [00:00<00:00,  3.36it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1, Loop Feat 0: -0.5857290029525757
Epoch 1, Loop Adj 0: -0.5827316641807556
Epoch 2: -0.5827316641807556
Mem used: 142MB
best_loss: tensor(-0.6066, device='cuda:1')
final loss: -0.5978082418441772
Test:
Test: 0.9106351550960118
0.9106351550960118
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.39it/s]100%|██████████| 2/2 [00:00<00:00,  2.22it/s]100%|██████████| 2/2 [00:00<00:00,  2.20it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1, Loop Feat 0: -0.625567615032196
Epoch 1, Loop Adj 0: -0.629288375377655
Epoch 2: -0.629288375377655
Mem used: 376MB
best_loss: tensor(-0.6405, device='cuda:1')
final loss: -0.6358349323272705
Test:
Test: 0.8877400295420975
0.8877400295420975
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.92it/s]100%|██████████| 2/2 [00:00<00:00,  3.23it/s]100%|██████████| 2/2 [00:00<00:00,  3.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1, Loop Feat 0: -0.621084451675415
Epoch 1, Loop Adj 0: -0.6259189248085022
Epoch 2: -0.6259189248085022
Mem used: 142MB
best_loss: tensor(-0.6284, device='cuda:1')
final loss: -0.6301948428153992
Test:
Test: 0.9209748892171344
0.9209748892171344
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.98it/s]100%|██████████| 2/2 [00:00<00:00,  3.23it/s]100%|██████████| 2/2 [00:00<00:00,  3.17it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1, Loop Feat 0: -0.5827701091766357
Epoch 1, Loop Adj 0: -0.5856638550758362
Epoch 2: -0.5856638550758362
Mem used: 142MB
best_loss: tensor(-0.5914, device='cuda:1')
final loss: -0.5803556442260742
Test:
Test: 0.8748153618906942
0.8748153618906942
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.70it/s]100%|██████████| 2/2 [00:00<00:00,  2.49it/s]100%|██████████| 2/2 [00:00<00:00,  2.52it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1, Loop Feat 0: -0.5878846049308777
Epoch 1, Loop Adj 0: -0.5848349928855896
Epoch 2: -0.5848349928855896
Mem used: 142MB
best_loss: tensor(-0.5970, device='cuda:1')
final loss: -0.5934919118881226
Test:
Test: 0.9154357459379616
0.9154357459379616
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.48it/s]100%|██████████| 2/2 [00:00<00:00,  2.48it/s]100%|██████████| 2/2 [00:00<00:00,  2.48it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1, Loop Feat 0: -0.6188207268714905
Epoch 1, Loop Adj 0: -0.6041669249534607
Epoch 2: -0.6041669249534607
Mem used: 288MB
best_loss: tensor(-0.6100, device='cuda:1')
final loss: -0.6181879639625549
Test:
Test: 0.8722304283604135
0.8722304283604135
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.44it/s]100%|██████████| 2/2 [00:00<00:00,  2.37it/s]100%|██████████| 2/2 [00:00<00:00,  2.38it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1, Loop Feat 0: -0.6216335296630859
Epoch 1, Loop Adj 0: -0.6226671934127808
Epoch 2: -0.6226671934127808
Mem used: 142MB
best_loss: tensor(-0.6167, device='cuda:1')
final loss: -0.6252577304840088
Test:
Test: 0.8725997045790251
0.8725997045790251
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.61it/s]100%|██████████| 2/2 [00:00<00:00,  2.74it/s]100%|██████████| 2/2 [00:00<00:00,  2.70it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1, Loop Feat 0: -0.6377724409103394
Epoch 1, Loop Adj 0: -0.6436880826950073
Epoch 2: -0.6436880826950073
Mem used: 142MB
best_loss: tensor(-0.6410, device='cuda:1')
final loss: -0.6542640328407288
Test:
Test: 0.8884785819793205
0.8884785819793205
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.09it/s]100%|██████████| 2/2 [00:00<00:00,  2.29it/s]100%|██████████| 2/2 [00:00<00:00,  2.25it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1, Loop Feat 0: -0.5699779987335205
Epoch 1, Loop Adj 0: -0.5686210989952087
Epoch 2: -0.5686210989952087
Mem used: -1783MB
best_loss: tensor(-0.5704, device='cuda:1')
final loss: -0.5696504712104797
Test:
Test: 0.8825701624815362
0.8825701624815362
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.58it/s]100%|██████████| 2/2 [00:00<00:00,  2.93it/s]100%|██████████| 2/2 [00:00<00:00,  2.85it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1, Loop Feat 0: -0.6062853336334229
Epoch 1, Loop Adj 0: -0.605347216129303
Epoch 2: -0.605347216129303
Mem used: 352MB
best_loss: tensor(-0.6107, device='cuda:1')
final loss: -0.6017289161682129
Test:
Test: 0.9331610044313147
0.9331610044313147
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.45it/s]100%|██████████| 2/2 [00:00<00:00,  2.46it/s]100%|██████████| 2/2 [00:00<00:00,  2.41it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1, Loop Feat 0: -0.5841290354728699
Epoch 1, Loop Adj 0: -0.5813204646110535
Epoch 2: -0.5813204646110535
Mem used: 302MB
best_loss: tensor(-0.6004, device='cuda:1')
final loss: -0.5908800363540649
Test:
Test: 0.9235598227474151
0.9235598227474151
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.73it/s]100%|██████████| 2/2 [00:00<00:00,  1.97it/s]100%|██████████| 2/2 [00:00<00:00,  2.05it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1, Loop Feat 0: -0.6239082217216492
Epoch 1, Loop Adj 0: -0.6278011202812195
Epoch 2: -0.6278011202812195
Mem used: 142MB
best_loss: tensor(-0.6374, device='cuda:1')
best_loss: tensor(-0.6375, device='cuda:1')
final loss: -0.631401002407074
Test:
Test: 0.8888478581979321
0.8888478581979321
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.49it/s]100%|██████████| 2/2 [00:00<00:00,  2.39it/s]100%|██████████| 2/2 [00:00<00:00,  2.40it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1, Loop Feat 0: -0.6197946667671204
Epoch 1, Loop Adj 0: -0.6245719194412231
Epoch 2: -0.6245719194412231
Mem used: 142MB
best_loss: tensor(-0.6227, device='cuda:1')
final loss: -0.6235286593437195
Test:
Test: 0.9324224519940916
0.9324224519940916
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.30it/s]100%|██████████| 2/2 [00:00<00:00,  2.04it/s]100%|██████████| 2/2 [00:00<00:00,  2.05it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1, Loop Feat 0: -0.5808542966842651
Epoch 1, Loop Adj 0: -0.5839716196060181
Epoch 2: -0.5839716196060181
Mem used: 142MB
best_loss: tensor(-0.5851, device='cuda:1')
best_loss: tensor(-0.5852, device='cuda:1')
final loss: -0.574006974697113
Test:
Test: 0.8895864106351551
0.8895864106351551
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.88it/s]100%|██████████| 2/2 [00:00<00:00,  2.68it/s]100%|██████████| 2/2 [00:00<00:00,  2.71it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1, Loop Feat 0: -0.5863147974014282
Epoch 1, Loop Adj 0: -0.5830776691436768
Epoch 2: -0.5830776691436768
Mem used: 142MB
best_loss: tensor(-0.5920, device='cuda:1')
final loss: -0.5890137553215027
Test:
Test: 0.9338995568685377
0.9338995568685377
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.54it/s]100%|██████████| 2/2 [00:00<00:00,  2.99it/s]100%|██████████| 2/2 [00:00<00:00,  2.91it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1, Loop Feat 0: -0.617343544960022
Epoch 1, Loop Adj 0: -0.6025485992431641
Epoch 2: -0.6025485992431641
Mem used: -1523MB
best_loss: tensor(-0.6042, device='cuda:1')
best_loss: tensor(-0.6042, device='cuda:1')
final loss: -0.6133396029472351
Test:
Test: 0.8788774002954209
0.8788774002954209
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.03it/s]100%|██████████| 2/2 [00:00<00:00,  2.66it/s]100%|██████████| 2/2 [00:00<00:00,  2.54it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1, Loop Feat 0: -0.6202954053878784
Epoch 1, Loop Adj 0: -0.6212887763977051
Epoch 2: -0.6212887763977051
Mem used: 816MB
best_loss: tensor(-0.6120, device='cuda:1')
final loss: -0.6192547082901001
Test:
Test: 0.8777695716395865
0.8777695716395865
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.30it/s]100%|██████████| 2/2 [00:00<00:00,  2.31it/s]100%|██████████| 2/2 [00:00<00:00,  2.31it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1, Loop Feat 0: -0.6365771889686584
Epoch 1, Loop Adj 0: -0.642169713973999
Epoch 2: -0.642169713973999
Mem used: 356MB
best_loss: tensor(-0.6367, device='cuda:1')
best_loss: tensor(-0.6368, device='cuda:1')
final loss: -0.6514075994491577
Test:
Test: 0.8910635155096012
0.8910635155096012
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.58it/s]100%|██████████| 1/1 [00:00<00:00,  2.48it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1: -0.5700475573539734
Mem used: 142MB
best_loss: tensor(-0.5692, device='cuda:1')
final loss: -0.5700176954269409
Test:
Test: 0.8777695716395865
0.8777695716395865
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.45it/s]100%|██████████| 1/1 [00:00<00:00,  2.36it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1: -0.5998179316520691
Mem used: 142MB
best_loss: tensor(-0.6096, device='cuda:1')
final loss: -0.5996890068054199
Test:
Test: 0.9272525849335302
0.9272525849335302
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.18it/s]100%|██████████| 1/1 [00:00<00:00,  2.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1: -0.5883730053901672
Mem used: 142MB
best_loss: tensor(-0.5993, device='cuda:1')
final loss: -0.5905247926712036
Test:
Test: 0.920605612998523
0.920605612998523
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.62it/s]100%|██████████| 1/1 [00:00<00:00,  2.62it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1: -0.6204400062561035
Mem used: 142MB
best_loss: tensor(-0.6367, device='cuda:1')
final loss: -0.6299448609352112
Test:
Test: 0.8862629246676514
0.8862629246676514
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.53it/s]100%|██████████| 1/1 [00:00<00:00,  2.53it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1: -0.6252853870391846
Mem used: 142MB
best_loss: tensor(-0.6218, device='cuda:1')
final loss: -0.621247410774231
Test:
Test: 0.9287296898079763
0.9287296898079763
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.45it/s]100%|██████████| 1/1 [00:00<00:00,  2.45it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1: -0.5779958963394165
Mem used: 142MB
best_loss: tensor(-0.5837, device='cuda:1')
best_loss: tensor(-0.5837, device='cuda:1')
final loss: -0.5724952220916748
Test:
Test: 0.888109305760709
0.888109305760709
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.37it/s]100%|██████████| 1/1 [00:00<00:00,  2.37it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1: -0.5973249077796936
Mem used: 292MB
best_loss: tensor(-0.5914, device='cuda:1')
final loss: -0.5867443084716797
Test:
Test: 0.9279911373707533
0.9279911373707533
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.97it/s]100%|██████████| 1/1 [00:00<00:00,  2.88it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1: -0.6116454005241394
Mem used: 609MB
best_loss: tensor(-0.6023, device='cuda:1')
final loss: -0.6114569306373596
Test:
Test: 0.8737075332348597
0.8737075332348597
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.34it/s]100%|██████████| 1/1 [00:00<00:00,  3.28it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1: -0.6230250597000122
Mem used: 142MB
best_loss: tensor(-0.6105, device='cuda:1')
best_loss: tensor(-0.6105, device='cuda:1')
final loss: -0.6188780069351196
Test:
Test: 0.878138847858198
0.878138847858198
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.49it/s]100%|██████████| 1/1 [00:00<00:00,  2.49it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1: -0.6422785520553589
Mem used: 142MB
best_loss: tensor(-0.6358, device='cuda:1')
final loss: -0.6496391892433167
Test:
Test: 0.8895864106351551
0.8895864106351551
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  4.25it/s]100%|██████████| 1/1 [00:00<00:00,  4.24it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1: -0.5700475573539734
Mem used: 142MB
best_loss: tensor(-0.5750, device='cuda:1')
final loss: -0.5740842223167419
Test:
Test: 0.8674298375184638
0.8674298375184638
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.37it/s]100%|██████████| 1/1 [00:00<00:00,  2.28it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1: -0.5998179316520691
Mem used: 262MB
best_loss: tensor(-0.6146, device='cuda:1')
final loss: -0.6036352515220642
Test:
Test: 0.9191285081240768
0.9191285081240768
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.32it/s]100%|██████████| 1/1 [00:00<00:00,  3.31it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1: -0.5883730053901672
Mem used: 142MB
best_loss: tensor(-0.6023, device='cuda:1')
final loss: -0.5936775803565979
Test:
Test: 0.9132200886262924
0.9132200886262924
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.57it/s]100%|██████████| 1/1 [00:00<00:00,  2.57it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1: -0.6204400062561035
Mem used: 142MB
best_loss: tensor(-0.6390, device='cuda:1')
final loss: -0.6319695711135864
Test:
Test: 0.8836779911373708
0.8836779911373708
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.08it/s]100%|██████████| 1/1 [00:00<00:00,  2.07it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1: -0.6252853870391846
Mem used: -1609MB
best_loss: tensor(-0.6254, device='cuda:1')
final loss: -0.6247382164001465
Test:
Test: 0.920605612998523
0.920605612998523
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.36it/s]100%|██████████| 1/1 [00:00<00:00,  2.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1: -0.5779958963394165
Mem used: 306MB
best_loss: tensor(-0.5888, device='cuda:1')
final loss: -0.5780509114265442
Test:
Test: 0.8722304283604135
0.8722304283604135
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.16it/s]100%|██████████| 1/1 [00:00<00:00,  2.16it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1: -0.5973249077796936
Mem used: 278MB
best_loss: tensor(-0.5958, device='cuda:1')
final loss: -0.5906468629837036
Test:
Test: 0.9124815361890695
0.9124815361890695
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.44it/s]100%|██████████| 1/1 [00:00<00:00,  2.44it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1: -0.6116454005241394
Mem used: 452MB
best_loss: tensor(-0.6055, device='cuda:1')
final loss: -0.616543710231781
Test:
Test: 0.8711225997045791
0.8711225997045791
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.27it/s]100%|██████████| 1/1 [00:00<00:00,  2.13it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1: -0.6230250597000122
Mem used: -1522MB
best_loss: tensor(-0.6140, device='cuda:1')
final loss: -0.6225937008857727
Test:
Test: 0.8641063515509602
0.8641063515509602
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.21it/s]100%|██████████| 1/1 [00:00<00:00,  3.21it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1: -0.6422785520553589
Mem used: 142MB
best_loss: tensor(-0.6396, device='cuda:1')
final loss: -0.6526389718055725
Test:
Test: 0.8810930576070901
0.8810930576070901
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.74it/s]100%|██████████| 1/1 [00:00<00:00,  2.74it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1: -0.5700475573539734
Mem used: 142MB
best_loss: tensor(-0.5682, device='cuda:1')
final loss: -0.5678337812423706
Test:
Test: 0.879615952732644
0.879615952732644
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.21it/s]100%|██████████| 1/1 [00:00<00:00,  2.21it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1: -0.5998179316520691
Mem used: 142MB
best_loss: tensor(-0.6084, device='cuda:1')
final loss: -0.5998061299324036
Test:
Test: 0.9320531757754801
0.9320531757754801
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.98it/s]100%|██████████| 1/1 [00:00<00:00,  1.93it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1: -0.5883730053901672
Mem used: 320MB
best_loss: tensor(-0.5986, device='cuda:1')
final loss: -0.5890340209007263
Test:
Test: 0.9231905465288035
0.9231905465288035
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.41it/s]100%|██████████| 1/1 [00:00<00:00,  3.40it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1: -0.6204400062561035
Mem used: 284MB
best_loss: tensor(-0.6355, device='cuda:1')
final loss: -0.6288245320320129
Test:
Test: 0.8862629246676514
0.8862629246676514
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.24it/s]100%|██████████| 1/1 [00:00<00:00,  2.24it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1: -0.6252853870391846
Mem used: 142MB
best_loss: tensor(-0.6209, device='cuda:1')
final loss: -0.622058629989624
Test:
Test: 0.9320531757754801
0.9320531757754801
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.62it/s]100%|██████████| 1/1 [00:00<00:00,  2.62it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1: -0.5779958963394165
Mem used: 142MB
best_loss: tensor(-0.5831, device='cuda:1')
final loss: -0.5712790489196777
Test:
Test: 0.8870014771048744
0.8870014771048744
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.95it/s]100%|██████████| 1/1 [00:00<00:00,  2.95it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1: -0.5973249077796936
Mem used: 142MB
best_loss: tensor(-0.5899, device='cuda:1')
final loss: -0.5862894654273987
Test:
Test: 0.9316838995568686
0.9316838995568686
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.61it/s]100%|██████████| 1/1 [00:00<00:00,  2.61it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1: -0.6116454005241394
Mem used: 142MB
best_loss: tensor(-0.6017, device='cuda:1')
best_loss: tensor(-0.6018, device='cuda:1')
final loss: -0.6097202897071838
Test:
Test: 0.8785081240768094
0.8785081240768094
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.23it/s]100%|██████████| 1/1 [00:00<00:00,  2.21it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1: -0.6230250597000122
Mem used: 697MB
best_loss: tensor(-0.6093, device='cuda:1')
best_loss: tensor(-0.6095, device='cuda:1')
final loss: -0.617489218711853
Test:
Test: 0.8770310192023634
0.8770310192023634
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.58it/s]100%|██████████| 1/1 [00:00<00:00,  2.58it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1: -0.6422785520553589
Mem used: 278MB
best_loss: tensor(-0.6348, device='cuda:1')
final loss: -0.6492644548416138
Test:
Test: 0.8892171344165436
0.8892171344165436
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.19it/s]100%|██████████| 2/2 [00:00<00:00,  2.39it/s]100%|██████████| 2/2 [00:00<00:00,  2.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1, Loop Feat 0: -0.5702856779098511
Epoch 1, Loop Adj 0: -0.5689419507980347
Epoch 2: -0.5689419507980347
Mem used: 142MB
best_loss: tensor(-0.5726, device='cuda:1')
final loss: -0.5718435049057007
Test:
Test: 0.8807237813884786
0.8807237813884786
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.93it/s]100%|██████████| 2/2 [00:00<00:00,  3.81it/s]100%|██████████| 2/2 [00:00<00:00,  3.83it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1, Loop Feat 0: -0.6065167188644409
Epoch 1, Loop Adj 0: -0.6056100726127625
Epoch 2: -0.6056100726127625
Mem used: 142MB
best_loss: tensor(-0.6125, device='cuda:1')
final loss: -0.6046878695487976
Test:
Test: 0.9283604135893648
0.9283604135893648
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.47it/s]100%|██████████| 2/2 [00:00<00:00,  2.60it/s]100%|██████████| 2/2 [00:00<00:00,  2.55it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1, Loop Feat 0: -0.5844175219535828
Epoch 1, Loop Adj 0: -0.5815730690956116
Epoch 2: -0.5815730690956116
Mem used: -365MB
best_loss: tensor(-0.6013, device='cuda:1')
final loss: -0.592146098613739
Test:
Test: 0.920605612998523
0.920605612998523
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.38it/s]100%|██████████| 2/2 [00:00<00:00,  2.20it/s]100%|██████████| 2/2 [00:00<00:00,  2.22it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1, Loop Feat 0: -0.624207079410553
Epoch 1, Loop Adj 0: -0.6280729174613953
Epoch 2: -0.6280729174613953
Mem used: 502MB
best_loss: tensor(-0.6386, device='cuda:1')
final loss: -0.6329431533813477
Test:
Test: 0.8870014771048744
0.8870014771048744
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.08it/s]100%|██████████| 2/2 [00:01<00:00,  1.65it/s]100%|██████████| 2/2 [00:01<00:00,  1.70it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1, Loop Feat 0: -0.6200342178344727
Epoch 1, Loop Adj 0: -0.6248173117637634
Epoch 2: -0.6248173117637634
Mem used: 594MB
best_loss: tensor(-0.6236, device='cuda:1')
final loss: -0.6252883672714233
Test:
Test: 0.9287296898079763
0.9287296898079763
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.46it/s]100%|██████████| 2/2 [00:00<00:00,  2.86it/s]100%|██████████| 2/2 [00:00<00:00,  2.79it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1, Loop Feat 0: -0.581188976764679
Epoch 1, Loop Adj 0: -0.58426833152771
Epoch 2: -0.58426833152771
Mem used: 248MB
best_loss: tensor(-0.5867, device='cuda:1')
final loss: -0.5751628875732422
Test:
Test: 0.888109305760709
0.888109305760709
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.00it/s]100%|██████████| 2/2 [00:00<00:00,  2.05it/s]100%|██████████| 2/2 [00:00<00:00,  2.04it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1, Loop Feat 0: -0.586596667766571
Epoch 1, Loop Adj 0: -0.5833938121795654
Epoch 2: -0.5833938121795654
Mem used: 142MB
best_loss: tensor(-0.5932, device='cuda:1')
final loss: -0.5890519618988037
Test:
Test: 0.9287296898079763
0.9287296898079763
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.22it/s]100%|██████████| 2/2 [00:00<00:00,  2.53it/s]100%|██████████| 2/2 [00:00<00:00,  2.44it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5979332327842712
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1, Loop Feat 0: -0.6176225543022156
Epoch 1, Loop Adj 0: -0.6028424501419067
Epoch 2: -0.6028424501419067
Mem used: 142MB
best_loss: tensor(-0.6053, device='cuda:1')
final loss: -0.6152294874191284
Test:
Test: 0.8785081240768094
0.8785081240768094
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.90it/s]100%|██████████| 2/2 [00:00<00:00,  2.02it/s]100%|██████████| 2/2 [00:00<00:00,  2.00it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1, Loop Feat 0: -0.6205360293388367
Epoch 1, Loop Adj 0: -0.6215329170227051
Epoch 2: -0.6215329170227051
Mem used: 142MB
best_loss: tensor(-0.6132, device='cuda:1')
final loss: -0.6219960451126099
Test:
Test: 0.8748153618906942
0.8748153618906942
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.00it/s]100%|██████████| 2/2 [00:00<00:00,  2.48it/s]100%|██████████| 2/2 [00:00<00:00,  2.39it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1, Loop Feat 0: -0.6367916464805603
Epoch 1, Loop Adj 0: -0.6424490809440613
Epoch 2: -0.6424490809440613
Mem used: 430MB
best_loss: tensor(-0.6367, device='cuda:1')
best_loss: tensor(-0.6372, device='cuda:1')
final loss: -0.6505553722381592
Test:
Test: 0.8925406203840472
0.8925406203840472
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.69it/s]100%|██████████| 2/2 [00:00<00:00,  3.24it/s]100%|██████████| 2/2 [00:00<00:00,  3.15it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1, Loop Feat 0: -0.5717233419418335
Epoch 1, Loop Adj 0: -0.5704184770584106
Epoch 2: -0.5704184770584106
Mem used: 328MB
best_loss: tensor(-0.5776, device='cuda:1')
final loss: -0.5766875743865967
Test:
Test: 0.870384047267356
0.870384047267356
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.38it/s]100%|██████████| 2/2 [00:00<00:00,  2.00it/s]100%|██████████| 2/2 [00:00<00:00,  2.05it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1, Loop Feat 0: -0.6075732707977295
Epoch 1, Loop Adj 0: -0.6067970991134644
Epoch 2: -0.6067970991134644
Mem used: 362MB
best_loss: tensor(-0.6167, device='cuda:1')
final loss: -0.6077254414558411
Test:
Test: 0.9224519940915805
0.9224519940915805
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.30it/s]100%|██████████| 2/2 [00:00<00:00,  2.48it/s]100%|██████████| 2/2 [00:00<00:00,  2.44it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1, Loop Feat 0: -0.5857295989990234
Epoch 1, Loop Adj 0: -0.5827183127403259
Epoch 2: -0.5827183127403259
Mem used: 448MB
best_loss: tensor(-0.6066, device='cuda:1')
final loss: -0.5978081822395325
Test:
Test: 0.9106351550960118
0.9106351550960118
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.20it/s]100%|██████████| 2/2 [00:00<00:00,  2.58it/s]100%|██████████| 2/2 [00:00<00:00,  2.51it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1, Loop Feat 0: -0.625532329082489
Epoch 1, Loop Adj 0: -0.6292509436607361
Epoch 2: -0.6292509436607361
Mem used: 142MB
best_loss: tensor(-0.6405, device='cuda:1')
final loss: -0.6353452801704407
Test:
Test: 0.8877400295420975
0.8877400295420975
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.58it/s]100%|██████████| 2/2 [00:00<00:00,  2.59it/s]100%|██████████| 2/2 [00:00<00:00,  2.37it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1, Loop Feat 0: -0.6210227608680725
Epoch 1, Loop Adj 0: -0.6258410215377808
Epoch 2: -0.6258410215377808
Mem used: 342MB
best_loss: tensor(-0.6284, device='cuda:1')
final loss: -0.6301069855690002
Test:
Test: 0.9202363367799113
0.9202363367799113
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.71it/s]100%|██████████| 2/2 [00:00<00:00,  2.06it/s]100%|██████████| 2/2 [00:00<00:00,  2.13it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1, Loop Feat 0: -0.582756757736206
Epoch 1, Loop Adj 0: -0.5856486558914185
Epoch 2: -0.5856486558914185
Mem used: 364MB
best_loss: tensor(-0.5914, device='cuda:1')
final loss: -0.5803556442260742
Test:
Test: 0.8748153618906942
0.8748153618906942
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.38it/s]100%|██████████| 2/2 [00:00<00:00,  2.98it/s]100%|██████████| 2/2 [00:00<00:00,  2.87it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1, Loop Feat 0: -0.5878859162330627
Epoch 1, Loop Adj 0: -0.5848305821418762
Epoch 2: -0.5848305821418762
Mem used: 1082MB
best_loss: tensor(-0.5970, device='cuda:1')
final loss: -0.5936479568481445
Test:
Test: 0.9154357459379616
0.9154357459379616
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.14it/s]100%|██████████| 2/2 [00:00<00:00,  2.73it/s]100%|██████████| 2/2 [00:00<00:00,  2.77it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1, Loop Feat 0: -0.6188092827796936
Epoch 1, Loop Adj 0: -0.6041538715362549
Epoch 2: -0.6041538715362549
Mem used: 142MB
best_loss: tensor(-0.6100, device='cuda:1')
final loss: -0.6181878447532654
Test:
Test: 0.8722304283604135
0.8722304283604135
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.40it/s]100%|██████████| 2/2 [00:01<00:00,  1.86it/s]100%|██████████| 2/2 [00:01<00:00,  1.77it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1, Loop Feat 0: -0.6216309666633606
Epoch 1, Loop Adj 0: -0.6226576566696167
Epoch 2: -0.6226576566696167
Mem used: 142MB
best_loss: tensor(-0.6167, device='cuda:1')
final loss: -0.6252577304840088
Test:
Test: 0.8725997045790251
0.8725997045790251
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.21it/s]100%|██████████| 2/2 [00:00<00:00,  2.18it/s]100%|██████████| 2/2 [00:00<00:00,  2.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1, Loop Feat 0: -0.6377726197242737
Epoch 1, Loop Adj 0: -0.6436741352081299
Epoch 2: -0.6436741352081299
Mem used: -1782MB
best_loss: tensor(-0.6411, device='cuda:1')
final loss: -0.654956042766571
Test:
Test: 0.888109305760709
0.888109305760709
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.75it/s]100%|██████████| 2/2 [00:00<00:00,  2.55it/s]100%|██████████| 2/2 [00:00<00:00,  2.56it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1, Loop Feat 0: -0.5699755549430847
Epoch 1, Loop Adj 0: -0.5686197280883789
Epoch 2: -0.5686197280883789
Mem used: 640MB
best_loss: tensor(-0.5704, device='cuda:1')
final loss: -0.5696504712104797
Test:
Test: 0.8825701624815362
0.8825701624815362
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.74it/s]100%|██████████| 2/2 [00:00<00:00,  2.81it/s]100%|██████████| 2/2 [00:00<00:00,  2.80it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1, Loop Feat 0: -0.606284499168396
Epoch 1, Loop Adj 0: -0.6053460240364075
Epoch 2: -0.6053460240364075
Mem used: 362MB
best_loss: tensor(-0.6107, device='cuda:1')
final loss: -0.600770890712738
Test:
Test: 0.9331610044313147
0.9331610044313147
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.32it/s]100%|██████████| 2/2 [00:00<00:00,  2.25it/s]100%|██████████| 2/2 [00:00<00:00,  2.26it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1, Loop Feat 0: -0.5841273069381714
Epoch 1, Loop Adj 0: -0.581319272518158
Epoch 2: -0.581319272518158
Mem used: 346MB
best_loss: tensor(-0.6004, device='cuda:1')
final loss: -0.5908799767494202
Test:
Test: 0.9235598227474151
0.9235598227474151
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.10it/s]100%|██████████| 2/2 [00:00<00:00,  2.19it/s]100%|██████████| 2/2 [00:00<00:00,  2.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1, Loop Feat 0: -0.6239068508148193
Epoch 1, Loop Adj 0: -0.6277995109558105
Epoch 2: -0.6277995109558105
Mem used: 424MB
best_loss: tensor(-0.6374, device='cuda:1')
best_loss: tensor(-0.6375, device='cuda:1')
final loss: -0.631401002407074
Test:
Test: 0.8888478581979321
0.8888478581979321
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.45it/s]100%|██████████| 2/2 [00:00<00:00,  3.25it/s]100%|██████████| 2/2 [00:00<00:00,  3.28it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1, Loop Feat 0: -0.6197934150695801
Epoch 1, Loop Adj 0: -0.6245703101158142
Epoch 2: -0.6245703101158142
Mem used: 142MB
best_loss: tensor(-0.6227, device='cuda:1')
final loss: -0.6235286593437195
Test:
Test: 0.9324224519940916
0.9324224519940916
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.24it/s]100%|██████████| 2/2 [00:00<00:00,  2.56it/s]100%|██████████| 2/2 [00:00<00:00,  2.50it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1, Loop Feat 0: -0.5808529853820801
Epoch 1, Loop Adj 0: -0.5839702486991882
Epoch 2: -0.5839702486991882
Mem used: 142MB
best_loss: tensor(-0.5851, device='cuda:1')
best_loss: tensor(-0.5852, device='cuda:1')
final loss: -0.5740069150924683
Test:
Test: 0.8895864106351551
0.8895864106351551
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.59it/s]100%|██████████| 2/2 [00:00<00:00,  4.07it/s]100%|██████████| 2/2 [00:00<00:00,  3.99it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1, Loop Feat 0: -0.5863139033317566
Epoch 1, Loop Adj 0: -0.583076000213623
Epoch 2: -0.583076000213623
Mem used: 142MB
best_loss: tensor(-0.5920, device='cuda:1')
final loss: -0.5890137553215027
Test:
Test: 0.9338995568685377
0.9338995568685377
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.88it/s]100%|██████████| 2/2 [00:00<00:00,  3.24it/s]100%|██████████| 2/2 [00:00<00:00,  3.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1, Loop Feat 0: -0.6173420548439026
Epoch 1, Loop Adj 0: -0.6025464534759521
Epoch 2: -0.6025464534759521
Mem used: -1325MB
best_loss: tensor(-0.6042, device='cuda:1')
best_loss: tensor(-0.6042, device='cuda:1')
final loss: -0.6133396625518799
Test:
Test: 0.8788774002954209
0.8788774002954209
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.07it/s]100%|██████████| 2/2 [00:00<00:00,  2.99it/s]100%|██████████| 2/2 [00:00<00:00,  2.80it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1, Loop Feat 0: -0.6202941536903381
Epoch 1, Loop Adj 0: -0.6212877035140991
Epoch 2: -0.6212877035140991
Mem used: 154MB
best_loss: tensor(-0.6120, device='cuda:1')
final loss: -0.6192546486854553
Test:
Test: 0.8777695716395865
0.8777695716395865
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.91it/s]100%|██████████| 2/2 [00:00<00:00,  3.06it/s]100%|██████████| 2/2 [00:00<00:00,  3.03it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1, Loop Feat 0: -0.6365764737129211
Epoch 1, Loop Adj 0: -0.6421685814857483
Epoch 2: -0.6421685814857483
Mem used: 142MB
best_loss: tensor(-0.6367, device='cuda:1')
best_loss: tensor(-0.6368, device='cuda:1')
final loss: -0.6514075994491577
Test:
Test: 0.8910635155096012
0.8910635155096012
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.95it/s]100%|██████████| 1/1 [00:00<00:00,  2.91it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1: -0.5700475573539734
Mem used: 142MB
best_loss: tensor(-0.5692, device='cuda:1')
final loss: -0.5701602101325989
Test:
Test: 0.8777695716395865
0.8777695716395865
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.08it/s]100%|██████████| 1/1 [00:00<00:00,  3.06it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1: -0.5998179316520691
Mem used: 142MB
best_loss: tensor(-0.6096, device='cuda:1')
final loss: -0.6001166105270386
Test:
Test: 0.9272525849335302
0.9272525849335302
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.86it/s]100%|██████████| 1/1 [00:00<00:00,  2.85it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1: -0.5883730053901672
Mem used: 294MB
best_loss: tensor(-0.5993, device='cuda:1')
final loss: -0.5905247926712036
Test:
Test: 0.920605612998523
0.920605612998523
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.92it/s]100%|██████████| 1/1 [00:00<00:00,  2.92it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1: -0.6204400062561035
Mem used: 452MB
best_loss: tensor(-0.6367, device='cuda:1')
final loss: -0.6314966082572937
Test:
Test: 0.8862629246676514
0.8862629246676514
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.18it/s]100%|██████████| 1/1 [00:00<00:00,  2.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1: -0.6252853870391846
Mem used: 238MB
best_loss: tensor(-0.6218, device='cuda:1')
final loss: -0.621247410774231
Test:
Test: 0.9287296898079763
0.9287296898079763
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.47it/s]100%|██████████| 1/1 [00:00<00:00,  2.47it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1: -0.5779958963394165
Mem used: 142MB
best_loss: tensor(-0.5837, device='cuda:1')
final loss: -0.5713608264923096
Test:
Test: 0.8810930576070901
0.8810930576070901
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.16it/s]100%|██████████| 1/1 [00:00<00:00,  2.10it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1: -0.5973249077796936
Mem used: 142MB
best_loss: tensor(-0.5914, device='cuda:1')
final loss: -0.5867443084716797
Test:
Test: 0.9279911373707533
0.9279911373707533
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.72it/s]100%|██████████| 1/1 [00:00<00:00,  2.71it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1: -0.6116454005241394
Mem used: 252MB
best_loss: tensor(-0.6023, device='cuda:1')
final loss: -0.6114569306373596
Test:
Test: 0.8737075332348597
0.8737075332348597
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.50it/s]100%|██████████| 1/1 [00:00<00:00,  2.50it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1: -0.6230250597000122
Mem used: 340MB
best_loss: tensor(-0.6105, device='cuda:1')
final loss: -0.6192219257354736
Test:
Test: 0.8737075332348597
0.8737075332348597
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.33it/s]100%|██████████| 1/1 [00:00<00:00,  2.33it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1: -0.6422785520553589
Mem used: 520MB
best_loss: tensor(-0.6358, device='cuda:1')
final loss: -0.6496391892433167
Test:
Test: 0.8895864106351551
0.8895864106351551
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.47it/s]100%|██████████| 1/1 [00:00<00:00,  3.46it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1: -0.5700475573539734
Mem used: 246MB
best_loss: tensor(-0.5750, device='cuda:1')
final loss: -0.5740842223167419
Test:
Test: 0.8674298375184638
0.8674298375184638
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.41it/s]100%|██████████| 1/1 [00:00<00:00,  2.39it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1: -0.5998179316520691
Mem used: 142MB
best_loss: tensor(-0.6146, device='cuda:1')
final loss: -0.6036352515220642
Test:
Test: 0.9191285081240768
0.9191285081240768
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.94it/s]100%|██████████| 1/1 [00:00<00:00,  1.94it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1: -0.5883730053901672
Mem used: 142MB
best_loss: tensor(-0.6023, device='cuda:1')
final loss: -0.5936775803565979
Test:
Test: 0.9132200886262924
0.9132200886262924
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.28it/s]100%|██████████| 1/1 [00:00<00:00,  2.28it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1: -0.6204400062561035
Mem used: 142MB
best_loss: tensor(-0.6390, device='cuda:1')
final loss: -0.6331160664558411
Test:
Test: 0.8836779911373708
0.8836779911373708
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.99it/s]100%|██████████| 1/1 [00:00<00:00,  2.94it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1: -0.6252853870391846
Mem used: 260MB
best_loss: tensor(-0.6254, device='cuda:1')
final loss: -0.6247382164001465
Test:
Test: 0.920605612998523
0.920605612998523
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.61it/s]100%|██████████| 1/1 [00:00<00:00,  2.60it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1: -0.5779958963394165
Mem used: 390MB
best_loss: tensor(-0.5888, device='cuda:1')
final loss: -0.5780509114265442
Test:
Test: 0.8722304283604135
0.8722304283604135
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.38it/s]100%|██████████| 1/1 [00:00<00:00,  2.38it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1: -0.5973249077796936
Mem used: 142MB
best_loss: tensor(-0.5958, device='cuda:1')
final loss: -0.5906468629837036
Test:
Test: 0.9124815361890695
0.9124815361890695
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.42it/s]100%|██████████| 1/1 [00:00<00:00,  3.42it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5979332327842712
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1: -0.6116454005241394
Mem used: 142MB
best_loss: tensor(-0.6055, device='cuda:1')
final loss: -0.6145079731941223
Test:
Test: 0.8711225997045791
0.8711225997045791
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.19it/s]100%|██████████| 1/1 [00:00<00:00,  2.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1: -0.6230250597000122
Mem used: -1609MB
best_loss: tensor(-0.6140, device='cuda:1')
final loss: -0.6225937008857727
Test:
Test: 0.8641063515509602
0.8641063515509602
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.37it/s]100%|██████████| 1/1 [00:00<00:00,  2.37it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1: -0.6422785520553589
Mem used: 142MB
best_loss: tensor(-0.6396, device='cuda:1')
final loss: -0.6526389718055725
Test:
Test: 0.8810930576070901
0.8810930576070901
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.61it/s]100%|██████████| 1/1 [00:00<00:00,  2.61it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1: -0.5700475573539734
Mem used: 290MB
best_loss: tensor(-0.5682, device='cuda:1')
final loss: -0.5675164461135864
Test:
Test: 0.879615952732644
0.879615952732644
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.97it/s]100%|██████████| 1/1 [00:00<00:00,  1.97it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1: -0.5998179316520691
Mem used: 244MB
best_loss: tensor(-0.6084, device='cuda:1')
best_loss: tensor(-0.6084, device='cuda:1')
final loss: -0.5984917283058167
Test:
Test: 0.9327917282127031
0.9327917282127031
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.94it/s]100%|██████████| 1/1 [00:00<00:00,  2.83it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1: -0.5883730053901672
Mem used: -1522MB
best_loss: tensor(-0.5986, device='cuda:1')
final loss: -0.5890340209007263
Test:
Test: 0.9231905465288035
0.9231905465288035
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.88it/s]100%|██████████| 1/1 [00:00<00:00,  2.87it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1: -0.6204400062561035
Mem used: 142MB
best_loss: tensor(-0.6355, device='cuda:1')
final loss: -0.6288245320320129
Test:
Test: 0.8862629246676514
0.8862629246676514
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.84it/s]100%|██████████| 1/1 [00:00<00:00,  2.84it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1: -0.6252853870391846
Mem used: 336MB
best_loss: tensor(-0.6209, device='cuda:1')
final loss: -0.622058629989624
Test:
Test: 0.9320531757754801
0.9320531757754801
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.23it/s]100%|██████████| 1/1 [00:00<00:00,  2.23it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1: -0.5779958963394165
Mem used: 386MB
best_loss: tensor(-0.5831, device='cuda:1')
final loss: -0.5712790489196777
Test:
Test: 0.8870014771048744
0.8870014771048744
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.55it/s]100%|██████████| 1/1 [00:00<00:00,  2.55it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1: -0.5973249077796936
Mem used: 286MB
best_loss: tensor(-0.5899, device='cuda:1')
final loss: -0.5862894654273987
Test:
Test: 0.9316838995568686
0.9316838995568686
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.57it/s]100%|██████████| 1/1 [00:00<00:00,  2.57it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1: -0.6116454005241394
Mem used: 142MB
best_loss: tensor(-0.6017, device='cuda:1')
best_loss: tensor(-0.6018, device='cuda:1')
final loss: -0.6097202897071838
Test:
Test: 0.8785081240768094
0.8785081240768094
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.73it/s]100%|██████████| 1/1 [00:00<00:00,  2.73it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1: -0.6230250597000122
Mem used: 142MB
best_loss: tensor(-0.6093, device='cuda:1')
best_loss: tensor(-0.6095, device='cuda:1')
final loss: -0.617489218711853
Test:
Test: 0.8770310192023634
0.8770310192023634
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.74it/s]100%|██████████| 1/1 [00:00<00:00,  2.74it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1: -0.6422785520553589
Mem used: 142MB
best_loss: tensor(-0.6348, device='cuda:1')
final loss: -0.6492644548416138
Test:
Test: 0.8892171344165436
0.8892171344165436
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.65it/s]100%|██████████| 2/2 [00:00<00:00,  2.83it/s]100%|██████████| 2/2 [00:00<00:00,  2.80it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1, Loop Feat 0: -0.5701242089271545
Epoch 1, Loop Adj 0: -0.5687745213508606
Epoch 2: -0.5687745213508606
Mem used: 396MB
best_loss: tensor(-0.5726, device='cuda:1')
final loss: -0.5724272727966309
Test:
Test: 0.8814623338257016
0.8814623338257016
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.90it/s]100%|██████████| 2/2 [00:00<00:00,  3.11it/s]100%|██████████| 2/2 [00:00<00:00,  3.08it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1, Loop Feat 0: -0.6064004898071289
Epoch 1, Loop Adj 0: -0.6054795384407043
Epoch 2: -0.6054795384407043
Mem used: 296MB
best_loss: tensor(-0.6124, device='cuda:1')
final loss: -0.6018583178520203
Test:
Test: 0.9290989660265879
0.9290989660265879
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.78it/s]100%|██████████| 2/2 [00:00<00:00,  2.94it/s]100%|██████████| 2/2 [00:00<00:00,  2.91it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1, Loop Feat 0: -0.5842685699462891
Epoch 1, Loop Adj 0: -0.5814405083656311
Epoch 2: -0.5814405083656311
Mem used: 142MB
best_loss: tensor(-0.6013, device='cuda:1')
final loss: -0.5928951501846313
Test:
Test: 0.920605612998523
0.920605612998523
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.60it/s]100%|██████████| 2/2 [00:00<00:00,  2.82it/s]100%|██████████| 2/2 [00:00<00:00,  2.79it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1, Loop Feat 0: -0.6240484714508057
Epoch 1, Loop Adj 0: -0.6279278993606567
Epoch 2: -0.6279278993606567
Mem used: 142MB
best_loss: tensor(-0.6389, device='cuda:1')
final loss: -0.633625328540802
Test:
Test: 0.8877400295420975
0.8877400295420975
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.87it/s]100%|██████████| 2/2 [00:00<00:00,  2.92it/s]100%|██████████| 2/2 [00:00<00:00,  2.89it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1, Loop Feat 0: -0.6199045777320862
Epoch 1, Loop Adj 0: -0.6246808767318726
Epoch 2: -0.6246808767318726
Mem used: 142MB
best_loss: tensor(-0.6237, device='cuda:1')
final loss: -0.6252350211143494
Test:
Test: 0.9287296898079763
0.9287296898079763
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.02it/s]100%|██████████| 2/2 [00:00<00:00,  2.97it/s]100%|██████████| 2/2 [00:00<00:00,  2.98it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1, Loop Feat 0: -0.5810149908065796
Epoch 1, Loop Adj 0: -0.584112823009491
Epoch 2: -0.584112823009491
Mem used: 142MB
best_loss: tensor(-0.5867, device='cuda:1')
final loss: -0.5751630067825317
Test:
Test: 0.888109305760709
0.888109305760709
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.93it/s]100%|██████████| 2/2 [00:00<00:00,  2.76it/s]100%|██████████| 2/2 [00:00<00:00,  2.79it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1, Loop Feat 0: -0.5864511132240295
Epoch 1, Loop Adj 0: -0.5832290053367615
Epoch 2: -0.5832290053367615
Mem used: 110MB
best_loss: tensor(-0.5932, device='cuda:1')
final loss: -0.5888363122940063
Test:
Test: 0.9287296898079763
0.9287296898079763
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.91it/s]100%|██████████| 2/2 [00:00<00:00,  2.78it/s]100%|██████████| 2/2 [00:00<00:00,  2.80it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1, Loop Feat 0: -0.617479145526886
Epoch 1, Loop Adj 0: -0.6026896834373474
Epoch 2: -0.6026896834373474
Mem used: 316MB
best_loss: tensor(-0.6053, device='cuda:1')
final loss: -0.6145130395889282
Test:
Test: 0.8788774002954209
0.8788774002954209
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.75it/s]100%|██████████| 2/2 [00:00<00:00,  2.59it/s]100%|██████████| 2/2 [00:00<00:00,  2.62it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1, Loop Feat 0: -0.6204098463058472
Epoch 1, Loop Adj 0: -0.6214053630828857
Epoch 2: -0.6214053630828857
Mem used: 596MB
best_loss: tensor(-0.6133, device='cuda:1')
final loss: -0.6212735176086426
Test:
Test: 0.8755539143279173
0.8755539143279173
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.89it/s]100%|██████████| 2/2 [00:00<00:00,  2.44it/s]100%|██████████| 2/2 [00:00<00:00,  2.33it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1, Loop Feat 0: -0.636681854724884
Epoch 1, Loop Adj 0: -0.6423050165176392
Epoch 2: -0.6423050165176392
Mem used: 1544MB
best_loss: tensor(-0.6367, device='cuda:1')
best_loss: tensor(-0.6372, device='cuda:1')
final loss: -0.6495471000671387
Test:
Test: 0.8914327917282127
0.8914327917282127
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.47it/s]100%|██████████| 2/2 [00:00<00:00,  2.83it/s]100%|██████████| 2/2 [00:00<00:00,  2.77it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1, Loop Feat 0: -0.5701242089271545
Epoch 1, Loop Adj 0: -0.5687745213508606
Epoch 2: -0.5687745213508606
Mem used: 142MB
best_loss: tensor(-0.5762, device='cuda:1')
final loss: -0.5767849087715149
Test:
Test: 0.8733382570162481
0.8733382570162481
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.82it/s]100%|██████████| 2/2 [00:00<00:00,  3.75it/s]100%|██████████| 2/2 [00:00<00:00,  3.54it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1, Loop Feat 0: -0.6064004898071289
Epoch 1, Loop Adj 0: -0.6054795384407043
Epoch 2: -0.6054795384407043
Mem used: 142MB
best_loss: tensor(-0.6163, device='cuda:1')
final loss: -0.6081916093826294
Test:
Test: 0.922082717872969
0.922082717872969
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.66it/s]100%|██████████| 2/2 [00:01<00:00,  1.76it/s]100%|██████████| 2/2 [00:01<00:00,  1.85it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1, Loop Feat 0: -0.5842685699462891
Epoch 1, Loop Adj 0: -0.5814405083656311
Epoch 2: -0.5814405083656311
Mem used: 652MB
best_loss: tensor(-0.6062, device='cuda:1')
final loss: -0.5959075093269348
Test:
Test: 0.9091580502215657
0.9091580502215657
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.04it/s]100%|██████████| 2/2 [00:00<00:00,  3.62it/s]100%|██████████| 2/2 [00:00<00:00,  3.51it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1, Loop Feat 0: -0.6240484714508057
Epoch 1, Loop Adj 0: -0.6279278993606567
Epoch 2: -0.6279278993606567
Mem used: 142MB
best_loss: tensor(-0.6408, device='cuda:1')
final loss: -0.6356493234634399
Test:
Test: 0.8877400295420975
0.8877400295420975
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  4.54it/s]100%|██████████| 2/2 [00:00<00:00,  3.32it/s]100%|██████████| 2/2 [00:00<00:00,  3.45it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1, Loop Feat 0: -0.6199045777320862
Epoch 1, Loop Adj 0: -0.6246808171272278
Epoch 2: -0.6246808171272278
Mem used: 358MB
best_loss: tensor(-0.6271, device='cuda:1')
final loss: -0.631653904914856
Test:
Test: 0.920605612998523
0.920605612998523
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.39it/s]100%|██████████| 2/2 [00:00<00:00,  3.35it/s]100%|██████████| 2/2 [00:00<00:00,  3.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1, Loop Feat 0: -0.5810149908065796
Epoch 1, Loop Adj 0: -0.584112823009491
Epoch 2: -0.584112823009491
Mem used: 142MB
best_loss: tensor(-0.5913, device='cuda:1')
final loss: -0.5804877281188965
Test:
Test: 0.8748153618906942
0.8748153618906942
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.92it/s]100%|██████████| 2/2 [00:00<00:00,  2.70it/s]100%|██████████| 2/2 [00:00<00:00,  2.73it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1, Loop Feat 0: -0.5864511132240295
Epoch 1, Loop Adj 0: -0.5832290053367615
Epoch 2: -0.5832290053367615
Mem used: -1522MB
best_loss: tensor(-0.5977, device='cuda:1')
final loss: -0.5929387211799622
Test:
Test: 0.9187592319054653
0.9187592319054653
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.49it/s]100%|██████████| 2/2 [00:00<00:00,  3.31it/s]100%|██████████| 2/2 [00:00<00:00,  3.33it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1, Loop Feat 0: -0.617479145526886
Epoch 1, Loop Adj 0: -0.6026896834373474
Epoch 2: -0.6026896834373474
Mem used: 142MB
best_loss: tensor(-0.6097, device='cuda:1')
final loss: -0.6187551021575928
Test:
Test: 0.8748153618906942
0.8748153618906942
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.61it/s]100%|██████████| 2/2 [00:00<00:00,  3.06it/s]100%|██████████| 2/2 [00:00<00:00,  2.98it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1, Loop Feat 0: -0.6204098463058472
Epoch 1, Loop Adj 0: -0.6214053630828857
Epoch 2: -0.6214053630828857
Mem used: 142MB
best_loss: tensor(-0.6163, device='cuda:1')
final loss: -0.6264930367469788
Test:
Test: 0.8762924667651403
0.8762924667651403
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.32it/s]100%|██████████| 2/2 [00:00<00:00,  2.48it/s]100%|██████████| 2/2 [00:00<00:00,  2.45it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1, Loop Feat 0: -0.6366817951202393
Epoch 1, Loop Adj 0: -0.6423050165176392
Epoch 2: -0.6423050165176392
Mem used: 706MB
best_loss: tensor(-0.6412, device='cuda:1')
final loss: -0.6551170945167542
Test:
Test: 0.8892171344165436
0.8892171344165436
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.31it/s]100%|██████████| 2/2 [00:00<00:00,  3.63it/s]100%|██████████| 2/2 [00:00<00:00,  3.58it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5700475573539734
Epoch 1, Loop Feat 0: -0.5699747204780579
Epoch 1, Loop Adj 0: -0.568619430065155
Epoch 2: -0.568619430065155
Mem used: 276MB
best_loss: tensor(-0.5704, device='cuda:1')
final loss: -0.5705200433731079
Test:
Test: 0.8825701624815362
0.8825701624815362
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.83it/s]100%|██████████| 2/2 [00:00<00:00,  2.90it/s]100%|██████████| 2/2 [00:00<00:00,  2.89it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5998179316520691
Epoch 1, Loop Feat 0: -0.6062839031219482
Epoch 1, Loop Adj 0: -0.6053456664085388
Epoch 2: -0.6053456664085388
Mem used: 142MB
best_loss: tensor(-0.6107, device='cuda:1')
final loss: -0.6007707715034485
Test:
Test: 0.9331610044313147
0.9331610044313147
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.87it/s]100%|██████████| 2/2 [00:00<00:00,  2.80it/s]100%|██████████| 2/2 [00:00<00:00,  2.81it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5883730053901672
Epoch 1, Loop Feat 0: -0.5841264128684998
Epoch 1, Loop Adj 0: -0.5813190340995789
Epoch 2: -0.5813190340995789
Mem used: 328MB
best_loss: tensor(-0.6004, device='cuda:1')
final loss: -0.5908800363540649
Test:
Test: 0.9235598227474151
0.9235598227474151
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.16it/s]100%|██████████| 2/2 [00:00<00:00,  2.24it/s]100%|██████████| 2/2 [00:00<00:00,  2.22it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6204400062561035
Epoch 1, Loop Feat 0: -0.6239062547683716
Epoch 1, Loop Adj 0: -0.6277984380722046
Epoch 2: -0.6277984380722046
Mem used: 142MB
best_loss: tensor(-0.6374, device='cuda:1')
best_loss: tensor(-0.6374, device='cuda:1')
final loss: -0.630842924118042
Test:
Test: 0.8888478581979321
0.8888478581979321
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.11it/s]100%|██████████| 2/2 [00:00<00:00,  2.74it/s]100%|██████████| 2/2 [00:00<00:00,  2.77it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6252853870391846
Epoch 1, Loop Feat 0: -0.6197926998138428
Epoch 1, Loop Adj 0: -0.6245695352554321
Epoch 2: -0.6245695352554321
Mem used: 142MB
best_loss: tensor(-0.6227, device='cuda:1')
final loss: -0.6235286593437195
Test:
Test: 0.9324224519940916
0.9324224519940916
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.06it/s]100%|██████████| 2/2 [00:00<00:00,  2.52it/s]100%|██████████| 2/2 [00:00<00:00,  2.44it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5779958963394165
Epoch 1, Loop Feat 0: -0.5808529257774353
Epoch 1, Loop Adj 0: -0.5839697122573853
Epoch 2: -0.5839697122573853
Mem used: 282MB
best_loss: tensor(-0.5851, device='cuda:1')
best_loss: tensor(-0.5852, device='cuda:1')
final loss: -0.574006974697113
Test:
Test: 0.8895864106351551
0.8895864106351551
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.09it/s]100%|██████████| 2/2 [00:00<00:00,  3.61it/s]100%|██████████| 2/2 [00:00<00:00,  3.52it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5973249077796936
Epoch 1, Loop Feat 0: -0.5863134860992432
Epoch 1, Loop Adj 0: -0.5830753445625305
Epoch 2: -0.5830753445625305
Mem used: 254MB
best_loss: tensor(-0.5920, device='cuda:1')
final loss: -0.5890137553215027
Test:
Test: 0.9338995568685377
0.9338995568685377
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.34it/s]100%|██████████| 2/2 [00:00<00:00,  2.55it/s]100%|██████████| 2/2 [00:00<00:00,  2.52it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6116454005241394
Epoch 1, Loop Feat 0: -0.617341160774231
Epoch 1, Loop Adj 0: -0.602545440196991
Epoch 2: -0.602545440196991
Mem used: 156MB
best_loss: tensor(-0.6042, device='cuda:1')
best_loss: tensor(-0.6042, device='cuda:1')
final loss: -0.6133396029472351
Test:
Test: 0.8788774002954209
0.8788774002954209
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.93it/s]100%|██████████| 2/2 [00:00<00:00,  3.55it/s]100%|██████████| 2/2 [00:00<00:00,  3.44it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6230250597000122
Epoch 1, Loop Feat 0: -0.6202939748764038
Epoch 1, Loop Adj 0: -0.62128746509552
Epoch 2: -0.62128746509552
Mem used: 142MB
best_loss: tensor(-0.6120, device='cuda:1')
final loss: -0.6192546486854553
Test:
Test: 0.8777695716395865
0.8777695716395865
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-05, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.44it/s]100%|██████████| 2/2 [00:00<00:00,  3.07it/s]100%|██████████| 2/2 [00:00<00:00,  2.95it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6422785520553589
Epoch 1, Loop Feat 0: -0.6365762948989868
Epoch 1, Loop Adj 0: -0.6421679854393005
Epoch 2: -0.6421679854393005
Mem used: -1522MB
best_loss: tensor(-0.6367, device='cuda:1')
best_loss: tensor(-0.6368, device='cuda:1')
final loss: -0.6514075994491577
Test:
Test: 0.8910635155096012
0.8910635155096012
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.85it/s]100%|██████████| 1/1 [00:00<00:00,  2.85it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1: -0.5682570338249207
Mem used: 142MB
best_loss: tensor(-0.5662, device='cuda:1')
final loss: -0.5671367645263672
Test:
Test: 0.8755539143279173
0.8755539143279173
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.27it/s]100%|██████████| 1/1 [00:00<00:00,  3.27it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1: -0.5982421636581421
Mem used: 142MB
best_loss: tensor(-0.6057, device='cuda:1')
final loss: -0.5970591306686401
Test:
Test: 0.9276218611521418
0.9276218611521418
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.02it/s]100%|██████████| 1/1 [00:00<00:00,  2.02it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1: -0.5870212316513062
Mem used: 342MB
best_loss: tensor(-0.5964, device='cuda:1')
final loss: -0.5882822275161743
Test:
Test: 0.9198670605612999
0.9198670605612999
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.38it/s]100%|██████████| 1/1 [00:00<00:00,  2.38it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1: -0.6189055442810059
Mem used: 326MB
best_loss: tensor(-0.6335, device='cuda:1')
final loss: -0.6269294619560242
Test:
Test: 0.8836779911373708
0.8836779911373708
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.21it/s]100%|██████████| 1/1 [00:00<00:00,  3.20it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1: -0.6241229176521301
Mem used: 142MB
best_loss: tensor(-0.6189, device='cuda:1')
final loss: -0.6190598607063293
Test:
Test: 0.9279911373707533
0.9279911373707533
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.97it/s]100%|██████████| 1/1 [00:00<00:00,  1.97it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1: -0.5762823820114136
Mem used: 142MB
best_loss: tensor(-0.5806, device='cuda:1')
final loss: -0.5700821876525879
Test:
Test: 0.8792466765140325
0.8792466765140325
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.38it/s]100%|██████████| 1/1 [00:00<00:00,  2.37it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1: -0.5957563519477844
Mem used: -1782MB
best_loss: tensor(-0.5883, device='cuda:1')
final loss: -0.5844340920448303
Test:
Test: 0.9250369276218612
0.9250369276218612
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.43it/s]100%|██████████| 1/1 [00:00<00:00,  2.42it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1: -0.6096894145011902
Mem used: 728MB
best_loss: tensor(-0.5989, device='cuda:1')
final loss: -0.608339786529541
Test:
Test: 0.8725997045790251
0.8725997045790251
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.21it/s]100%|██████████| 1/1 [00:00<00:00,  2.21it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1: -0.6212823987007141
Mem used: 262MB
best_loss: tensor(-0.6071, device='cuda:1')
final loss: -0.6166162490844727
Test:
Test: 0.8733382570162481
0.8733382570162481
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.24it/s]100%|██████████| 1/1 [00:00<00:00,  2.24it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1: -0.6408476829528809
Mem used: 404MB
best_loss: tensor(-0.6326, device='cuda:1')
final loss: -0.6480746865272522
Test:
Test: 0.888109305760709
0.888109305760709
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.83it/s]100%|██████████| 1/1 [00:00<00:00,  2.83it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1: -0.5682570338249207
Mem used: 142MB
best_loss: tensor(-0.5718, device='cuda:1')
final loss: -0.5713538527488708
Test:
Test: 0.8652141802067946
0.8652141802067946
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.30it/s]100%|██████████| 1/1 [00:00<00:00,  2.29it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1: -0.5982421636581421
Mem used: 142MB
best_loss: tensor(-0.6117, device='cuda:1')
final loss: -0.600871205329895
Test:
Test: 0.9183899556868538
0.9183899556868538
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.80it/s]100%|██████████| 1/1 [00:00<00:00,  2.69it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1: -0.5870212316513062
Mem used: 154MB
best_loss: tensor(-0.5994, device='cuda:1')
final loss: -0.5920045375823975
Test:
Test: 0.9132200886262924
0.9132200886262924
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.92it/s]100%|██████████| 1/1 [00:00<00:00,  1.92it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1: -0.6189055442810059
Mem used: 274MB
best_loss: tensor(-0.6360, device='cuda:1')
final loss: -0.6296520829200745
Test:
Test: 0.8829394387001477
0.8829394387001477
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.87it/s]100%|██████████| 1/1 [00:00<00:00,  1.87it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1: -0.6241229176521301
Mem used: 310MB
best_loss: tensor(-0.6227, device='cuda:1')
final loss: -0.6237719655036926
Test:
Test: 0.9194977843426884
0.9194977843426884
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.06it/s]100%|██████████| 1/1 [00:00<00:00,  3.06it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1: -0.5762823820114136
Mem used: 550MB
best_loss: tensor(-0.5859, device='cuda:1')
final loss: -0.5757750272750854
Test:
Test: 0.8700147710487445
0.8700147710487445
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.42it/s]100%|██████████| 1/1 [00:00<00:00,  3.41it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1: -0.5957563519477844
Mem used: 142MB
best_loss: tensor(-0.5927, device='cuda:1')
final loss: -0.5891019105911255
Test:
Test: 0.9117429837518464
0.9117429837518464
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.66it/s]100%|██████████| 1/1 [00:00<00:00,  2.66it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1: -0.6096894145011902
Mem used: -1782MB
best_loss: tensor(-0.6020, device='cuda:1')
final loss: -0.6137672066688538
Test:
Test: 0.870384047267356
0.870384047267356
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.51it/s]100%|██████████| 1/1 [00:00<00:00,  2.51it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1: -0.6212823987007141
Mem used: 142MB
best_loss: tensor(-0.6106, device='cuda:1')
final loss: -0.6201524138450623
Test:
Test: 0.8611521418020679
0.8611521418020679
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.45it/s]100%|██████████| 1/1 [00:00<00:00,  3.44it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1: -0.6408476829528809
Mem used: 368MB
best_loss: tensor(-0.6365, device='cuda:1')
final loss: -0.6507150530815125
Test:
Test: 0.878138847858198
0.878138847858198
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.82it/s]100%|██████████| 1/1 [00:00<00:00,  2.82it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1: -0.5682570338249207
Mem used: 142MB
best_loss: tensor(-0.5650, device='cuda:1')
final loss: -0.565075159072876
Test:
Test: 0.8774002954209749
0.8774002954209749
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.22it/s]100%|██████████| 1/1 [00:00<00:00,  3.22it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1: -0.5982421636581421
Mem used: 142MB
best_loss: tensor(-0.6051, device='cuda:1')
best_loss: tensor(-0.6053, device='cuda:1')
final loss: -0.5969857573509216
Test:
Test: 0.9327917282127031
0.9327917282127031
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.16it/s]100%|██████████| 1/1 [00:00<00:00,  3.16it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1: -0.5870212316513062
Mem used: 142MB
best_loss: tensor(-0.5957, device='cuda:1')
final loss: -0.5867615342140198
Test:
Test: 0.922821270310192
0.922821270310192
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.38it/s]100%|██████████| 1/1 [00:00<00:00,  2.38it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1: -0.6189055442810059
Mem used: -1523MB
best_loss: tensor(-0.6324, device='cuda:1')
final loss: -0.6263859868049622
Test:
Test: 0.8840472673559823
0.8840472673559823
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.51it/s]100%|██████████| 1/1 [00:00<00:00,  2.50it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1: -0.6241229176521301
Mem used: 728MB
best_loss: tensor(-0.6180, device='cuda:1')
final loss: -0.6198389530181885
Test:
Test: 0.931314623338257
0.931314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.07it/s]100%|██████████| 1/1 [00:00<00:00,  3.00it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1: -0.5762823820114136
Mem used: 208MB
best_loss: tensor(-0.5799, device='cuda:1')
final loss: -0.5688039064407349
Test:
Test: 0.8855243722304283
0.8855243722304283
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.68it/s]100%|██████████| 1/1 [00:00<00:00,  1.68it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1: -0.5957563519477844
Mem used: 328MB
best_loss: tensor(-0.5868, device='cuda:1')
final loss: -0.5838305950164795
Test:
Test: 0.9290989660265879
0.9290989660265879
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.17it/s]100%|██████████| 1/1 [00:00<00:00,  2.17it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1: -0.6096894145011902
Mem used: 142MB
best_loss: tensor(-0.5983, device='cuda:1')
best_loss: tensor(-0.5984, device='cuda:1')
final loss: -0.6069181561470032
Test:
Test: 0.878138847858198
0.878138847858198
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.74it/s]100%|██████████| 1/1 [00:00<00:00,  2.74it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1: -0.6212823987007141
Mem used: 142MB
best_loss: tensor(-0.6059, device='cuda:1')
best_loss: tensor(-0.6059, device='cuda:1')
final loss: -0.6141583323478699
Test:
Test: 0.8770310192023634
0.8770310192023634
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.65it/s]100%|██████████| 1/1 [00:00<00:00,  2.65it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1: -0.6408476829528809
Mem used: 655MB
best_loss: tensor(-0.6317, device='cuda:1')
final loss: -0.6468291878700256
Test:
Test: 0.888109305760709
0.888109305760709
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.81it/s]100%|██████████| 2/2 [00:00<00:00,  2.62it/s]100%|██████████| 2/2 [00:00<00:00,  2.64it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1, Loop Feat 0: -0.5685077905654907
Epoch 1, Loop Adj 0: -0.5654218196868896
Epoch 2: -0.5654218196868896
Mem used: 350MB
best_loss: tensor(-0.5674, device='cuda:1')
final loss: -0.5676904916763306
Test:
Test: 0.8759231905465288
0.8759231905465288
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.67it/s]100%|██████████| 2/2 [00:00<00:00,  2.77it/s]100%|██████████| 2/2 [00:00<00:00,  2.75it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1, Loop Feat 0: -0.6049651503562927
Epoch 1, Loop Adj 0: -0.602392315864563
Epoch 2: -0.602392315864563
Mem used: 270MB
best_loss: tensor(-0.6073, device='cuda:1')
final loss: -0.6000460982322693
Test:
Test: 0.9276218611521418
0.9276218611521418
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.87it/s]100%|██████████| 2/2 [00:00<00:00,  3.45it/s]100%|██████████| 2/2 [00:00<00:00,  3.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1, Loop Feat 0: -0.5831170678138733
Epoch 1, Loop Adj 0: -0.5790110230445862
Epoch 2: -0.5790110230445862
Mem used: 142MB
best_loss: tensor(-0.5968, device='cuda:1')
final loss: -0.5879635214805603
Test:
Test: 0.9187592319054653
0.9187592319054653
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.59it/s]100%|██████████| 2/2 [00:00<00:00,  3.68it/s]100%|██████████| 2/2 [00:00<00:00,  3.66it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1, Loop Feat 0: -0.6227271556854248
Epoch 1, Loop Adj 0: -0.6250419616699219
Epoch 2: -0.6250419616699219
Mem used: 142MB
best_loss: tensor(-0.6341, device='cuda:1')
final loss: -0.6273553967475891
Test:
Test: 0.8840472673559823
0.8840472673559823
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.06it/s]100%|██████████| 2/2 [00:01<00:00,  1.80it/s]100%|██████████| 2/2 [00:01<00:00,  1.84it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1, Loop Feat 0: -0.6188365817070007
Epoch 1, Loop Adj 0: -0.6223671436309814
Epoch 2: -0.6223671436309814
Mem used: 816MB
best_loss: tensor(-0.6192, device='cuda:1')
final loss: -0.6213846206665039
Test:
Test: 0.9287296898079763
0.9287296898079763
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.62it/s]100%|██████████| 2/2 [00:00<00:00,  2.47it/s]100%|██████████| 2/2 [00:00<00:00,  2.47it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1, Loop Feat 0: -0.5794556736946106
Epoch 1, Loop Adj 0: -0.5808311104774475
Epoch 2: -0.5808311104774475
Mem used: 298MB
best_loss: tensor(-0.5813, device='cuda:1')
final loss: -0.5703272223472595
Test:
Test: 0.8847858197932054
0.8847858197932054
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.54it/s]100%|██████████| 2/2 [00:00<00:00,  3.77it/s]100%|██████████| 2/2 [00:00<00:00,  3.73it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1, Loop Feat 0: -0.585064172744751
Epoch 1, Loop Adj 0: -0.5804024934768677
Epoch 2: -0.5804024934768677
Mem used: -1241MB
best_loss: tensor(-0.5883, device='cuda:1')
final loss: -0.5832687616348267
Test:
Test: 0.9239290989660266
0.9239290989660266
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.92it/s]100%|██████████| 2/2 [00:00<00:00,  4.09it/s]100%|██████████| 2/2 [00:00<00:00,  3.86it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1, Loop Feat 0: -0.6156891584396362
Epoch 1, Loop Adj 0: -0.5989811420440674
Epoch 2: -0.5989811420440674
Mem used: 446MB
best_loss: tensor(-0.5994, device='cuda:1')
final loss: -0.6103665232658386
Test:
Test: 0.8759231905465288
0.8759231905465288
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.48it/s]100%|██████████| 2/2 [00:00<00:00,  4.25it/s]100%|██████████| 2/2 [00:00<00:00,  4.11it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1, Loop Feat 0: -0.6187320947647095
Epoch 1, Loop Adj 0: -0.6179787516593933
Epoch 2: -0.6179787516593933
Mem used: 142MB
best_loss: tensor(-0.6078, device='cuda:1')
final loss: -0.6166520714759827
Test:
Test: 0.871861152141802
0.871861152141802
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.58it/s]100%|██████████| 2/2 [00:00<00:00,  3.12it/s]100%|██████████| 2/2 [00:00<00:00,  3.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1, Loop Feat 0: -0.6353621482849121
Epoch 1, Loop Adj 0: -0.6395876407623291
Epoch 2: -0.6395876407623291
Mem used: 334MB
best_loss: tensor(-0.6321, device='cuda:1')
best_loss: tensor(-0.6323, device='cuda:1')
final loss: -0.6472142338752747
Test:
Test: 0.8899556868537666
0.8899556868537666
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.05it/s]100%|██████████| 2/2 [00:00<00:00,  2.79it/s]100%|██████████| 2/2 [00:00<00:00,  2.82it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1, Loop Feat 0: -0.5699424147605896
Epoch 1, Loop Adj 0: -0.5669233202934265
Epoch 2: -0.5669233202934265
Mem used: 142MB
best_loss: tensor(-0.5725, device='cuda:1')
final loss: -0.5722723603248596
Test:
Test: 0.8666912850812407
0.8666912850812407
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.63it/s]100%|██████████| 2/2 [00:00<00:00,  3.73it/s]100%|██████████| 2/2 [00:00<00:00,  3.71it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1, Loop Feat 0: -0.6060487627983093
Epoch 1, Loop Adj 0: -0.6036064028739929
Epoch 2: -0.6036064028739929
Mem used: 142MB
best_loss: tensor(-0.6119, device='cuda:1')
final loss: -0.6036114692687988
Test:
Test: 0.9209748892171344
0.9209748892171344
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.21it/s]100%|██████████| 2/2 [00:00<00:00,  3.15it/s]100%|██████████| 2/2 [00:00<00:00,  3.15it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1, Loop Feat 0: -0.5844463109970093
Epoch 1, Loop Adj 0: -0.580173909664154
Epoch 2: -0.580173909664154
Mem used: 568MB
best_loss: tensor(-0.6019, device='cuda:1')
final loss: -0.5931431651115417
Test:
Test: 0.9087887740029542
0.9087887740029542
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.41it/s]100%|██████████| 2/2 [00:00<00:00,  2.90it/s]100%|██████████| 2/2 [00:00<00:00,  2.81it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1, Loop Feat 0: -0.624101996421814
Epoch 1, Loop Adj 0: -0.6262766122817993
Epoch 2: -0.6262766122817993
Mem used: 142MB
best_loss: tensor(-0.6355, device='cuda:1')
final loss: -0.631973922252655
Test:
Test: 0.8822008862629247
0.8822008862629247
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.33it/s]100%|██████████| 2/2 [00:00<00:00,  2.74it/s]100%|██████████| 2/2 [00:00<00:00,  2.67it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1, Loop Feat 0: -0.6199045181274414
Epoch 1, Loop Adj 0: -0.6234934329986572
Epoch 2: -0.6234934329986572
Mem used: 142MB
best_loss: tensor(-0.6237, device='cuda:1')
final loss: -0.6260952353477478
Test:
Test: 0.9198670605612999
0.9198670605612999
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.48it/s]100%|██████████| 2/2 [00:00<00:00,  3.48it/s]100%|██████████| 2/2 [00:00<00:00,  3.48it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1, Loop Feat 0: -0.5810444355010986
Epoch 1, Loop Adj 0: -0.5822271108627319
Epoch 2: -0.5822271108627319
Mem used: 268MB
best_loss: tensor(-0.5865, device='cuda:1')
final loss: -0.5756644010543823
Test:
Test: 0.8707533234859675
0.8707533234859675
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.77it/s]100%|██████████| 2/2 [00:00<00:00,  3.33it/s]100%|██████████| 2/2 [00:00<00:00,  3.23it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1, Loop Feat 0: -0.5863925814628601
Epoch 1, Loop Adj 0: -0.5818736553192139
Epoch 2: -0.5818736553192139
Mem used: 142MB
best_loss: tensor(-0.5923, device='cuda:1')
final loss: -0.5894435048103333
Test:
Test: 0.9139586410635155
0.9139586410635155
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.35it/s]100%|██████████| 2/2 [00:00<00:00,  3.15it/s]100%|██████████| 2/2 [00:00<00:00,  3.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1, Loop Feat 0: -0.6168655753135681
Epoch 1, Loop Adj 0: -0.6002926826477051
Epoch 2: -0.6002926826477051
Mem used: 142MB
best_loss: tensor(-0.6047, device='cuda:1')
final loss: -0.6132741570472717
Test:
Test: 0.8700147710487445
0.8700147710487445
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.72it/s]100%|██████████| 2/2 [00:00<00:00,  3.72it/s]100%|██████████| 2/2 [00:00<00:00,  3.65it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1, Loop Feat 0: -0.6198528409004211
Epoch 1, Loop Adj 0: -0.6191208362579346
Epoch 2: -0.6191208362579346
Mem used: 142MB
best_loss: tensor(-0.6114, device='cuda:1')
final loss: -0.6206602454185486
Test:
Test: 0.869645494830133
0.869645494830133
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.02it/s]100%|██████████| 2/2 [00:00<00:00,  2.58it/s]100%|██████████| 2/2 [00:00<00:00,  2.48it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1, Loop Feat 0: -0.6363555788993835
Epoch 1, Loop Adj 0: -0.6408578753471375
Epoch 2: -0.6408578753471375
Mem used: -758MB
best_loss: tensor(-0.6364, device='cuda:1')
final loss: -0.6496134996414185
Test:
Test: 0.8877400295420975
0.8877400295420975
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.50it/s]100%|██████████| 2/2 [00:00<00:00,  3.03it/s]100%|██████████| 2/2 [00:00<00:00,  2.93it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1, Loop Feat 0: -0.5681964755058289
Epoch 1, Loop Adj 0: -0.5650960206985474
Epoch 2: -0.5650960206985474
Mem used: 526MB
best_loss: tensor(-0.5652, device='cuda:1')
final loss: -0.5649681687355042
Test:
Test: 0.8777695716395865
0.8777695716395865
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.01it/s]100%|██████████| 2/2 [00:01<00:00,  1.83it/s]100%|██████████| 2/2 [00:01<00:00,  1.95it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1, Loop Feat 0: -0.6047242879867554
Epoch 1, Loop Adj 0: -0.6021224856376648
Epoch 2: -0.6021224856376648
Mem used: 406MB
best_loss: tensor(-0.6055, device='cuda:1')
final loss: -0.5971916913986206
Test:
Test: 0.9327917282127031
0.9327917282127031
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.65it/s]100%|██████████| 2/2 [00:00<00:00,  2.72it/s]100%|██████████| 2/2 [00:00<00:00,  2.71it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1, Loop Feat 0: -0.5828151702880859
Epoch 1, Loop Adj 0: -0.5787490010261536
Epoch 2: -0.5787490010261536
Mem used: 154MB
best_loss: tensor(-0.5958, device='cuda:1')
final loss: -0.5868319272994995
Test:
Test: 0.9231905465288035
0.9231905465288035
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  4.83it/s]100%|██████████| 2/2 [00:00<00:00,  5.55it/s]100%|██████████| 2/2 [00:00<00:00,  5.42it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1, Loop Feat 0: -0.622420608997345
Epoch 1, Loop Adj 0: -0.6247587203979492
Epoch 2: -0.6247587203979492
Mem used: 142MB
best_loss: tensor(-0.6323, device='cuda:1')
best_loss: tensor(-0.6324, device='cuda:1')
final loss: -0.6270372867584229
Test:
Test: 0.8851550960118169
0.8851550960118169
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  4.02it/s]100%|██████████| 2/2 [00:00<00:00,  3.19it/s]100%|██████████| 2/2 [00:00<00:00,  3.29it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1, Loop Feat 0: -0.6185901165008545
Epoch 1, Loop Adj 0: -0.6221114993095398
Epoch 2: -0.6221114993095398
Mem used: 142MB
best_loss: tensor(-0.6181, device='cuda:1')
final loss: -0.6196419596672058
Test:
Test: 0.931314623338257
0.931314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.29it/s]100%|██████████| 2/2 [00:00<00:00,  3.09it/s]100%|██████████| 2/2 [00:00<00:00,  3.09it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1, Loop Feat 0: -0.5791158080101013
Epoch 1, Loop Adj 0: -0.5805248618125916
Epoch 2: -0.5805248618125916
Mem used: 142MB
best_loss: tensor(-0.5798, device='cuda:1')
best_loss: tensor(-0.5800, device='cuda:1')
final loss: -0.569482684135437
Test:
Test: 0.8870014771048744
0.8870014771048744
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.03it/s]100%|██████████| 2/2 [00:00<00:00,  2.63it/s]100%|██████████| 2/2 [00:00<00:00,  2.68it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1, Loop Feat 0: -0.5847699046134949
Epoch 1, Loop Adj 0: -0.580078125
Epoch 2: -0.580078125
Mem used: 344MB
best_loss: tensor(-0.5870, device='cuda:1')
final loss: -0.584602952003479
Test:
Test: 0.9298375184638109
0.9298375184638109
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.37it/s]100%|██████████| 2/2 [00:00<00:00,  3.99it/s]100%|██████████| 2/2 [00:00<00:00,  3.88it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1, Loop Feat 0: -0.6154066324234009
Epoch 1, Loop Adj 0: -0.5986852645874023
Epoch 2: -0.5986852645874023
Mem used: 302MB
best_loss: tensor(-0.5986, device='cuda:1')
best_loss: tensor(-0.5986, device='cuda:1')
final loss: -0.608213484287262
Test:
Test: 0.878138847858198
0.878138847858198
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.55it/s]100%|██████████| 2/2 [00:00<00:00,  3.47it/s]100%|██████████| 2/2 [00:00<00:00,  3.48it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1, Loop Feat 0: -0.6184864640235901
Epoch 1, Loop Adj 0: -0.6177229285240173
Epoch 2: -0.6177229285240173
Mem used: 142MB
best_loss: tensor(-0.6064, device='cuda:1')
final loss: -0.6142771244049072
Test:
Test: 0.8759231905465288
0.8759231905465288
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.5, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.39it/s]100%|██████████| 2/2 [00:00<00:00,  3.35it/s]100%|██████████| 2/2 [00:00<00:00,  3.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1, Loop Feat 0: -0.635146975517273
Epoch 1, Loop Adj 0: -0.6392927169799805
Epoch 2: -0.6392927169799805
Mem used: 296MB
best_loss: tensor(-0.6318, device='cuda:1')
best_loss: tensor(-0.6319, device='cuda:1')
final loss: -0.6470465064048767
Test:
Test: 0.8884785819793205
0.8884785819793205
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.55it/s]100%|██████████| 1/1 [00:00<00:00,  2.55it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1: -0.5682570338249207
Mem used: 142MB
best_loss: tensor(-0.5662, device='cuda:1')
final loss: -0.5671367645263672
Test:
Test: 0.8755539143279173
0.8755539143279173
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.99it/s]100%|██████████| 1/1 [00:00<00:00,  2.99it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1: -0.5982421636581421
Mem used: 142MB
best_loss: tensor(-0.6057, device='cuda:1')
final loss: -0.5970591306686401
Test:
Test: 0.9276218611521418
0.9276218611521418
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.07it/s]100%|██████████| 1/1 [00:00<00:00,  3.06it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1: -0.5870212316513062
Mem used: 262MB
best_loss: tensor(-0.5964, device='cuda:1')
final loss: -0.5882822275161743
Test:
Test: 0.9198670605612999
0.9198670605612999
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.57it/s]100%|██████████| 1/1 [00:00<00:00,  2.56it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1: -0.6189055442810059
Mem used: 288MB
best_loss: tensor(-0.6335, device='cuda:1')
final loss: -0.6269294619560242
Test:
Test: 0.8836779911373708
0.8836779911373708
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.36it/s]100%|██████████| 1/1 [00:00<00:00,  2.33it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1: -0.6241229176521301
Mem used: 532MB
best_loss: tensor(-0.6189, device='cuda:1')
final loss: -0.6190598607063293
Test:
Test: 0.9279911373707533
0.9279911373707533
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.99it/s]100%|██████████| 1/1 [00:00<00:00,  2.99it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1: -0.5762823820114136
Mem used: 142MB
best_loss: tensor(-0.5806, device='cuda:1')
final loss: -0.5700821876525879
Test:
Test: 0.8792466765140325
0.8792466765140325
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.77it/s]100%|██████████| 1/1 [00:00<00:00,  2.76it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1: -0.5957563519477844
Mem used: -1522MB
best_loss: tensor(-0.5883, device='cuda:1')
final loss: -0.5844340920448303
Test:
Test: 0.9250369276218612
0.9250369276218612
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.38it/s]100%|██████████| 1/1 [00:00<00:00,  3.37it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1: -0.6096894145011902
Mem used: 142MB
best_loss: tensor(-0.5989, device='cuda:1')
final loss: -0.610381543636322
Test:
Test: 0.8725997045790251
0.8725997045790251
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.14it/s]100%|██████████| 1/1 [00:00<00:00,  3.14it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1: -0.6212823987007141
Mem used: 142MB
best_loss: tensor(-0.6071, device='cuda:1')
best_loss: tensor(-0.6072, device='cuda:1')
final loss: -0.6157832741737366
Test:
Test: 0.8766617429837519
0.8766617429837519
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.65it/s]100%|██████████| 1/1 [00:00<00:00,  2.65it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1: -0.6408476829528809
Mem used: 878MB
best_loss: tensor(-0.6326, device='cuda:1')
final loss: -0.6480746865272522
Test:
Test: 0.888109305760709
0.888109305760709
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  4.18it/s]100%|██████████| 1/1 [00:00<00:00,  4.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1: -0.5682570338249207
Mem used: 142MB
best_loss: tensor(-0.5718, device='cuda:1')
final loss: -0.5713538527488708
Test:
Test: 0.8652141802067946
0.8652141802067946
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.98it/s]100%|██████████| 1/1 [00:00<00:00,  2.98it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1: -0.5982421636581421
Mem used: 370MB
best_loss: tensor(-0.6117, device='cuda:1')
final loss: -0.600871205329895
Test:
Test: 0.9183899556868538
0.9183899556868538
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.93it/s]100%|██████████| 1/1 [00:00<00:00,  2.93it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1: -0.5870212316513062
Mem used: 324MB
best_loss: tensor(-0.5994, device='cuda:1')
final loss: -0.5920045375823975
Test:
Test: 0.9132200886262924
0.9132200886262924
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  4.02it/s]100%|██████████| 1/1 [00:00<00:00,  4.02it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1: -0.6189055442810059
Mem used: 142MB
best_loss: tensor(-0.6360, device='cuda:1')
final loss: -0.6296520829200745
Test:
Test: 0.8829394387001477
0.8829394387001477
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.52it/s]100%|██████████| 1/1 [00:00<00:00,  2.52it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1: -0.6241229176521301
Mem used: 142MB
best_loss: tensor(-0.6227, device='cuda:1')
final loss: -0.6237719655036926
Test:
Test: 0.9194977843426884
0.9194977843426884
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.88it/s]100%|██████████| 1/1 [00:00<00:00,  2.84it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1: -0.5762823820114136
Mem used: 414MB
best_loss: tensor(-0.5859, device='cuda:1')
final loss: -0.5757750272750854
Test:
Test: 0.8700147710487445
0.8700147710487445
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.61it/s]100%|██████████| 1/1 [00:00<00:00,  2.61it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1: -0.5957563519477844
Mem used: 286MB
best_loss: tensor(-0.5927, device='cuda:1')
final loss: -0.5891019105911255
Test:
Test: 0.9117429837518464
0.9117429837518464
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.50it/s]100%|██████████| 1/1 [00:00<00:00,  3.50it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1: -0.6096894145011902
Mem used: 142MB
best_loss: tensor(-0.6020, device='cuda:1')
final loss: -0.6137672066688538
Test:
Test: 0.870384047267356
0.870384047267356
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.05it/s]100%|██████████| 1/1 [00:00<00:00,  3.05it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1: -0.6212823987007141
Mem used: 142MB
best_loss: tensor(-0.6106, device='cuda:1')
final loss: -0.6201524138450623
Test:
Test: 0.8611521418020679
0.8611521418020679
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.23it/s]100%|██████████| 1/1 [00:00<00:00,  3.23it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1: -0.6408476829528809
Mem used: 470MB
best_loss: tensor(-0.6365, device='cuda:1')
final loss: -0.6507150530815125
Test:
Test: 0.878138847858198
0.878138847858198
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.80it/s]100%|██████████| 1/1 [00:00<00:00,  2.80it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1: -0.5682570338249207
Mem used: 142MB
best_loss: tensor(-0.5650, device='cuda:1')
final loss: -0.5652772188186646
Test:
Test: 0.8774002954209749
0.8774002954209749
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.18it/s]100%|██████████| 1/1 [00:00<00:00,  2.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1: -0.5982421636581421
Mem used: 640MB
best_loss: tensor(-0.6051, device='cuda:1')
final loss: -0.5972824096679688
Test:
Test: 0.9320531757754801
0.9320531757754801
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  1.90it/s]100%|██████████| 1/1 [00:00<00:00,  1.90it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1: -0.5870212316513062
Mem used: 402MB
best_loss: tensor(-0.5957, device='cuda:1')
final loss: -0.5867615342140198
Test:
Test: 0.922821270310192
0.922821270310192
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.10it/s]100%|██████████| 1/1 [00:00<00:00,  3.09it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1: -0.6189055442810059
Mem used: 246MB
best_loss: tensor(-0.6324, device='cuda:1')
final loss: -0.6263859868049622
Test:
Test: 0.8840472673559823
0.8840472673559823
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.35it/s]100%|██████████| 1/1 [00:00<00:00,  3.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1: -0.6241229176521301
Mem used: 142MB
best_loss: tensor(-0.6180, device='cuda:1')
final loss: -0.6198389530181885
Test:
Test: 0.931314623338257
0.931314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.64it/s]100%|██████████| 1/1 [00:00<00:00,  3.63it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1: -0.5762823820114136
Mem used: 142MB
best_loss: tensor(-0.5799, device='cuda:1')
final loss: -0.5688039064407349
Test:
Test: 0.8855243722304283
0.8855243722304283
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.85it/s]100%|██████████| 1/1 [00:00<00:00,  2.85it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1: -0.5957563519477844
Mem used: 142MB
best_loss: tensor(-0.5868, device='cuda:1')
final loss: -0.5838305950164795
Test:
Test: 0.9290989660265879
0.9290989660265879
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.39it/s]100%|██████████| 1/1 [00:00<00:00,  2.36it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1: -0.6096894145011902
Mem used: 142MB
best_loss: tensor(-0.5983, device='cuda:1')
best_loss: tensor(-0.5984, device='cuda:1')
final loss: -0.6069181561470032
Test:
Test: 0.878138847858198
0.878138847858198
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.69it/s]100%|██████████| 1/1 [00:00<00:00,  3.68it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1: -0.6212823987007141
Mem used: 240MB
best_loss: tensor(-0.6059, device='cuda:1')
best_loss: tensor(-0.6060, device='cuda:1')
final loss: -0.6147412061691284
Test:
Test: 0.8762924667651403
0.8762924667651403
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.02it/s]100%|██████████| 1/1 [00:00<00:00,  3.02it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1: -0.6408476829528809
Mem used: 424MB
best_loss: tensor(-0.6317, device='cuda:1')
final loss: -0.6468291878700256
Test:
Test: 0.888109305760709
0.888109305760709
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.51it/s]100%|██████████| 2/2 [00:00<00:00,  3.65it/s]100%|██████████| 2/2 [00:00<00:00,  3.63it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1, Loop Feat 0: -0.5685027241706848
Epoch 1, Loop Adj 0: -0.5654199719429016
Epoch 2: -0.5654199719429016
Mem used: 154MB
best_loss: tensor(-0.5674, device='cuda:1')
final loss: -0.5670302510261536
Test:
Test: 0.8770310192023634
0.8770310192023634
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.21it/s]100%|██████████| 2/2 [00:00<00:00,  3.88it/s]100%|██████████| 2/2 [00:00<00:00,  3.76it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1, Loop Feat 0: -0.6049579977989197
Epoch 1, Loop Adj 0: -0.6023900508880615
Epoch 2: -0.6023900508880615
Mem used: 142MB
best_loss: tensor(-0.6073, device='cuda:1')
final loss: -0.6000460982322693
Test:
Test: 0.9276218611521418
0.9276218611521418
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.61it/s]100%|██████████| 2/2 [00:00<00:00,  3.50it/s]100%|██████████| 2/2 [00:00<00:00,  3.33it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1, Loop Feat 0: -0.583109974861145
Epoch 1, Loop Adj 0: -0.5790059566497803
Epoch 2: -0.5790059566497803
Mem used: 142MB
best_loss: tensor(-0.5968, device='cuda:1')
final loss: -0.5879635214805603
Test:
Test: 0.9187592319054653
0.9187592319054653
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.72it/s]100%|██████████| 2/2 [00:00<00:00,  3.09it/s]100%|██████████| 2/2 [00:00<00:00,  3.02it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1, Loop Feat 0: -0.6227216124534607
Epoch 1, Loop Adj 0: -0.6250328421592712
Epoch 2: -0.6250328421592712
Mem used: 346MB
best_loss: tensor(-0.6341, device='cuda:1')
final loss: -0.6273554563522339
Test:
Test: 0.8840472673559823
0.8840472673559823
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.63it/s]100%|██████████| 2/2 [00:00<00:00,  2.84it/s]100%|██████████| 2/2 [00:00<00:00,  2.80it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1, Loop Feat 0: -0.6188318729400635
Epoch 1, Loop Adj 0: -0.6223595142364502
Epoch 2: -0.6223595142364502
Mem used: 348MB
best_loss: tensor(-0.6192, device='cuda:1')
final loss: -0.6213846206665039
Test:
Test: 0.9287296898079763
0.9287296898079763
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.43it/s]100%|██████████| 2/2 [00:00<00:00,  3.77it/s]100%|██████████| 2/2 [00:00<00:00,  3.71it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1, Loop Feat 0: -0.5794506669044495
Epoch 1, Loop Adj 0: -0.5808224678039551
Epoch 2: -0.5808224678039551
Mem used: 300MB
best_loss: tensor(-0.5813, device='cuda:1')
final loss: -0.5703272819519043
Test:
Test: 0.8847858197932054
0.8847858197932054
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.49it/s]100%|██████████| 2/2 [00:00<00:00,  2.76it/s]100%|██████████| 2/2 [00:00<00:00,  2.72it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1, Loop Feat 0: -0.5850597023963928
Epoch 1, Loop Adj 0: -0.5803959369659424
Epoch 2: -0.5803959369659424
Mem used: 360MB
best_loss: tensor(-0.5883, device='cuda:1')
final loss: -0.5851894021034241
Test:
Test: 0.9242983751846381
0.9242983751846381
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.23it/s]100%|██████████| 2/2 [00:00<00:00,  3.63it/s]100%|██████████| 2/2 [00:00<00:00,  3.56it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1, Loop Feat 0: -0.6156823039054871
Epoch 1, Loop Adj 0: -0.5989745259284973
Epoch 2: -0.5989745259284973
Mem used: 142MB
best_loss: tensor(-0.5994, device='cuda:1')
final loss: -0.6103665232658386
Test:
Test: 0.8759231905465288
0.8759231905465288
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.57it/s]100%|██████████| 2/2 [00:00<00:00,  3.36it/s]100%|██████████| 2/2 [00:00<00:00,  3.39it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1, Loop Feat 0: -0.6187314987182617
Epoch 1, Loop Adj 0: -0.6179720163345337
Epoch 2: -0.6179720163345337
Mem used: 142MB
best_loss: tensor(-0.6078, device='cuda:1')
final loss: -0.6166520714759827
Test:
Test: 0.871861152141802
0.871861152141802
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.02it/s]100%|██████████| 2/2 [00:00<00:00,  3.45it/s]100%|██████████| 2/2 [00:00<00:00,  3.38it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1, Loop Feat 0: -0.6353607773780823
Epoch 1, Loop Adj 0: -0.6395818591117859
Epoch 2: -0.6395818591117859
Mem used: 142MB
best_loss: tensor(-0.6321, device='cuda:1')
best_loss: tensor(-0.6323, device='cuda:1')
final loss: -0.6462135314941406
Test:
Test: 0.8895864106351551
0.8895864106351551
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.71it/s]100%|██████████| 2/2 [00:00<00:00,  3.52it/s]100%|██████████| 2/2 [00:00<00:00,  3.36it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1, Loop Feat 0: -0.569935142993927
Epoch 1, Loop Adj 0: -0.5669195652008057
Epoch 2: -0.5669195652008057
Mem used: 142MB
best_loss: tensor(-0.5723, device='cuda:1')
final loss: -0.5724738836288452
Test:
Test: 0.8666912850812407
0.8666912850812407
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.56it/s]100%|██████████| 2/2 [00:00<00:00,  4.04it/s]100%|██████████| 2/2 [00:00<00:00,  3.96it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1, Loop Feat 0: -0.6060416102409363
Epoch 1, Loop Adj 0: -0.6036018133163452
Epoch 2: -0.6036018133163452
Mem used: 142MB
best_loss: tensor(-0.6119, device='cuda:1')
final loss: -0.6036114692687988
Test:
Test: 0.9209748892171344
0.9209748892171344
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.53it/s]100%|██████████| 2/2 [00:00<00:00,  4.11it/s]100%|██████████| 2/2 [00:00<00:00,  4.01it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1, Loop Feat 0: -0.5844374895095825
Epoch 1, Loop Adj 0: -0.5801555514335632
Epoch 2: -0.5801555514335632
Mem used: 142MB
best_loss: tensor(-0.6019, device='cuda:1')
final loss: -0.5931431651115417
Test:
Test: 0.9087887740029542
0.9087887740029542
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.30it/s]100%|██████████| 2/2 [00:00<00:00,  2.16it/s]100%|██████████| 2/2 [00:00<00:00,  2.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1, Loop Feat 0: -0.6240770220756531
Epoch 1, Loop Adj 0: -0.6262354254722595
Epoch 2: -0.6262354254722595
Mem used: 816MB
best_loss: tensor(-0.6355, device='cuda:1')
final loss: -0.631309449672699
Test:
Test: 0.8818316100443131
0.8818316100443131
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.53it/s]100%|██████████| 2/2 [00:00<00:00,  3.89it/s]100%|██████████| 2/2 [00:00<00:00,  3.83it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1, Loop Feat 0: -0.6198369264602661
Epoch 1, Loop Adj 0: -0.62342369556427
Epoch 2: -0.62342369556427
Mem used: 338MB
best_loss: tensor(-0.6239, device='cuda:1')
final loss: -0.6261814832687378
Test:
Test: 0.9194977843426884
0.9194977843426884
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.71it/s]100%|██████████| 2/2 [00:00<00:00,  2.26it/s]100%|██████████| 2/2 [00:00<00:00,  2.32it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1, Loop Feat 0: -0.5810260772705078
Epoch 1, Loop Adj 0: -0.5822159647941589
Epoch 2: -0.5822159647941589
Mem used: 554MB
best_loss: tensor(-0.5864, device='cuda:1')
final loss: -0.5753446221351624
Test:
Test: 0.8711225997045791
0.8711225997045791
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.90it/s]100%|██████████| 2/2 [00:00<00:00,  3.09it/s]100%|██████████| 2/2 [00:00<00:00,  3.06it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1, Loop Feat 0: -0.5863816142082214
Epoch 1, Loop Adj 0: -0.5818634033203125
Epoch 2: -0.5818634033203125
Mem used: 178MB
best_loss: tensor(-0.5922, device='cuda:1')
final loss: -0.5887022614479065
Test:
Test: 0.9139586410635155
0.9139586410635155
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.08it/s]100%|██████████| 2/2 [00:00<00:00,  2.73it/s]100%|██████████| 2/2 [00:00<00:00,  2.78it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1, Loop Feat 0: -0.6168676614761353
Epoch 1, Loop Adj 0: -0.6002907752990723
Epoch 2: -0.6002907752990723
Mem used: 414MB
best_loss: tensor(-0.6049, device='cuda:1')
final loss: -0.6138849258422852
Test:
Test: 0.8700147710487445
0.8700147710487445
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.97it/s]100%|██████████| 2/2 [00:00<00:00,  3.48it/s]100%|██████████| 2/2 [00:00<00:00,  3.39it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1, Loop Feat 0: -0.6198347806930542
Epoch 1, Loop Adj 0: -0.619106113910675
Epoch 2: -0.619106113910675
Mem used: 532MB
best_loss: tensor(-0.6113, device='cuda:1')
final loss: -0.6204262971878052
Test:
Test: 0.8689069423929099
0.8689069423929099
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.09it/s]100%|██████████| 2/2 [00:00<00:00,  3.69it/s]100%|██████████| 2/2 [00:00<00:00,  3.58it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1, Loop Feat 0: -0.6363534331321716
Epoch 1, Loop Adj 0: -0.6408504843711853
Epoch 2: -0.6408504843711853
Mem used: 308MB
best_loss: tensor(-0.6365, device='cuda:1')
final loss: -0.6505483984947205
Test:
Test: 0.8873707533234859
0.8873707533234859
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.26it/s]100%|██████████| 2/2 [00:00<00:00,  3.40it/s]100%|██████████| 2/2 [00:00<00:00,  3.37it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1, Loop Feat 0: -0.5681939125061035
Epoch 1, Loop Adj 0: -0.5650945901870728
Epoch 2: -0.5650945901870728
Mem used: 142MB
best_loss: tensor(-0.5652, device='cuda:1')
final loss: -0.5658480525016785
Test:
Test: 0.8777695716395865
0.8777695716395865
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.41it/s]100%|██████████| 2/2 [00:00<00:00,  2.91it/s]100%|██████████| 2/2 [00:00<00:00,  2.98it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1, Loop Feat 0: -0.6047233939170837
Epoch 1, Loop Adj 0: -0.6021213531494141
Epoch 2: -0.6021213531494141
Mem used: 142MB
best_loss: tensor(-0.6055, device='cuda:1')
final loss: -0.5971916913986206
Test:
Test: 0.9327917282127031
0.9327917282127031
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.26it/s]100%|██████████| 2/2 [00:00<00:00,  2.51it/s]100%|██████████| 2/2 [00:00<00:00,  2.47it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1, Loop Feat 0: -0.5828136801719666
Epoch 1, Loop Adj 0: -0.5787479877471924
Epoch 2: -0.5787479877471924
Mem used: 642MB
best_loss: tensor(-0.5958, device='cuda:1')
final loss: -0.5868319272994995
Test:
Test: 0.9231905465288035
0.9231905465288035
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.93it/s]100%|██████████| 2/2 [00:00<00:00,  3.60it/s]100%|██████████| 2/2 [00:00<00:00,  3.48it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1, Loop Feat 0: -0.6224193572998047
Epoch 1, Loop Adj 0: -0.624756932258606
Epoch 2: -0.624756932258606
Mem used: 982MB
best_loss: tensor(-0.6323, device='cuda:1')
best_loss: tensor(-0.6324, device='cuda:1')
final loss: -0.6270372867584229
Test:
Test: 0.8851550960118169
0.8851550960118169
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.21it/s]100%|██████████| 2/2 [00:00<00:00,  2.99it/s]100%|██████████| 2/2 [00:00<00:00,  2.84it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1, Loop Feat 0: -0.6185888051986694
Epoch 1, Loop Adj 0: -0.6221098899841309
Epoch 2: -0.6221098899841309
Mem used: 292MB
best_loss: tensor(-0.6181, device='cuda:1')
final loss: -0.6196420192718506
Test:
Test: 0.931314623338257
0.931314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.79it/s]100%|██████████| 2/2 [00:00<00:00,  2.72it/s]100%|██████████| 2/2 [00:00<00:00,  2.73it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1, Loop Feat 0: -0.579114556312561
Epoch 1, Loop Adj 0: -0.5805234313011169
Epoch 2: -0.5805234313011169
Mem used: 550MB
best_loss: tensor(-0.5798, device='cuda:1')
best_loss: tensor(-0.5800, device='cuda:1')
final loss: -0.569482684135437
Test:
Test: 0.8870014771048744
0.8870014771048744
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.26it/s]100%|██████████| 2/2 [00:00<00:00,  3.89it/s]100%|██████████| 2/2 [00:00<00:00,  3.78it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1, Loop Feat 0: -0.5847691297531128
Epoch 1, Loop Adj 0: -0.5800765752792358
Epoch 2: -0.5800765752792358
Mem used: 142MB
best_loss: tensor(-0.5870, device='cuda:1')
final loss: -0.584602952003479
Test:
Test: 0.9298375184638109
0.9298375184638109
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.62it/s]100%|██████████| 2/2 [00:00<00:00,  3.82it/s]100%|██████████| 2/2 [00:00<00:00,  3.79it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1, Loop Feat 0: -0.6154047846794128
Epoch 1, Loop Adj 0: -0.5986831784248352
Epoch 2: -0.5986831784248352
Mem used: 142MB
best_loss: tensor(-0.5986, device='cuda:1')
best_loss: tensor(-0.5986, device='cuda:1')
final loss: -0.608213484287262
Test:
Test: 0.878138847858198
0.878138847858198
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.48it/s]100%|██████████| 2/2 [00:00<00:00,  3.86it/s]100%|██████████| 2/2 [00:00<00:00,  3.80it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1, Loop Feat 0: -0.6184853911399841
Epoch 1, Loop Adj 0: -0.6177219748497009
Epoch 2: -0.6177219748497009
Mem used: 142MB
best_loss: tensor(-0.6064, device='cuda:1')
final loss: -0.6142771244049072
Test:
Test: 0.8759231905465288
0.8759231905465288
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.1, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.66it/s]100%|██████████| 2/2 [00:00<00:00,  3.86it/s]100%|██████████| 2/2 [00:00<00:00,  3.83it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1, Loop Feat 0: -0.6351460814476013
Epoch 1, Loop Adj 0: -0.6392916440963745
Epoch 2: -0.6392916440963745
Mem used: 764MB
best_loss: tensor(-0.6318, device='cuda:1')
best_loss: tensor(-0.6319, device='cuda:1')
final loss: -0.6470464468002319
Test:
Test: 0.8884785819793205
0.8884785819793205
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.63it/s]100%|██████████| 1/1 [00:00<00:00,  2.63it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1: -0.5682570338249207
Mem used: 162MB
best_loss: tensor(-0.5662, device='cuda:1')
final loss: -0.566241443157196
Test:
Test: 0.8755539143279173
0.8755539143279173
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  4.55it/s]100%|██████████| 1/1 [00:00<00:00,  4.55it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1: -0.5982421636581421
Mem used: 162MB
best_loss: tensor(-0.6057, device='cuda:1')
final loss: -0.5965998768806458
Test:
Test: 0.9276218611521418
0.9276218611521418
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.14it/s]100%|██████████| 1/1 [00:00<00:00,  3.14it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1: -0.5870212316513062
Mem used: 142MB
best_loss: tensor(-0.5964, device='cuda:1')
final loss: -0.5882822275161743
Test:
Test: 0.9198670605612999
0.9198670605612999
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.19it/s]100%|██████████| 1/1 [00:00<00:00,  3.18it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1: -0.6189055442810059
Mem used: 142MB
best_loss: tensor(-0.6335, device='cuda:1')
final loss: -0.6287569403648376
Test:
Test: 0.8836779911373708
0.8836779911373708
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.74it/s]100%|██████████| 1/1 [00:00<00:00,  2.74it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1: -0.6241229176521301
Mem used: 142MB
best_loss: tensor(-0.6189, device='cuda:1')
final loss: -0.6190598607063293
Test:
Test: 0.9279911373707533
0.9279911373707533
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.21it/s]100%|██████████| 1/1 [00:00<00:00,  3.20it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1: -0.5762823820114136
Mem used: 142MB
best_loss: tensor(-0.5806, device='cuda:1')
final loss: -0.5700821876525879
Test:
Test: 0.8792466765140325
0.8792466765140325
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.46it/s]100%|██████████| 1/1 [00:00<00:00,  2.46it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1: -0.5957563519477844
Mem used: 300MB
best_loss: tensor(-0.5883, device='cuda:1')
final loss: -0.5844340920448303
Test:
Test: 0.9250369276218612
0.9250369276218612
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.88it/s]100%|██████████| 1/1 [00:00<00:00,  2.88it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1: -0.6096894145011902
Mem used: 142MB
best_loss: tensor(-0.5989, device='cuda:1')
final loss: -0.608339786529541
Test:
Test: 0.8725997045790251
0.8725997045790251
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.35it/s]100%|██████████| 1/1 [00:00<00:00,  3.35it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1: -0.6212823987007141
Mem used: 142MB
best_loss: tensor(-0.6071, device='cuda:1')
final loss: -0.6166162490844727
Test:
Test: 0.8733382570162481
0.8733382570162481
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.48it/s]100%|██████████| 1/1 [00:00<00:00,  3.48it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1: -0.6408476829528809
Mem used: 886MB
best_loss: tensor(-0.6326, device='cuda:1')
final loss: -0.6480746865272522
Test:
Test: 0.888109305760709
0.888109305760709
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.58it/s]100%|██████████| 1/1 [00:00<00:00,  3.57it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1: -0.5682570338249207
Mem used: 142MB
best_loss: tensor(-0.5718, device='cuda:1')
final loss: -0.5713538527488708
Test:
Test: 0.8652141802067946
0.8652141802067946
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.55it/s]100%|██████████| 1/1 [00:00<00:00,  2.55it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1: -0.5982421636581421
Mem used: 816MB
best_loss: tensor(-0.6117, device='cuda:1')
final loss: -0.600871205329895
Test:
Test: 0.9183899556868538
0.9183899556868538
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.68it/s]100%|██████████| 1/1 [00:00<00:00,  3.68it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1: -0.5870212316513062
Mem used: 680MB
best_loss: tensor(-0.5994, device='cuda:1')
final loss: -0.5920045375823975
Test:
Test: 0.9132200886262924
0.9132200886262924
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  4.01it/s]100%|██████████| 1/1 [00:00<00:00,  4.00it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1: -0.6189055442810059
Mem used: 142MB
best_loss: tensor(-0.6360, device='cuda:1')
final loss: -0.6304336786270142
Test:
Test: 0.8829394387001477
0.8829394387001477
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.47it/s]100%|██████████| 1/1 [00:00<00:00,  3.41it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1: -0.6241229176521301
Mem used: 142MB
best_loss: tensor(-0.6227, device='cuda:1')
final loss: -0.6237719655036926
Test:
Test: 0.9194977843426884
0.9194977843426884
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.77it/s]100%|██████████| 1/1 [00:00<00:00,  3.76it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1: -0.5762823820114136
Mem used: 142MB
best_loss: tensor(-0.5859, device='cuda:1')
final loss: -0.5757750272750854
Test:
Test: 0.8700147710487445
0.8700147710487445
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.47it/s]100%|██████████| 1/1 [00:00<00:00,  2.47it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1: -0.5957563519477844
Mem used: 640MB
best_loss: tensor(-0.5927, device='cuda:1')
final loss: -0.5891019105911255
Test:
Test: 0.9117429837518464
0.9117429837518464
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.79it/s]100%|██████████| 1/1 [00:00<00:00,  3.79it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1: -0.6096894145011902
Mem used: 268MB
best_loss: tensor(-0.6020, device='cuda:1')
final loss: -0.6124717593193054
Test:
Test: 0.870384047267356
0.870384047267356
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.83it/s]100%|██████████| 1/1 [00:00<00:00,  3.82it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1: -0.6212823987007141
Mem used: 162MB
best_loss: tensor(-0.6106, device='cuda:1')
final loss: -0.6201524138450623
Test:
Test: 0.8611521418020679
0.8611521418020679
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  4.15it/s]100%|██████████| 1/1 [00:00<00:00,  4.15it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1: -0.6408476829528809
Mem used: 142MB
best_loss: tensor(-0.6365, device='cuda:1')
final loss: -0.6507150530815125
Test:
Test: 0.878138847858198
0.878138847858198
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  4.08it/s]100%|██████████| 1/1 [00:00<00:00,  4.08it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1: -0.5682570338249207
Mem used: 142MB
best_loss: tensor(-0.5650, device='cuda:1')
final loss: -0.5649734735488892
Test:
Test: 0.8774002954209749
0.8774002954209749
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.00it/s]100%|██████████| 1/1 [00:00<00:00,  2.99it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1: -0.5982421636581421
Mem used: 142MB
best_loss: tensor(-0.6051, device='cuda:1')
best_loss: tensor(-0.6052, device='cuda:1')
final loss: -0.5959640145301819
Test:
Test: 0.9327917282127031
0.9327917282127031
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.12it/s]100%|██████████| 1/1 [00:00<00:00,  3.12it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1: -0.5870212316513062
Mem used: -1782MB
best_loss: tensor(-0.5957, device='cuda:1')
final loss: -0.5867615342140198
Test:
Test: 0.922821270310192
0.922821270310192
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.40it/s]100%|██████████| 1/1 [00:00<00:00,  2.33it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1: -0.6189055442810059
Mem used: 328MB
best_loss: tensor(-0.6324, device='cuda:1')
final loss: -0.6263859868049622
Test:
Test: 0.8840472673559823
0.8840472673559823
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.35it/s]100%|██████████| 1/1 [00:00<00:00,  2.34it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1: -0.6241229176521301
Mem used: 256MB
best_loss: tensor(-0.6180, device='cuda:1')
final loss: -0.6198389530181885
Test:
Test: 0.931314623338257
0.931314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  3.55it/s]100%|██████████| 1/1 [00:00<00:00,  3.54it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1: -0.5762823820114136
Mem used: 478MB
best_loss: tensor(-0.5799, device='cuda:1')
final loss: -0.5688039064407349
Test:
Test: 0.8855243722304283
0.8855243722304283
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.45it/s]100%|██████████| 1/1 [00:00<00:00,  2.45it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1: -0.5957563519477844
Mem used: 296MB
best_loss: tensor(-0.5868, device='cuda:1')
final loss: -0.5838305950164795
Test:
Test: 0.9290989660265879
0.9290989660265879
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.41it/s]100%|██████████| 1/1 [00:00<00:00,  2.41it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1: -0.6096894145011902
Mem used: 142MB
best_loss: tensor(-0.5983, device='cuda:1')
best_loss: tensor(-0.5984, device='cuda:1')
final loss: -0.6069181561470032
Test:
Test: 0.878138847858198
0.878138847858198
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.52it/s]100%|██████████| 1/1 [00:00<00:00,  2.52it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1: -0.6212823987007141
Mem used: 142MB
best_loss: tensor(-0.6059, device='cuda:1')
best_loss: tensor(-0.6060, device='cuda:1')
final loss: -0.6147412061691284
Test:
Test: 0.8762924667651403
0.8762924667651403
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=5, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=5, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/1 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
100%|██████████| 1/1 [00:00<00:00,  2.64it/s]100%|██████████| 1/1 [00:00<00:00,  2.64it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1: -0.6408476829528809
Mem used: 378MB
best_loss: tensor(-0.6317, device='cuda:1')
final loss: -0.6468291878700256
Test:
Test: 0.888109305760709
0.888109305760709
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.43it/s]100%|██████████| 2/2 [00:00<00:00,  3.28it/s]100%|██████████| 2/2 [00:00<00:00,  3.30it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996596336365
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1, Loop Feat 0: -0.5683419704437256
Epoch 1, Loop Adj 0: -0.565250813961029
Epoch 2: -0.565250813961029
Mem used: 292MB
best_loss: tensor(-0.5673, device='cuda:1')
final loss: -0.5672376751899719
Test:
Test: 0.8766617429837519
0.8766617429837519
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.79it/s]100%|██████████| 2/2 [00:00<00:00,  3.44it/s]100%|██████████| 2/2 [00:00<00:00,  3.32it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1, Loop Feat 0: -0.6048406958580017
Epoch 1, Loop Adj 0: -0.602256715297699
Epoch 2: -0.602256715297699
Mem used: 402MB
best_loss: tensor(-0.6072, device='cuda:1')
final loss: -0.5981475710868835
Test:
Test: 0.9283604135893648
0.9283604135893648
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.34it/s]100%|██████████| 2/2 [00:00<00:00,  2.13it/s]100%|██████████| 2/2 [00:00<00:00,  2.15it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1, Loop Feat 0: -0.5829558968544006
Epoch 1, Loop Adj 0: -0.5788702964782715
Epoch 2: -0.5788702964782715
Mem used: 142MB
best_loss: tensor(-0.5968, device='cuda:1')
final loss: -0.5879635214805603
Test:
Test: 0.9187592319054653
0.9187592319054653
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.90it/s]100%|██████████| 2/2 [00:00<00:00,  3.52it/s]100%|██████████| 2/2 [00:00<00:00,  3.57it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1, Loop Feat 0: -0.6225632429122925
Epoch 1, Loop Adj 0: -0.6248863339424133
Epoch 2: -0.6248863339424133
Mem used: 1644MB
best_loss: tensor(-0.6342, device='cuda:1')
final loss: -0.628837525844574
Test:
Test: 0.8840472673559823
0.8840472673559823
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.34it/s]100%|██████████| 2/2 [00:00<00:00,  3.89it/s]100%|██████████| 2/2 [00:00<00:00,  3.79it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1, Loop Feat 0: -0.6187004446983337
Epoch 1, Loop Adj 0: -0.6222240328788757
Epoch 2: -0.6222240328788757
Mem used: 142MB
best_loss: tensor(-0.6193, device='cuda:1')
final loss: -0.6217518448829651
Test:
Test: 0.9276218611521418
0.9276218611521418
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.79it/s]100%|██████████| 2/2 [00:00<00:00,  4.37it/s]100%|██████████| 2/2 [00:00<00:00,  4.27it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1, Loop Feat 0: -0.5792756676673889
Epoch 1, Loop Adj 0: -0.5806665420532227
Epoch 2: -0.5806665420532227
Mem used: 142MB
best_loss: tensor(-0.5813, device='cuda:1')
final loss: -0.5710098743438721
Test:
Test: 0.8847858197932054
0.8847858197932054
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.17it/s]100%|██████████| 2/2 [00:00<00:00,  2.49it/s]100%|██████████| 2/2 [00:00<00:00,  2.43it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1, Loop Feat 0: -0.5849084258079529
Epoch 1, Loop Adj 0: -0.5802290439605713
Epoch 2: -0.5802290439605713
Mem used: 516MB
best_loss: tensor(-0.5884, device='cuda:1')
final loss: -0.5844618678092957
Test:
Test: 0.9242983751846381
0.9242983751846381
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.14it/s]100%|██████████| 2/2 [00:00<00:00,  3.04it/s]100%|██████████| 2/2 [00:00<00:00,  3.05it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5979332327842712
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1, Loop Feat 0: -0.6155417561531067
Epoch 1, Loop Adj 0: -0.5988264679908752
Epoch 2: -0.5988264679908752
Mem used: 430MB
best_loss: tensor(-0.5994, device='cuda:1')
final loss: -0.609553337097168
Test:
Test: 0.8762924667651403
0.8762924667651403
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.83it/s]100%|██████████| 2/2 [00:00<00:00,  3.15it/s]100%|██████████| 2/2 [00:00<00:00,  3.10it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1, Loop Feat 0: -0.6186010241508484
Epoch 1, Loop Adj 0: -0.6178416013717651
Epoch 2: -0.6178416013717651
Mem used: 142MB
best_loss: tensor(-0.6076, device='cuda:1')
final loss: -0.6163584589958191
Test:
Test: 0.871861152141802
0.871861152141802
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.01, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 52
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.12it/s]100%|██████████| 2/2 [00:00<00:00,  2.77it/s]100%|██████████| 2/2 [00:00<00:00,  2.65it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1, Loop Feat 0: -0.6352502703666687
Epoch 1, Loop Adj 0: -0.6394328474998474
Epoch 2: -0.6394328474998474
Mem used: 303MB
best_loss: tensor(-0.6321, device='cuda:1')
best_loss: tensor(-0.6322, device='cuda:1')
final loss: -0.6458556652069092
Test:
Test: 0.8884785819793205
0.8884785819793205
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.80it/s]100%|██████████| 2/2 [00:00<00:00,  4.32it/s]100%|██████████| 2/2 [00:00<00:00,  4.23it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1, Loop Feat 0: -0.5683419704437256
Epoch 1, Loop Adj 0: -0.565250813961029
Epoch 2: -0.565250813961029
Mem used: 142MB
best_loss: tensor(-0.5711, device='cuda:1')
final loss: -0.5729096531867981
Test:
Test: 0.8689069423929099
0.8689069423929099
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.88it/s]100%|██████████| 2/2 [00:00<00:00,  3.16it/s]100%|██████████| 2/2 [00:00<00:00,  3.11it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1, Loop Feat 0: -0.6048406958580017
Epoch 1, Loop Adj 0: -0.602256715297699
Epoch 2: -0.602256715297699
Mem used: 142MB
best_loss: tensor(-0.6116, device='cuda:1')
final loss: -0.6034384965896606
Test:
Test: 0.9209748892171344
0.9209748892171344
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.69it/s]100%|██████████| 2/2 [00:00<00:00,  3.08it/s]100%|██████████| 2/2 [00:00<00:00,  3.02it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1, Loop Feat 0: -0.5829558968544006
Epoch 1, Loop Adj 0: -0.5788702368736267
Epoch 2: -0.5788702368736267
Mem used: 142MB
best_loss: tensor(-0.6015, device='cuda:1')
final loss: -0.5925431251525879
Test:
Test: 0.9069423929098966
0.9069423929098966
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.91it/s]100%|██████████| 2/2 [00:00<00:00,  2.69it/s]100%|██████████| 2/2 [00:00<00:00,  2.72it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1, Loop Feat 0: -0.6225632429122925
Epoch 1, Loop Adj 0: -0.6248863339424133
Epoch 2: -0.6248863339424133
Mem used: 326MB
best_loss: tensor(-0.6360, device='cuda:1')
final loss: -0.6312823295593262
Test:
Test: 0.8840472673559823
0.8840472673559823
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.70it/s]100%|██████████| 2/2 [00:00<00:00,  2.91it/s]100%|██████████| 2/2 [00:00<00:00,  2.88it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1, Loop Feat 0: -0.6187004446983337
Epoch 1, Loop Adj 0: -0.6222240328788757
Epoch 2: -0.6222240328788757
Mem used: 640MB
best_loss: tensor(-0.6226, device='cuda:1')
final loss: -0.6271462440490723
Test:
Test: 0.9191285081240768
0.9191285081240768
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.57it/s]100%|██████████| 2/2 [00:00<00:00,  2.91it/s]100%|██████████| 2/2 [00:00<00:00,  2.85it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1, Loop Feat 0: -0.5792756676673889
Epoch 1, Loop Adj 0: -0.5806665420532227
Epoch 2: -0.5806665420532227
Mem used: 142MB
best_loss: tensor(-0.5863, device='cuda:1')
final loss: -0.5764027237892151
Test:
Test: 0.870384047267356
0.870384047267356
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.22it/s]100%|██████████| 2/2 [00:00<00:00,  3.72it/s]100%|██████████| 2/2 [00:00<00:00,  3.64it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1, Loop Feat 0: -0.5849084258079529
Epoch 1, Loop Adj 0: -0.5802290439605713
Epoch 2: -0.5802290439605713
Mem used: -352MB
best_loss: tensor(-0.5931, device='cuda:1')
final loss: -0.5887001752853394
Test:
Test: 0.9154357459379616
0.9154357459379616
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.96it/s]100%|██████████| 2/2 [00:00<00:00,  2.80it/s]100%|██████████| 2/2 [00:00<00:00,  2.82it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.597933292388916
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1, Loop Feat 0: -0.6155417561531067
Epoch 1, Loop Adj 0: -0.5988264679908752
Epoch 2: -0.5988264679908752
Mem used: 142MB
best_loss: tensor(-0.6044, device='cuda:1')
final loss: -0.6134594678878784
Test:
Test: 0.8707533234859675
0.8707533234859675
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.08it/s]100%|██████████| 2/2 [00:00<00:00,  3.44it/s]100%|██████████| 2/2 [00:00<00:00,  3.38it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1, Loop Feat 0: -0.6186010241508484
Epoch 1, Loop Adj 0: -0.6178416013717651
Epoch 2: -0.6178416013717651
Mem used: 142MB
best_loss: tensor(-0.6109, device='cuda:1')
final loss: -0.621484100818634
Test:
Test: 0.871861152141802
0.871861152141802
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.05, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 263
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.48it/s]100%|██████████| 2/2 [00:00<00:00,  3.87it/s]100%|██████████| 2/2 [00:00<00:00,  3.81it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1, Loop Feat 0: -0.6352502703666687
Epoch 1, Loop Adj 0: -0.6394328474998474
Epoch 2: -0.6394328474998474
Mem used: 284MB
best_loss: tensor(-0.6364, device='cuda:1')
final loss: -0.6497703790664673
Test:
Test: 0.8866322008862629
0.8866322008862629
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=0, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8899556868537666, 0.9364844903988183, 0.9564254062038404, 0.8268094534711965, 0.9180206794682423, 0.9387001477104875, 0.9405465288035451, 0.896602658788774]
flatten test: 0.9129431314623339
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  1.87it/s]100%|██████████| 2/2 [00:01<00:00,  1.91it/s]100%|██████████| 2/2 [00:01<00:00,  1.90it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5643996000289917
Epoch 0, Loop Adj 0: -0.5682570338249207
Epoch 1, Loop Feat 0: -0.5681930184364319
Epoch 1, Loop Adj 0: -0.5650941729545593
Epoch 2: -0.5650941729545593
Mem used: 442MB
best_loss: tensor(-0.5652, device='cuda:1')
final loss: -0.5658480525016785
Test:
Test: 0.8777695716395865
0.8777695716395865
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=1, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8940177252584933, 0.9638109305760709, 0.973781388478582, 0.8751846381093058, 0.9516248153618907, 0.9427621861152142, 0.9630723781388478, 0.888109305760709]
flatten test: 0.9315454209748892
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.79it/s]100%|██████████| 2/2 [00:00<00:00,  3.15it/s]100%|██████████| 2/2 [00:00<00:00,  3.09it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6048153042793274
Epoch 0, Loop Adj 0: -0.5982421636581421
Epoch 1, Loop Feat 0: -0.604722797870636
Epoch 1, Loop Adj 0: -0.602121114730835
Epoch 2: -0.602121114730835
Mem used: 330MB
best_loss: tensor(-0.6055, device='cuda:1')
final loss: -0.5962332487106323
Test:
Test: 0.9327917282127031
0.9327917282127031
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=2, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9394387001477105, 0.9663958641063516, 0.9678729689807977, 0.8220088626292467, 0.9449778434268833, 0.9527326440177253, 0.9497784342688331, 0.9279911373707533]
flatten test: 0.9338995568685377
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.27it/s]100%|██████████| 2/2 [00:00<00:00,  3.59it/s]100%|██████████| 2/2 [00:00<00:00,  3.53it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5952046513557434
Epoch 0, Loop Adj 0: -0.5870212316513062
Epoch 1, Loop Feat 0: -0.5828128457069397
Epoch 1, Loop Adj 0: -0.5787475109100342
Epoch 2: -0.5787475109100342
Mem used: 142MB
best_loss: tensor(-0.5958, device='cuda:1')
final loss: -0.5868319272994995
Test:
Test: 0.9231905465288035
0.9231905465288035
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=3, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9405465288035451, 0.9726735598227474, 0.9793205317577548, 0.835672082717873, 0.9686115214180206, 0.9401772525849336, 0.9597488921713442, 0.9272525849335302]
flatten test: 0.9405003692762186
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.40it/s]100%|██████████| 2/2 [00:00<00:00,  3.58it/s]100%|██████████| 2/2 [00:00<00:00,  3.33it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6317718029022217
Epoch 0, Loop Adj 0: -0.6189055442810059
Epoch 1, Loop Feat 0: -0.6224187016487122
Epoch 1, Loop Adj 0: -0.6247559189796448
Epoch 2: -0.6247559189796448
Mem used: -1522MB
best_loss: tensor(-0.6323, device='cuda:1')
best_loss: tensor(-0.6324, device='cuda:1')
final loss: -0.6264697909355164
Test:
Test: 0.8851550960118169
0.8851550960118169
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=4, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8666912850812407, 0.9527326440177253, 0.9630723781388478, 0.7887740029542097, 0.9508862629246676, 0.9110044313146234, 0.9464549483013294, 0.8899556868537666]
flatten test: 0.9086964549483013
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.67it/s]100%|██████████| 2/2 [00:00<00:00,  3.97it/s]100%|██████████| 2/2 [00:00<00:00,  3.92it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.61754310131073
Epoch 0, Loop Adj 0: -0.6241229176521301
Epoch 1, Loop Feat 0: -0.6185882687568665
Epoch 1, Loop Adj 0: -0.6221091747283936
Epoch 2: -0.6221091747283936
Mem used: 142MB
best_loss: tensor(-0.6181, device='cuda:1')
final loss: -0.6196419596672058
Test:
Test: 0.931314623338257
0.931314623338257
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=5, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.8892171344165436, 0.9564254062038404, 0.946824224519941, 0.8570901033973413, 0.9039881831610044, 0.9423929098966026, 0.9464549483013294, 0.8788774002954209]
flatten test: 0.9151587887740029
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.48it/s]100%|██████████| 2/2 [00:00<00:00,  2.52it/s]100%|██████████| 2/2 [00:00<00:00,  2.51it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.579364538192749
Epoch 0, Loop Adj 0: -0.5762823820114136
Epoch 1, Loop Feat 0: -0.5791143178939819
Epoch 1, Loop Adj 0: -0.5805226564407349
Epoch 2: -0.5805226564407349
Mem used: 312MB
best_loss: tensor(-0.5798, device='cuda:1')
best_loss: tensor(-0.5800, device='cuda:1')
final loss: -0.569482684135437
Test:
Test: 0.8870014771048744
0.8870014771048744
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=6, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9401772525849336, 0.9734121122599705, 0.9630723781388478, 0.845642540620384, 0.9590103397341211, 0.9146971935007385, 0.9346381093057607, 0.9401772525849336]
flatten test: 0.9338533973412112
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.54it/s]100%|██████████| 2/2 [00:00<00:00,  2.71it/s]100%|██████████| 2/2 [00:00<00:00,  2.68it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5863558650016785
Epoch 0, Loop Adj 0: -0.5957563519477844
Epoch 1, Loop Feat 0: -0.5847688913345337
Epoch 1, Loop Adj 0: -0.5800756216049194
Epoch 2: -0.5800756216049194
Mem used: 548MB
best_loss: tensor(-0.5870, device='cuda:1')
final loss: -0.584602952003479
Test:
Test: 0.9298375184638109
0.9298375184638109
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=7, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.922821270310192, 0.9638109305760709, 0.9700886262924667, 0.7758493353028065, 0.9453471196454948, 0.9342688330871491, 0.9527326440177253, 0.895864106351551]
flatten test: 0.9200978581979321
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.16it/s]100%|██████████| 2/2 [00:00<00:00,  3.76it/s]100%|██████████| 2/2 [00:00<00:00,  3.66it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.5979332327842712
Epoch 0, Loop Adj 0: -0.6096894145011902
Epoch 1, Loop Feat 0: -0.6154036521911621
Epoch 1, Loop Adj 0: -0.5986817479133606
Epoch 2: -0.5986817479133606
Mem used: 142MB
best_loss: tensor(-0.5986, device='cuda:1')
best_loss: tensor(-0.5986, device='cuda:1')
final loss: -0.608213484287262
Test:
Test: 0.878138847858198
0.878138847858198
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=8, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9302067946824224, 0.9719350073855244, 0.9708271787296898, 0.7976366322008862, 0.9615952732644018, 0.939069423929099, 0.9523633677991138, 0.9442392909896603]
flatten test: 0.9334841211225997
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  3.56it/s]100%|██████████| 2/2 [00:00<00:00,  3.43it/s]100%|██████████| 2/2 [00:00<00:00,  3.44it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6055585741996765
Epoch 0, Loop Adj 0: -0.6212823987007141
Epoch 1, Loop Feat 0: -0.6184852719306946
Epoch 1, Loop Adj 0: -0.6177217364311218
Epoch 2: -0.6177217364311218
Mem used: 142MB
best_loss: tensor(-0.6064, device='cuda:1')
final loss: -0.6142771244049072
Test:
Test: 0.8759231905465288
0.8759231905465288
/home/yy/tta/GTrans/gtransform_adj.py:136: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  edge_index_id = (2*self.n - row-1)*row//2 + col - row -1 # // is important to get the correct result
/home/yy/tta/GTrans/gtransform_adj.py:341: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  + (n - row_idx) * ((n - row_idx) - 1) // 2
===========
Namespace(dataset='cora', debug=1, dropout=0, epochs=10, existing_space=1, finetune=0, gpu_id=1, hidden=32, loop_adj=1, loop_feat=4, loss='LC', lr=0.001, lr_adj=0.01, lr_feat=1e-06, margin=-1, model='GCN', nlayers=2, normalize_features=True, ood=1, ratio=0.0005, seed=9, strategy='dropedge', tent=0, test_val=1, tune=1, weight_decay=0.001, with_bn=1)
Namespace(K=3, T=1, beta=1.0, cached=False, cpu=False, data_dir='../data', dataset='cora', device=0, directed=False, display_step=100, dropout=0.0, epochs=10, gat_heads=4, gcnii_alpha=0.1, gcnii_lamda=1.0, gnn='gcn', gnn_gen='gcn', gpr_alpha=0.1, hidden_channels=32, lp_alpha=0.1, lr=0.01, lr_a=0.005, method='erm', no_bn=False, num_layers=2, num_sample=5, rocauc=False, runs=5, sub_dataset='', weight_decay=0.001)
Train num nodes 2708 | num classes 9 | num node feats 1443
Val num nodes 2708 | num classes 9 | num node feats 1443
Test 0 num nodes 2708 | num classes 9 | num node feats 1443
Test 1 num nodes 2708 | num classes 9 | num node feats 1443
Test 2 num nodes 2708 | num classes 9 | num node feats 1443
Test 3 num nodes 2708 | num classes 9 | num node feats 1443
Test 4 num nodes 2708 | num classes 9 | num node feats 1443
Test 5 num nodes 2708 | num classes 9 | num node feats 1443
Test 6 num nodes 2708 | num classes 9 | num node feats 1443
Test 7 num nodes 2708 | num classes 9 | num node feats 1443
GCN(
  (layers): ModuleList(
    (0): GCNConv(1443, 32)
    (1): GCNConv(32, 9)
  )
  (bns): ModuleList(
    (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Test accs: [0.9512555391432792, 0.9623338257016248, 0.9571639586410635, 0.7799113737075333, 0.9442392909896603, 0.9394387001477105, 0.9457163958641064, 0.9471935007385525]
flatten test: 0.9284065731166913
using validation as test...
====learning on this graph===
n_perturbations: 2
  0%|          | 0/2 [00:00<?, ?it/s]/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
 50%|█████     | 1/2 [00:00<00:00,  2.22it/s]100%|██████████| 2/2 [00:00<00:00,  2.94it/s]100%|██████████| 2/2 [00:00<00:00,  2.80it/s]
/home/yy/miniconda3/envs/torch1121/lib/python3.8/site-packages/torch_geometric/deprecation.py:22: UserWarning: 'dropout_adj' is deprecated, use 'dropout_edge' instead
  warnings.warn(out)
Epoch 0, Loop Feat 0: -0.6313088536262512
Epoch 0, Loop Adj 0: -0.6408476829528809
Epoch 1, Loop Feat 0: -0.6351457238197327
Epoch 1, Loop Adj 0: -0.6392912268638611
Epoch 2: -0.6392912268638611
Mem used: 142MB
best_loss: tensor(-0.6318, device='cuda:1')
best_loss: tensor(-0.6319, device='cuda:1')
final loss: -0.6470464468002319
Test:
Test: 0.8884785819793205
0.8884785819793205
